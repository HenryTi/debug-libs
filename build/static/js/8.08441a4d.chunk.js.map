{"version":3,"sources":["face/home/formTest.tsx"],"names":["schema","name","type","required","min","max","maxLength","arr","formData","a","b","c","number","integer","text","arr1","$a","arr1-b","arr1-c","n1","replacer","key","value","MyApp","react__WEBPACK_IMPORTED_MODULE_0__","[object Object]","this","label","v","onFormButtonClick","context","__awaiter","msg","isRow","JSON","stringify","form","data","arrName","alert","onBChange","row","arrTemplet","className","tonva_tools__WEBPACK_IMPORTED_MODULE_2__","arrTemplet1","uiSchema","rules","getValue","items","id","widget","pickId","rows","submit","Templet","defaultValue","list","title","n2","n3","uiSchema1","selectable","deletable","restorable","schema3","uiSchema3","src","_logo_svg__WEBPACK_IMPORTED_MODULE_3___default","alt","onButtonClick","beforeShow","fieldLabelSize","setVisible","__decorate","mobx__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__"],"mappings":"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","file":"static/js/8.08441a4d.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { Form, Field, UiSchema, Schema, Context, ArrSchema, UiArr, IntSchema, StringSchema, UiTextAreaItem, UiIdItem, ButtonSchema, UiTextItem, NumSchema } from 'tonva-tools';\r\nimport logo from './logo.svg';\r\n\r\nconst schema: Schema = [\r\n  {name: 'id', type: 'id', required: true},\r\n  {name: 'number', type: 'number', required: true},\r\n  {name: 'integer', type: 'integer', min:10, max: 30} as IntSchema, \r\n  {name: 'date', type: 'date'},\r\n  {name: 'text', type: 'string', maxLength: 5} as StringSchema,\r\n  {\r\n    name: 'arr1', \r\n    type: 'arr', \r\n    arr: [\r\n      {name: 'selected', type: 'boolean'},\r\n      {name: 'arr1-c', type: 'string'},\r\n      {name: 'arr1-b', type: 'string'}, \r\n      {name: 'arr1-a', type: 'string'},\r\n      {name: 'n1', type: 'integer'},\r\n      {name: 'n2', type: 'integer'},\r\n      {name: 'n3', type: 'integer'},\r\n      //{name: 'add', type: 'button'}\r\n    ]\r\n  } as ArrSchema,\r\n  {name: 'submit', type: 'submit'}\r\n];\r\n\r\nconst formData = {\r\n  a: 'aa', b: 'bb', c: 'ccc',\r\n  number: 2, integer: 3,\r\n  text: '???',\r\n  arr1: [\r\n    {$a:1, 'arr1-b': 'arb--dddd0', 'arr1-c': 'arr1-c-cc-cc0', n1:1},\r\n    {$a:1, 'arr1-b': 'arb--dddd1', 'arr1-c': 'arr1-c-cc-cc1', n1:2},\r\n    {$a:1, 'arr1-b': 'arb--dddd1', 'arr1-c': 'asd fsd farr1-c-cc-cc1', n1:3},\r\n  ]\r\n};\r\n\r\nconst replacer = (key:string, value:any) => {\r\n  if (key === '$row') return;\r\n  return value;\r\n}\r\n\r\nexport class MyApp extends React.Component {\r\n  @observable a = 1;\r\n  @observable arr:any[] = [{label:'a', v:1}, {label:'b', v:2}];\r\n  onFormButtonClick = async (name:string, context:Context) => {\r\n    let msg:string;\r\n    if (context.isRow === false) {\r\n      msg = `button ${name} clicked!\r\n      form data: ${JSON.stringify(context.form.data, replacer)}\r\n`\r\n    }\r\n    else {\r\n      msg = `button ${context.arrName}.${name} clicked!\r\nrow data: ${JSON.stringify(context.data, replacer)}\r\nform data: ${JSON.stringify(context.form.data, replacer)}\r\n`;\r\n    }\r\n    alert(msg);\r\n    return 'submit error';\r\n  }\r\n\r\n  private onBChange = (row:any)=>{\r\n    if (row.$a === 1) {\r\n      row.$a = 0;\r\n    }\r\n    else {\r\n      row.$a = 1;\r\n    } \r\n  };\r\n\r\n  arrTemplet = ()=> {\r\n    return <div className=\"form-inline\">\r\n      <Field name=\"selected\" />\r\n      <Field name=\"arr1-c\" />\r\n      <Field name=\"n1\" /><Field name=\"n2\" /><Field name=\"n3\" />\r\n    </div>\r\n  };\r\n\r\n  arrTemplet1 = <div className=\"form-inline\">\r\n    <Field name=\"selected\" />\r\n    <Field name=\"arr1-c\" />\r\n    <Field name=\"n1\" /><Field name=\"n2\" /><Field name=\"n3\" />\r\n  </div>;\r\n\r\n  /*\r\n  <div className=\"font-weight-bold\">{data['n1']*data['n2']}</div>\r\n  <Field name=\"arr1-a\" onChanged={(value:any, prev:any) => data['arr1-b']=value} />\r\n  {data.$a !== 1? <span style={{textDecoration:'line-through'}}>a11111</span>: <span>a00000</span>} - {data['arr1-c']} -\r\n  <input onChange={()=>this.onBChange(data)} placeholder=\"BBBBB Changed\" />\r\n  {data.$a && <Field name=\"arr1-b\" />}\r\n  {data.$a === 1? <Field name=\"arr1-b\" />:\r\n  */\r\n  private uiSchema: UiSchema = {\r\n    rules: (context:Context) => {\r\n      let n = context.getValue('number');\r\n      let i = context.getValue('integer');\r\n      if (n===i) return undefined;\r\n      return {integer: 'number must equal intege!'};\r\n    },\r\n    items: {\r\n      id: {widget: 'id', pickId: async (context:Context, name:string, value:number)=>{alert('输入2');return 2;}} as UiIdItem,\r\n      text: {widget: 'textarea', rows: 7} as UiTextAreaItem,\r\n      a: {widget: 'text'},\r\n      integer: {\r\n        rules: (value:any) => {if (value === 19) return '不能为19';else return undefined}, \r\n        //Templet:(context:Context, name:string, value:any)=><>{name}: {value}</>\r\n      },\r\n      submit: {widget: 'button', className: 'btn btn-primary', Templet: <><i className=\"fa fa-diamond\" />&nbsp; 提交</>},\r\n      arr1: {\r\n        widget: 'arr', \r\n        Templet: this.arrTemplet1, // this.arrTemplet,\r\n        //rules: (context:Context) => {return 'err'},\r\n        items: {\r\n          \"arr1-c\": {className: \"w-max-6c\" },          \r\n          n1: {widget:'radio', className:'flex-grow-1', defaultValue:2, list:[{value:1, title:'小提琴'}, {value:2, title:'钢琴'}, {value:3, title:'单簧管'}]},\r\n          n2: {widget:'select', list:[{value:null, title:' - '},{value:1, title:'数字1'}, {value:2}]},\r\n          n3: {widget:'range'}\r\n        }\r\n      } as UiArr\r\n    },\r\n    Templet: () => <>\r\n      <div className=\"form-inline\">\r\n        <Field name=\"id\" />\r\n        af sasdf as fd<b>dasdf asdf sad</b><Field name=\"number\"/> &nbsp;\r\n        <Field name=\"integer\" />&nbsp; <i>adsfas dfasdf asd fas fda</i>\r\n        <div className=\"font-weight-bold text-success h3\">\r\n          nnn<Field name=\"date\"/>\r\n          <br />\r\n        </div>\r\n        <div className=\"font-weight-bold text-success h3\">\r\n          text<Field name=\"text\"/>\r\n        </div>\r\n      </div>\r\n      <Field name='arr1' />\r\n      <div className=\"text-center\"><Field name='submit' /></div>\r\n    </>,\r\n    //selectable: true,\r\n    //deletable: true,\r\n    //restorable: true,\r\n  }\r\n  private uiSchema1: UiSchema = {\r\n    items: {\r\n      id: {widget: 'id', pickId: async (context:Context, name:string, value:number)=>{return 2;}} as UiIdItem,\r\n      a: {widget: 'text'},\r\n      submit: {widget: 'button', className: 'btn btn-primary'},\r\n      arr1: {\r\n        widget: 'arr', \r\n        //Templet: this.change,\r\n        items: {\r\n          n1: {widget:'radio', list:[{title:' - '},{value:1, title:'数字1'}, {value:2}]},\r\n          n2: {widget:'select', list:[{value:null, title:' - '},{value:1, title:'数字1'}, {value:2}]},\r\n          n3: {widget:'range'}\r\n        }\r\n      } as UiArr\r\n    },\r\n    selectable: true,\r\n    deletable: true,\r\n    restorable: true,\r\n  }\r\n\r\n  private schema3 = [\r\n    {name:'a', type: 'string', maxLength:10} as StringSchema,\r\n    {name:'b', type: 'number', max: 20, min:10} as NumSchema,\r\n    {name:'submit', type:'submit'} as ButtonSchema,\r\n  ];\r\n\r\n  private uiSchema3 = {\r\n    items: {\r\n      a: {widget: 'text', label:'欢迎输入a', rules:(value:any)=>{if (value==='a') return 'a is not valid'}} as UiTextItem,\r\n\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          <h1 className=\"App-title\">Welcome to React</h1>\r\n        </header>\r\n        <p className=\"App-intro\">\r\n          To get started, edit <code>src/App.tsx</code> and save to reload.\r\n        </p>\r\n        <div className=\"App-container container text-left\">\r\n          <Form className=\"mb-3\" \r\n            schema={schema} uiSchema={this.uiSchema} formData={formData} \r\n            onButtonClick={this.onFormButtonClick}\r\n            beforeShow={context => {\r\n              //context.setDisabled('integer', true)\r\n            }} />\r\n          <Form className=\"mb-3\" \r\n            schema={schema} uiSchema={this.uiSchema1} formData={formData} \r\n            onButtonClick={this.onFormButtonClick}\r\n            fieldLabelSize={2}\r\n            beforeShow={context => {\r\n              context.setVisible('date', false)\r\n            }} \r\n            />\r\n\r\n          <Form\r\n            schema={this.schema3} uiSchema={this.uiSchema3}\r\n          />\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyApp;\r\n"],"sourceRoot":""}