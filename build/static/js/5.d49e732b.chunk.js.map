{"version":3,"sources":["tonva-react-usql/controllers/map/vMain.tsx","tonva-react-usql/controllers/map/inputValues.tsx","tonva-react-usql/controllers/map/cMap.ts","tonva-react-usql/controllers/map/index.ts","tonva-react-usql/controllers/action/vActionMain.tsx","tonva-react-usql/controllers/action/cAction.ts","tonva-react-usql/controllers/action/index.ts","tonva-react-usql/controllers/pending/vPendingMain.tsx","tonva-react-usql/controllers/pending/cPending.ts","tonva-react-usql/controllers/pending/index.ts","tonva-react-usql/controllers/history/vHistoryMain.tsx","tonva-react-usql/controllers/history/cHistory.ts","tonva-react-usql/controllers/history/index.ts","../node_modules/util/util.js","../node_modules/util/support/isBufferBrowser.js","../node_modules/inherits/inherits_browser.js","face/member/tab.tsx","tonva-react-usql/controllers/CVEntity.tsx","tonva-react-usql/controllers/form/viewModel.tsx","tonva-react-usql/tools/jsonStringify.ts","tonva-react-usql/tools/tv.tsx","tonva-react-usql/tools/index.ts","tonva-react-usql/controllers/index.ts","tonva-react-usql/controllers/form/vBand.tsx","tonva-react-usql/controllers/form/vSubmit.tsx","tonva-react-usql/controllers/form/rule.ts","tonva-react-usql/controllers/form/vField/vField.tsx","tonva-react-usql/controllers/form/vField/vComputeField.tsx","tonva-react-usql/controllers/form/vArr.tsx","tonva-react-usql/controllers/form/vField/vTuidField.tsx","tonva-react-usql/controllers/form/bandsBuilder.ts","tonva-react-usql/controllers/form/vField/buildVmField.ts","tonva-react-usql/controllers/form/vForm.tsx","tonva-react-usql/controllers/form/index.ts","tonva-react-usql/entities/entity.ts","tonva-react-usql/entities/tuid.ts","tonva-react-usql/entities/action.ts","tonva-react-usql/entities/sheet.ts","tonva-react-usql/entities/query.ts","tonva-react-usql/entities/book.ts","tonva-react-usql/entities/history.ts","tonva-react-usql/entities/map.ts","tonva-react-usql/entities/pending.ts","tonva-react-usql/entities/entities.ts","tonva-react-usql/entities/index.ts","tonva-react-usql/controllers/link/cLink.tsx","tonva-react-usql/controllers/link/index.ts","tonva-react-usql/controllers/CApp.tsx","tonva-react-usql/controllers/icons.tsx","tonva-react-usql/controllers/ControllerUsq.ts","tonva-react-usql/centerApi.ts","tonva-react-usql/controllers/sheet/vMain.tsx","tonva-react-usql/controllers/sheet/vNew.tsx","tonva-react-usql/controllers/sheet/vSheetView.tsx","tonva-react-usql/controllers/sheet/vEdit.tsx","tonva-react-usql/controllers/sheet/vSheetAction.tsx","tonva-react-usql/controllers/sheet/vSchema.tsx","tonva-react-usql/controllers/sheet/vArchives.tsx","tonva-react-usql/controllers/sheet/vList.tsx","tonva-react-usql/controllers/sheet/vArchived.tsx","tonva-react-usql/controllers/sheet/vSheet.tsx","tonva-react-usql/controllers/sheet/vSaved.tsx","tonva-react-usql/controllers/sheet/vSheetProcessing.tsx","tonva-react-usql/controllers/sheet/cSheet.ts","tonva-react-usql/controllers/sheet/index.ts","tonva-react-usql/controllers/tuid/vTuidMain.tsx","tonva-react-usql/controllers/tuid/vTuidEdit.tsx","tonva-react-usql/controllers/tuid/vTuidSelect.tsx","tonva-react-usql/controllers/tuid/vTuidView.tsx","tonva-react-usql/controllers/tuid/vTuidInfo.tsx","tonva-react-usql/controllers/tuid/pageItems.ts","tonva-react-usql/controllers/tuid/vTuidList.tsx","tonva-react-usql/controllers/tuid/cTuid.ts","tonva-react-usql/controllers/tuid/index.tsx","tonva-react-usql/controllers/book/vBookMain.tsx","tonva-react-usql/controllers/book/cBook.ts","tonva-react-usql/controllers/usq/vUsq.tsx","tonva-react-usql/controllers/usq/cUsq.tsx","tonva-react-usql/controllers/usq/index.ts","tonva-react-usql/controllers/query/defaultRow.tsx","tonva-react-usql/controllers/query/vQueryMain.tsx","tonva-react-usql/controllers/query/vQuerySelect.tsx","tonva-react-usql/controllers/query/cQuery.ts","tonva-react-usql/controllers/query/index.ts"],"names":["vMain_VMapMain","CVEntity","[object Object]","this","itemRender","item","index","react","ItemRow","Object","index_module","add","remove","right","content","border","valuesView","tuid","box","children","isLeaf","keyIndex","values","keyUI","controller","keyUIs","keyContent","valuesContent","none","keyNone","isFrom","className","onClick","addClick","tonva_react_form","name","removeClick","undefined","viewModel","x","items","render","classnames_default","tools","param","openPage","view","tonva_tools","header","label","inputValues_VInputValues","onValuesSubmit","inputValues_awaiter","ceasePage","vForm","getValues","returnCall","createForm","openPageElement","cMap_MapItem","parent","mobx_module","array","deep","cMap_CMap","cMap_awaiter","keysLen","keyFields","length","keysLast","idx","keyField","kn","_tuid","searchParam","data","p","ki","id","searchOnKey","useId","idBox","boxId","arr1","entity","fields","ret","vCall","i","f","type","null","nullable","entities","actions","submit","rowIndex","findIndex","v","push","createItem","row","splice","removeCeased","cUsq","cTuidMain","Main","getLable","confirmDelete","res","lodash_default","a","template","confirm","map","v0","len","del","keys","schemaFrom","q","queries","all","query","clone","ui","retFields","returns","r","newItem","addItem","showVPage","VMapMain","key","val","n","_ownerField","cTuidSelect","callParam","call","getIdFromObj","__webpack_require__","d","__webpack_exports__","vActionMain_VActionMain","onSubmit","__awaiter","closePage","resultPage","mainPage","back","cAction_CAction","VActionMain","vPendingMain_VPendingMain","cPending_CPending","VPendingMain","vHistoryMain_VHistoryMain","cHistory_CHistory","VHistoryMain","global","process","formatRegExp","exports","format","isString","objects","arguments","inspect","join","args","str","String","replace","Number","JSON","stringify","_","isNull","isObject","deprecate","fn","msg","isUndefined","apply","noDeprecation","warned","throwDeprecation","Error","traceDeprecation","console","trace","error","debugEnviron","debugs","obj","opts","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styleType","style","styles","value","recurseTimes","isFunction","constructor","prototype","primitive","simple","isNumber","formatPrimitive","visibleKeys","hash","forEach","arrayToHash","getOwnPropertyNames","isError","indexOf","formatError","isRegExp","RegExp","toString","isDate","Date","output","base","braces","isArray","toUTCString","l","hasOwnProperty","formatProperty","match","formatArray","pop","reduce","prev","cur","numLinesEst","reduceToSingleString","desc","getOwnPropertyDescriptor","get","set","split","line","substr","ar","Array","arg","re","objectToString","e","o","pad","debuglog","NODE_ENV","PUBLIC_URL","REACT_APP_CENTER_HOST","NODE_DEBUG","toUpperCase","test","pid","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","red","yellow","special","number","boolean","string","date","regexp","isNullOrUndefined","isSymbol","isPrimitive","isBuffer","months","prop","log","time","getHours","getMinutes","getSeconds","getDate","getMonth","inherits","origin","module","copy","fill","readUInt8","create","ctor","superCtor","super_","enumerable","writable","configurable","TempCtor","tonvaApp","TabController","renderProductRow","discription","react__WEBPACK_IMPORTED_MODULE_0__","renderContent","tonva_react_form__WEBPACK_IMPORTED_MODULE_4__","mobx_react__WEBPACK_IMPORTED_MODULE_3__","tonva_tools__WEBPACK_IMPORTED_MODULE_5__","logMark","cApp","tonva_react_usql__WEBPACK_IMPORTED_MODULE_1__","load","logStep","getCUsq","tuidProduct","search","__decorate","mobx__WEBPACK_IMPORTED_MODULE_2__","CEntity","_ControllerUsq__WEBPACK_IMPORTED_MODULE_3__","super","setPrototypeOf","typeName","icon","_icons__WEBPACK_IMPORTED_MODULE_2__","_super","beforeStart","loadSchema","mode","options","buildFormOptions","_form__WEBPACK_IMPORTED_MODULE_1__","setValues","submitCaption","arrNewCaption","arrEditCaption","arrTitleNewButton","arrFields","new","formUI","form","arrs","inputs","buildInputs","buildFieldsInputs","arr","arrFieldInputs","field","fieldUI","select","buildSelect","buildContent","placeHolder","getTuidPlaceHolder","cSelectFrom","getValue","autoList","idFromItem","queryName","cQuerySelect","VEntity","tonva_tools__WEBPACK_IMPORTED_MODULE_0__","ViewModel","PureJSONContent","JSONContent","RowContent","mobx_react__WEBPACK_IMPORTED_MODULE_1__","_tools__WEBPACK_IMPORTED_MODULE_2__","vm","replacer","jsonStringify","Tv","tuidValue","nullUI","ttv","bi","templet","_$tuid","_$com","t","controllers","com","getTuidContent","valueFromId","boxIdContent","tv","_CApp__WEBPACK_IMPORTED_MODULE_0__","_form_viewModel__WEBPACK_IMPORTED_MODULE_10__","vBand_VBand","addRow","VFieldBand","vField","vBand_VArrBand","vArr","setAddRow","vBand_VSubmitBand","vSubmit","vSubmit_VSubmit","onClickSubmit","isOk","disabled","caption","Rule","RuleRequired","defy","trim","NaN","RuleNum","RuleInt","isNaN","isInteger","RuleMin","min","check","RuleMax","max","vField_VField","fieldRes","init","buildRules","rules","required","checkRules","errors","err","readonly","FormMode","edit","editable","vField_decorate","vField_VInputControl","renderError","ref","input","setInputValue","onFocus","onBlur","computeFields","onChange","evt","parse","currentTarget","setValue","redDot","inputGroup","suffix","ctrlCN","inputType","readOnly","placeholder","maxLength","onKeyPress","RedMark","color","position","left","top","VStringField","size","KeyCode_Neg","KeyCode_Dot","vField_VNumberControl","event","ch","charCode","extraChars","onKeyDot","onKeyNeg","preventDefault","text","_a","vField_VIntField","VDecField","VTextField","VDateTimeField","vComputeField_VComputeField","react_default","createElement","vArr_VArr","ownerForm","onEditRow","rowPage","vArr_awaiter","valueBoxs","onRowChanged","rowValues","$owner","list","reset","merge","renderItem","rowContent","assign","showRow","editRow","editSubmitCaption","internalAddRow","newSubmitCaption","button","paddingTop","paddingBottom","arrsRes","arrRes","newSubmit","editSubmit","arrUI","vForm_VForm","clear","buttonStyle","textAlign","paddingLeft","paddingRight","overflow","vTuidField_VTuidField","vTuidField_awaiter","showInfo","alert","bandsBuilder_BandsBuilder","layout","formItems","bandsOnFly","bandsFromLayout","bands","bandsFromFields","bandFromArr","bandFromField","formItem","rfn","resFromName","buildVField","vFields","vArrs","onFormSubmit","buildFormValues","buildBands","bandColl","bandsBuilder","build","band","getVFields","getVArr","getVSubmit","order","rows","slice","initValues","arrList","ctrl","fieldName","valueFromFieldName","propName","buildFieldValues","buildObservableValues","vForm_decorate","tab","ln","Entity","typeId","fieldMaps","sys","sName","jName","tvApi","usqApi","find","schema","setSchema","buildFieldTuid","buildArrFieldsTuid","getTuid","arrName","fieldArr","toLowerCase","an","packRow","packArr","charCodeAt","substring","result","escape","unpackRow","unpackArr","ch0","c","fLen","to","vals","maxCacheSize","tuid_Tuid","queue","waitingIds","cache","buildIdBoxer","BoxId","defineProperty","toJSON","idName","unique","from","_id","owner","delete","defer","util","has","cacheTuids","moveToHead","shift","proxied","cacheValue","api","getApiFrom","tuids","tuidIds","cacheTuidFieldValues","afterCacheId","tuidGet","divName","cacheFieldsInValue","arrValues","tuidDiv","getDiv","props","params","tuidSave","retId","inId","pageStart","pageSize","searchArr","tuidSearch","tuidArrGet","tuidArrSave","tuidArrPos","showTuid","TuidMain","divs","TuidDiv","cacheIds","usq","cUsqFrm","getImportUsq","retErrors","cUsqFrom","cTuidMainFromName","cTuidEditFromName","cTuidInfoFromName","cTuidSelectFromName","proxies","$proxy","action_Action","pack","action","sheet_Sheet","states","op","ops","appId","sheetSave","app","flow","state","sheetAction","brief","unpackSheet","flows","getSheet","getArchive","unpack","sheetArchive","sheetArchives","stateSheets","sheet_PageStateItems","stateSheetCount","s","count","sheet","getStateSheets","query_Query","isPaged","more","hasMore","startField","getTime","page","unpackReturns","$page","table","book_Book","queryApiName","history_History","map_Map","newAction","newQuery","pending_Pending","fieldDefaultValue","entities_Entities","sheets","books","maps","histories","pendings","tuidArr","actionArr","sheetArr","queryArr","bookArr","mapArr","historyArr","pendingArr","loadIds","clearCacheTimer","accesses","loadAccess","buildEntities","loadEntities","access","buildTuids","buildAccess","div","tuidUrl","cacheTimer","setTimeout","clearTimeout","proxyColl","newTuid","fromType","fromObj","book","history","pending","parts","usqId","newBook","newMap","newHistory","newSheet","newPending","buildSheet","mainFields","url","ownerField","af","Link","cLink_CLink","start","CApp","tonva_tools__WEBPACK_IMPORTED_MODULE_1__","cImportUsqs","cUsqCollection","renderRow","nick","tonva_react_form__WEBPACK_IMPORTED_MODULE_2__","onRowClick","unit","selectUnitPage","logout","appUnits","appOwner","appName","usqs","appUsq","usqOwner","usqName","urlDebug","ws","token","newCUsq","retError","CUsq","_usq__WEBPACK_IMPORTED_MODULE_3__","cUsqArr","apiName","VAppMain","main","loadUnits","document","location","startsWith","isProduction","loadAppUnits","showUnsupport","loadUsqs","message","clearPrevPages","showMainPage","loaded","registerReceiveHandler","renderView","user","sheetTypeId","sheetId","getCUsqFromId","navSheet","_centerApi__WEBPACK_IMPORTED_MODULE_4__","userAppUnits","appContent","appPage","entityIcons","react__WEBPACK_IMPORTED_MODULE_0___default","tonva_react_form__WEBPACK_IMPORTED_MODULE_1__","fixWidth","ControllerUsq","centerApi","vMain_VSheetMain","newClick","schemaClick","archivesClick","sheetStateClick","renderState","badge","reactstrap_es","getStateLabel","statesCount","filter","isDev","vNew_VSheetNew","vNew_awaiter","valuesWithBox","onSave","leftFlowStyle","width","vSheetView_VSheetView","flowRow","preState","sheetView","removed","sheetData","vEdit_VSheetEdit","vEdit_awaiter","saveSheet","controllers_form","vSheetAction_VSheetAction","actionClick","vSheetAction_awaiter","acted","deleteClick","editClick","editSheet","actionButtons","startButtons","no","stateLabel","cn","getActionLabel","outline","backPage","vSchema_VSheetSchema","schemaStringify","vArchives_VArchives","archiveClick","vArchives_awaiter","processing","archiveRow","getArchives","vList_VSheetList","rowClick","vList_awaiter","onScrollBottom","pageStateItems","listRow","stateName","first","vArchived_VArchived","vSheet_VSheet","vSaved_VSheetSaved","restart","vSaved_awaiter","buttons","vSheetProcessing_VSheetProcessing","cSheet_CSheet","cSheet_awaiter","showSaved","loadStateSheetCount","createPageStateItems","VSheetMain","body","onSheet","me","$","sheetActPreState","sheetActState","changeStateCount","curState","delta","stateCount","VSheetNew","sheetNew","VSheetSaved","sheetSaved","VSheetEdit","sheetEdit","VSheetSchema","VArchives","VArchived","VSheetList","VSheetAction","VSheetProcessing","showArchived","showAction","showProcessing","onEvent","getSheetData","$type","inBrief","getArchived","getStateUI","actionName","sheetTitle","disc","save","vTuidMain_VTuidMain","onNew","onList","onSearch","link","newButton","proxyLinks","entityRender","entityClick","vTuidEdit_VTuidEdit","next","vTuidEdit_awaiter","finish","u","setError","isCalling","editView","vTuidSelect_VTuidSelect","mainView","initKey","onSearchMain","PageItems","renderMainRow","clickMainRow","before","vTuidSelect_awaiter","searchMain","mainRowContent","showDiv","divView","renderDivRow","clickDivRow","divRowContent","showMain","ownerValue","divItems","getDivItems","vTuidView_VTuidView","vTuidView_awaiter","buildForm","vTuidInfo_VTuidInfo","pageItems_TuidPageItems","vTuidList_VTuidMainListBase","vTuidList_awaiter","clickRow","callOnSelected","rowKey","ownerTop","ownerObj","ownerId","onSelected","VTuidMainList","cTuid_CTuid","buildPageItems","cTuid_CTuidMain","linkFromName","cFrom","VTuidMain","VTuidEdit","VTuidList","itemChanged","cTuidInfo","cTuid_CTuidInfo","CTuidEdit","CTuidList","cTuid_CTuidSelect","VTuidSelect","VTuidInfo","vBookMain_VBookMain","cBook_CBook","VBookMain","vUsq_VUsq","isSysVisible","linkItem","cLink","lists","tuidLinks","mapLinks","sheetLinks","actionLinks","queryLinks","bookLinks","historyLinks","pendingLinks","Fragment","isVisible","controllers_link","cMap","cSheet","cAction","cQuery","cBook","cHistory","cPending","lowerPropertyName","cUsq_CUsq","schemaLoaded","CTuidMain","controllers_tuid","CTuidSelect","CTuidInfo","CQuery","CQuerySelect","CMap","CAction","CSheet","CBook","CHistory","controllers_history","CPending","acc","baseUrl","loadEntites","g","collection","j","warn","tuidPlaceHolder","en","sheetFromTypeId","startSheet","entityName","cTuidEdit","entityType","cFromName","tUI","cEntity","getUI","inputContent","VUsq","DefaultRow","vQueryMain_VQueryMain","resetPage","loadPage","replacePage","pageResult","queryResult","again","renderExtra","rightClose","queryRow","vQuerySelect_VQuerySelect","vQuerySelect_awaiter","selectRow","vQuerySelect_QueryPageItems","cQuery_CQueryBase","cQuery_CQuery","VQueryMain","cQuery_CQuerySelect","VQuerySelect"],"mappings":"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","file":"static/js/5.d49e732b.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport className from 'classnames';\r\nimport { List, LMR, FA } from 'tonva-react-form';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { tv } from '../../tools';\r\nimport { Map } from '../../entities';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CMap, MapItem, MapKey, MapUI } from './cMap';\r\nimport { PureJSONContent } from '../form/viewModel';\r\n\r\nexport class VMapMain extends VEntity<Map, MapUI, CMap> {\r\n    private isFrom: boolean;\r\n\r\n    async showEntry(param?:any) {\r\n        this.isFrom = this.controller.isFrom;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    itemRender = (item:MapItem, index:number) => {\r\n        return <this.ItemRow item={item} />;\r\n    }\r\n\r\n    private ItemRow = observer(({item}: {item:MapItem}) => {\r\n        let {tuid, box, children, isLeaf, keyIndex, values} = item;\r\n        let keyUI = this.controller.keyUIs[keyIndex];\r\n        let {content:keyContent, valuesContent, none:keyNone} = keyUI;\r\n        let add, remove;\r\n        if (this.isFrom === false) {\r\n            add = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.addClick(item)}>\r\n                <FA name=\"plus\" />\r\n            </button>;\r\n            remove = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.removeClick(item)}>\r\n                <FA className=\"text-info\" name=\"trash\" />\r\n            </button>;\r\n        }\r\n        let right;\r\n        if (isLeaf === false) {\r\n            if (keyIndex === 0)\r\n                right = add;\r\n            else\r\n                right = <>{remove} &nbsp; {add}</>;\r\n        }\r\n        else if (keyIndex > 0) {\r\n            right = remove;\r\n        }\r\n        let content, border, valuesView;\r\n        if (isLeaf === true) {\r\n            content = undefined; //<div className=\"ml-5\">leaf</div>;\r\n            if (values) {\r\n                //valuesView = null; // 现在不显示values content了\r\n                valuesView = (valuesContent || PureJSONContent)(values, this.x);\r\n            }\r\n        }\r\n        else {\r\n            border = \"border-bottom\";\r\n            let none = keyNone && keyNone(this.x);\r\n            content = <List \r\n                className=\"ml-4\" \r\n                items={children} \r\n                item={{onClick:undefined, render:this.itemRender}}\r\n                none={none} />\r\n        }\r\n        return <div className=\"d-flex flex-column\">\r\n            <LMR className={className('px-3', 'py-2', border)} \r\n                right={right}\r\n            >\r\n                <div className=\"py-1\">{tv(box, keyContent, this.x)}</div>\r\n                <div className=\"py-1 font-weight-bold\">{valuesView}</div>\r\n            </LMR>\r\n            {content}\r\n        </div>;\r\n    });\r\n\r\n    protected get view() { return () => <Page header={this.label}>\r\n            <List items={this.controller.items} item={{className:'my-2', onClick:undefined, render:this.itemRender}} />\r\n        </Page>\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { VEntity } from \"../CVEntity\";\r\nimport { MapUI, CMap } from \"./cMap\";\r\nimport { Map } from \"../../entities\";\r\nimport { Page } from \"tonva-tools\";\r\nimport { VForm } from '../form';\r\n\r\nexport class VInputValues extends VEntity<Map, MapUI, CMap> {\r\n    private vForm: VForm;\r\n\r\n    async showEntry(param?:any) {\r\n        this.vForm = this.createForm(this.onValuesSubmit);\r\n        this.openPageElement(<this.view />);\r\n    }\r\n\r\n    private onValuesSubmit = async () => {\r\n        this.ceasePage();\r\n        let values = this.vForm.getValues();\r\n        this.returnCall(values);\r\n    }\r\n\r\n    private view = () => {\r\n        return <Page>\r\n            {this.vForm.render()}\r\n        </Page>\r\n    }\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\nimport { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Map, Tuid, BoxId, Field, TuidMain, fieldDefaultValue } from \"../../entities\";\r\nimport { VMapMain } from \"./vMain\";\r\nimport { observable } from \"mobx\";\r\nimport { PureJSONContent } from '../form/viewModel';\r\nimport { VInputValues } from './inputValues';\r\n\r\nexport interface MapKey {\r\n    content: (values, x?:any) => JSX.Element;\r\n    valuesContent?: (values, x?:any) => JSX.Element;\r\n    none?: (x:any)=>string;\r\n}\r\n\r\nexport interface MapUI extends EntityUI {\r\n    CMap?: typeof CMap;\r\n    keys?: MapKey[],\r\n}\r\n\r\nexport class MapItem {\r\n    parent: MapItem;\r\n    tuid: Tuid;\r\n    box: BoxId;\r\n    isLeaf: boolean;\r\n    keyIndex:number;\r\n    children: MapItem[] = observable.array([], {deep: true});\r\n    values: any;\r\n    constructor(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number) {\r\n        this.parent = parent;\r\n        this.tuid = tuid;\r\n        this.box = box;\r\n        this.keyIndex = keyIndex;\r\n        this.isLeaf = false;\r\n    }\r\n}\r\n\r\nexport class CMap extends CEntity<Map, MapUI> {\r\n    isFrom: boolean;\r\n    items:MapItem[];\r\n    keyFields: Field[];\r\n    keyUIs: MapKey[];\r\n\r\n    protected async internalStart() {\r\n        let {keys, schemaFrom} = this.entity;\r\n        this.isFrom = schemaFrom !== undefined;\r\n        let q = this.entity.queries.all;\r\n        let result = await q.query({});\r\n        //let data = await this.entity.unpackReturns(res);\r\n        let ret = result.ret;\r\n        let keysLen = keys.length;\r\n        this.keyUIs = _.clone(this.ui.keys || []);\r\n        this.keyFields = [];\r\n        let retFields = q.returns[0].fields;\r\n        for (let i=0; i<keysLen; i++) {\r\n            this.keyFields.push(retFields[i]);\r\n            if (i >= this.keyUIs.length) {\r\n                this.keyUIs.push({\r\n                    content: PureJSONContent,\r\n                });\r\n            }\r\n        }\r\n        this.items = observable([]);\r\n        let item:MapItem = undefined;\r\n        for (let r of ret) {\r\n            let newItem = this.addItem(item, r);\r\n            if (newItem !== undefined) {\r\n                this.items.push(newItem);\r\n                item = newItem;\r\n            }\r\n        }\r\n\r\n        await this.showVPage(this.VMapMain);\r\n    }\r\n\r\n    private createItem(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number, values?:any) {\r\n        let item = new MapItem(parent, tuid, box, keyIndex);\r\n        if (keyIndex === this.keyFields.length - 1) {\r\n            item.isLeaf = true;\r\n            item.values = values;\r\n        }\r\n        return item;\r\n    }\r\n\r\n    addItem(item:MapItem, row:any):MapItem {\r\n        let ret:MapItem = undefined;\r\n        let keysLen = this.keyFields.length;\r\n        let p = item;\r\n        for (let i=0;i<keysLen;i++) {\r\n            let key = this.keyFields[i];\r\n            let {name} = key;\r\n            let tuid = key._tuid;\r\n            let val:BoxId = row[name];\r\n            if (val === undefined) break;\r\n            let {id} = val;\r\n            if (i === 0) {\r\n                if (id === 0) continue;\r\n                if (p === undefined || p.box.id !== id) {\r\n                    ret = p = this.createItem(undefined, tuid, val, i, row);\r\n                }\r\n                continue;\r\n            }\r\n            let {children, box} = p;\r\n            let len = children.length;\r\n            if (len > 0) {\r\n                let n = children[len-1];\r\n                if (n.box.id === id) {\r\n                    p = n;\r\n                    continue;\r\n                }\r\n            }\r\n            if (id > 0) {\r\n                children.push(p = this.createItem(p, tuid, val, i, row));\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    async searchOnKey(keyField:Field, param):Promise<number> {\r\n        let {_tuid, _ownerField} = keyField;\r\n        let cTuidSelect = this.cUsq.cTuidSelect(_tuid);\r\n        let callParam = param;\r\n        if (_ownerField !== undefined) {\r\n            callParam = param[_ownerField.name];\r\n            if (typeof callParam === 'object') {\r\n                callParam = callParam.id;\r\n            }\r\n        }\r\n        let ret = await cTuidSelect.call(callParam);\r\n        return _tuid.getIdFromObj(ret);\r\n    }\r\n\r\n    addClick = async(item:MapItem) => {\r\n        let {keyIndex, children} = item;\r\n        let keysLen = this.keyFields.length;\r\n        let keysLast = keysLen-1;\r\n        let idx = keyIndex + 1;\r\n        if (idx >= keysLen) return;\r\n        let keyField = this.keyFields[idx];\r\n        let kn = keyField.name;\r\n        let tuid = keyField._tuid;\r\n        let searchParam = {} as any;\r\n        let data = {} as any;\r\n        for (let p=item;p!==undefined;p=p.parent) {\r\n            let {keyIndex:ki, box} = p;\r\n            let kn = this.keyFields[ki].name;\r\n            //searchParam[kn] = data['_' + kn] = box.id;\r\n            searchParam[kn] = data[kn] = box.id;\r\n        }\r\n\r\n        let id = await this.searchOnKey(keyField, searchParam);\r\n        if (id === undefined || id <= 0) return;\r\n        tuid.useId(id);\r\n        let idBox = tuid.boxId(id);\r\n        let arr1 = {} as any;\r\n        let values:any = {};\r\n        if (keyIndex+1===keysLast) {\r\n            tuid.useId(id);\r\n            //values[kn] = arr1['_' + kn] = idBox;\r\n            values[kn] = arr1[kn] = idBox;\r\n            if (this.entity.fields.length > 0) {\r\n                let ret = await this.vCall(VInputValues, data);\r\n                for (let i in ret) {\r\n                    //values[i] = arr1['_' + i] = ret[i];\r\n                    values[i] = arr1[i] = ret[i];\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            //values[kn] = data['_' + kn] = idBox;\r\n            values[kn] = data[kn] = idBox;\r\n            for (let i=idx+1;i<keysLast;i++) {\r\n                //data['_' + this.keyFields[i].name] = 0;\r\n                data[this.keyFields[i].name] = 0;\r\n            }\r\n            // 填map的key field 0 值\r\n            //arr1['_' + this.keyFields[keysLast].name] = 0;\r\n            arr1[this.keyFields[keysLast].name] = 0;\r\n            let {fields} = this.entity;\r\n            for (let f of fields) {\r\n                let {name, type, null:nullable} = f;\r\n                if (!(nullable === true)) {\r\n                    //arr1['_' + f.name] = fieldDefaultValue(type);\r\n                    arr1[f.name] = fieldDefaultValue(type);\r\n                }\r\n            }\r\n        }\r\n        data.arr1 = [arr1];\r\n        await this.entity.actions.add.submit(data);\r\n        let rowIndex = children.findIndex(v => v.box.id === id);\r\n        if (rowIndex < 0) {\r\n            children.push(this.createItem(item, tuid, idBox, idx, values));\r\n        }\r\n        else {\r\n            let {fields} = this.entity;\r\n            if (fields !== undefined && fields.length > 0) {\r\n                let row = children[rowIndex];\r\n                children.splice(rowIndex, 1);\r\n                row.values = values;\r\n                /*\r\n                for (let f of fields) {\r\n                    let {name:fn} = f;\r\n                    row.values[fn] = values[fn];\r\n                }*/\r\n                children.splice(rowIndex, 0, row);\r\n            }\r\n        }\r\n        this.removeCeased();\r\n    }\r\n\r\n    removeClick = async(item:MapItem) => {\r\n        let keyField = this.keyFields[item.keyIndex];\r\n        let tuid = keyField._tuid;\r\n        let cTuidMain = this.cUsq.cTuidMain(tuid.Main);\r\n        let label = cTuidMain.getLable(tuid);\r\n        let confirmDelete:_.TemplateExecutor = \r\n            this.res.confirmDelete \r\n            || _.template('do you really want to remove ${label}?');\r\n        if (confirm(confirmDelete({label:label})) === false) return;\r\n        let map:Map = this.entity;\r\n        let data = {} as any;\r\n        let arr1 = data['arr1'] = [];\r\n        let v0 = {} as any;\r\n        arr1.push(v0);\r\n        for (let p=item; p!==undefined;p=p.parent) {\r\n            let ki=p.keyIndex;\r\n            //v0['_'+this.keyFields[ki].name] = p.box.id;\r\n            v0[this.keyFields[ki].name] = p.box.id;\r\n        }\r\n        let len = this.keyFields.length;\r\n        for (let i=item.keyIndex+1; i<len; i++) {\r\n            let k = this.keyFields[i];\r\n            //v0['_'+k.name] = -1;\r\n            v0[k.name] = -1;\r\n        }\r\n        await map.actions.del.submit(data);\r\n        let children = item.parent.children;\r\n        let index = children.findIndex(v => v === item);\r\n        if (index >= 0) children.splice(index, 1);\r\n    }\r\n\r\n    protected get VMapMain():typeof VMapMain {return VMapMain}\r\n}\r\n","export * from './cMap';\r\nexport * from './vMain';\r\n","import * as React from 'react';\r\nimport { VPage, Page } from 'tonva-tools';\r\nimport { jsonStringify } from '../../tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CAction, ActionUI } from './cAction';\r\nimport { Action } from '../../entities';\r\n\r\nexport class VActionMain extends VEntity<Action, ActionUI, CAction> {\r\n    protected vForm: VForm;\r\n    protected returns: any;\r\n\r\n    async showEntry(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        this.openPage(this.mainPage);\r\n    }\r\n\r\n    private onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        this.returns = await this.controller.submit(values);\r\n        this.closePage();\r\n        this.openPage(this.resultPage);\r\n    }\r\n\r\n    protected mainPage = () => {\r\n        let {label} = this.controller;\r\n        return <Page header={label}>\r\n            {this.vForm.render('mx-3 my-2')}\r\n        </Page>;\r\n    }\r\n\r\n    protected resultPage = () => {\r\n        let {label} = this.controller;\r\n        return <Page header={label} back=\"close\">\r\n            完成！\r\n            <pre>\r\n                {jsonStringify(this.returns)}\r\n            </pre>\r\n        </Page>;\r\n    }\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Action } from \"../../entities\";\r\nimport { VActionMain } from \"./vActionMain\";\r\n\r\nexport interface ActionUI extends EntityUI {\r\n    CAction?: typeof CAction;\r\n    //main: typeof VActionMain,\r\n}\r\n\r\nexport class CAction extends CEntity<Action, ActionUI> {\r\n    protected async internalStart() {\r\n        await this.showVPage(this.VActionMain);\r\n    }\r\n\r\n    protected get VActionMain():typeof VActionMain {return VActionMain}\r\n\r\n    async submit(values:any) {\r\n        return this.entity.submit(values);\r\n    }\r\n}\r\n","export * from './cAction';\r\nexport * from './vActionMain';\r\n","import * as React from 'react';\r\nimport { TuidMain, Pending, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CPending, PendingUI } from './cPending';\r\n\r\nexport class VPendingMain extends VEntity<Pending, PendingUI, CPending> {\r\n    async showEntry(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        pending\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Pending } from \"../../entities\";\r\nimport { VPendingMain } from \"./vPendingMain\";\r\n\r\nexport interface PendingUI extends EntityUI {\r\n    CPending?: typeof CPending;\r\n    main: typeof VPendingMain,\r\n}\r\n\r\nexport class CPending extends CEntity<Pending, PendingUI> {\r\n    protected async internalStart() {\r\n        await this.showVPage(this.VPendingMain);\r\n    }\r\n\r\n    protected get VPendingMain():typeof VPendingMain {return VPendingMain}\r\n}\r\n","export * from './cPending';\r\nexport * from './vPendingMain';\r\n","import * as React from 'react';\r\nimport { TuidMain, History, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CHistory, HistoryUI } from './cHistory';\r\n\r\nexport class VHistoryMain extends VEntity<History, HistoryUI, CHistory> {\r\n    async showEntry(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        History\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { History } from \"../../entities\";\r\nimport { VHistoryMain } from \"./vHistoryMain\";\r\n\r\nexport interface HistoryUI extends EntityUI {\r\n    CHistory?: typeof CHistory;\r\n    main: typeof VHistoryMain,\r\n}\r\n\r\nexport class CHistory extends CEntity<History, HistoryUI> {\r\n    protected async internalStart() {\r\n        await this.showVPage(this.VHistoryMain);\r\n    }\r\n\r\n    protected get VHistoryMain():typeof VHistoryMain {return VHistoryMain}\r\n}\r\n","export * from './cHistory';\r\nexport * from './vHistoryMain';\r\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar formatRegExp = /%[sdj%]/g;\n\nexports.format = function (f) {\n  if (!isString(f)) {\n    var objects = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function (x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n\n    switch (x) {\n      case '%s':\n        return String(args[i++]);\n\n      case '%d':\n        return Number(args[i++]);\n\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n\n      default:\n        return x;\n    }\n  });\n\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n\n  return str;\n}; // Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\n\n\nexports.deprecate = function (fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function () {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n\n      warned = true;\n    }\n\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\nvar debugs = {};\nvar debugEnviron;\n\nexports.debuglog = function (set) {\n  if (isUndefined(debugEnviron)) debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n\n      debugs[set] = function () {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function () {};\n    }\n  }\n\n  return debugs[set];\n};\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n\n/* legacy: obj, showHidden, depth, colors*/\n\n\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  }; // legacy...\n\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  } // set default options\n\n\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\n\nexports.inspect = inspect; // http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\n\ninspect.colors = {\n  'bold': [1, 22],\n  'italic': [3, 23],\n  'underline': [4, 24],\n  'inverse': [7, 27],\n  'white': [37, 39],\n  'grey': [90, 39],\n  'black': [30, 39],\n  'blue': [34, 39],\n  'cyan': [36, 39],\n  'green': [32, 39],\n  'magenta': [35, 39],\n  'red': [31, 39],\n  'yellow': [33, 39]\n}; // Don't use 'blue' not visible on cmd.exe\n\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return \"\\x1B[\" + inspect.colors[style][0] + 'm' + str + \"\\x1B[\" + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\nfunction arrayToHash(array) {\n  var hash = {};\n  array.forEach(function (val, idx) {\n    hash[val] = true;\n  });\n  return hash;\n}\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect && value && isFunction(value.inspect) && // Filter out the util module, it's inspect function is special\n  value.inspect !== exports.inspect && // Also filter out any prototype objects using the circular check.\n  !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n\n    return ret;\n  } // Primitive types cannot have properties\n\n\n  var primitive = formatPrimitive(ctx, value);\n\n  if (primitive) {\n    return primitive;\n  } // Look up the keys of the object.\n\n\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  } // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n\n\n  if (isError(value) && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  } // Some type of object without properties can be shortcutted.\n\n\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '',\n      array = false,\n      braces = ['{', '}']; // Make Array say that they are Array\n\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  } // Make functions say that they are functions\n\n\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  } // Make RegExps say that they are RegExps\n\n\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  } // Make dates with properties first say the date\n\n\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  } // Make error with message first say the error\n\n\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n  var output;\n\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function (key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n  return reduceToSingleString(output, base, braces);\n}\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value)) return ctx.stylize('undefined', 'undefined');\n\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '').replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n\n  if (isNumber(value)) return ctx.stylize('' + value, 'number');\n  if (isBoolean(value)) return ctx.stylize('' + value, 'boolean'); // For some reason typeof null is \"object\", so special case here.\n\n  if (isNull(value)) return ctx.stylize('null', 'null');\n}\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n\n  keys.forEach(function (key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));\n    }\n  });\n  return output;\n}\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || {\n    value: value[key]\n  };\n\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function (line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function (line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n\n    name = JSON.stringify('' + key);\n\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"').replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function (prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] + (base === '' ? '' : base + '\\n ') + ' ' + output.join(',\\n  ') + ' ' + braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n} // NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\n\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\n\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\n\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\n\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\n\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\n\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\n\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\n\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) && (objectToString(e) === '[object Error]' || e instanceof Error);\n}\n\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || typeof arg === 'symbol' || // ES6 symbol\n  typeof arg === 'undefined';\n}\n\nexports.isPrimitive = isPrimitive;\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']; // 26 Feb 16:19:34\n\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()), pad(d.getMinutes()), pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n} // log is just a thin wrapper to console.log that prepends a timestamp\n\n\nexports.log = function () {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\n\n\nexports.inherits = require('inherits');\n\nexports._extend = function (origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n  var keys = Object.keys(add);\n  var i = keys.length;\n\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object' && typeof arg.copy === 'function' && typeof arg.fill === 'function' && typeof arg.readUInt8 === 'function';\n};","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n\n    var TempCtor = function TempCtor() {};\n\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  };\n}","import * as React from 'react';\r\nimport { CApp, CUsq, TuidMain } from 'tonva-react-usql';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { List } from 'tonva-react-form';\r\nimport { Loading, nav } from 'tonva-tools';\r\n\r\nconst tonvaApp = 'JKDev/jkOrder';\r\n\r\nexport class TabController {\r\n    private cApp: CApp;\r\n    private cUsq: CUsq;\r\n    private tuidProduct: TuidMain;\r\n\r\n    @observable private items:any[];\r\n\r\n    async start() {\r\n        nav.logMark();\r\n        this.cApp = new CApp(tonvaApp);\r\n        await this.cApp.load();\r\n        nav.logStep('await this.cApp.load()');\r\n        this.cUsq = this.cApp.getCUsq('JKDev/jkOrder');\r\n        this.tuidProduct = this.cUsq.tuid('product');\r\n        let ret = await this.tuidProduct.search('', 0, 100);\r\n        nav.logStep('let ret = await this.tuidProduct.search(-, 0, 100)');\r\n        this.items = ret;\r\n    }\r\n\r\n    private renderProductRow = (row:any, index:number) => {\r\n        let {id, discription} = row;\r\n        return <div>{id}: {discription}</div>;\r\n    }\r\n\r\n    private renderContent = () => {\r\n        return <div>product loaded\r\n            {this.items.length}\r\n            <List items={this.items} item={{render: this.renderProductRow, key:(item)=>item.id}} />\r\n        </div>\r\n    }\r\n\r\n    render = observer(() => {\r\n        return this.items === undefined? <Loading /> : this.renderContent();\r\n    });\r\n}\r\n\r\n/*\r\nexport const test = (cApp: CJkOrderApp, productList:any[]) => {\r\n    return <div>test {} {}</div>;\r\n}\r\nlet cApp = new CJkOrderApp(27);\r\n\r\ncApp: async () => await cApp.load(),\r\nloadProduct: async () => {\r\n    return ret;\r\n}\r\n\r\ninterface MemberTabProps {\r\n    cApp: CJkOrderApp;\r\n}\r\n\r\nexport default class MemberTab extends React.Component<MemberTabProps> {\r\n    private cUsq: CUsq;\r\n    constructor(props: MemberTabProps) {\r\n        super(props);\r\n        let {cApp} = props;\r\n        this.cUsq = cApp.getCUsq('JKDev/jkOrder');\r\n        let s = null;\r\n    }\r\n\r\n    render() {\r\n        return this.props.cApp.renderMain();\r\n    }\r\n}\r\n\r\n/*\r\nclass CTuidController extends Controller {\r\n    protected cUsq: CUsq;\r\n    protected cTuid: CTuidMain;\r\n    constructor(cUsq: CUsq, name: string) {\r\n        super({});\r\n    }\r\n    protected async internalStart() {\r\n    }\r\n}\r\n\r\nclass CProductList extends Controller {\r\n    protected product: CTuidMain;\r\n\r\n    constructor(cUsq: CUsq) {\r\n        super({});\r\n        this.product = product;\r\n    }\r\n\r\n    protected async internalStart() {\r\n    }\r\n\r\n\r\n}\r\n*/\r\n\r\n\r\n","import * as React from 'react';\r\nimport { Controller, VPage, View } from 'tonva-tools';\r\nimport { Entity, Field, TuidMain } from '../entities';\r\nimport { CUsq } from './usq/cUsq';\r\nimport { VForm, FieldInputs, FieldCall, FormOptions, FormMode } from './form';\r\nimport { CQuerySelect } from './query';\r\nimport { FormUI, FieldTuidUI } from './formUI';\r\nimport { entityIcons } from './icons';\r\nimport { ControllerUsq } from './ControllerUsq';\r\n\r\nexport interface EntityUI {\r\n    form?: FormUI;\r\n}\r\n\r\nexport abstract class CEntity<T extends Entity, UI extends EntityUI> extends ControllerUsq {\r\n    constructor(cUsq: CUsq, entity: T, ui: UI, res: any) {\r\n        super(cUsq, res);\r\n        Object.setPrototypeOf(this.x, cUsq.x);\r\n        let {name, typeName} = entity;\r\n        this.entity = entity;\r\n        this.ui = ui; // || entityUI.ui;\r\n        this.label = this.res.label || name;\r\n        this.icon = entityIcons[typeName];\r\n    }\r\n    readonly entity: T;\r\n    readonly ui: UI;\r\n\r\n    protected async beforeStart():Promise<boolean> {\r\n        if (await super.beforeStart() === false) return false;\r\n        await this.entity.loadSchema();\r\n        return true;\r\n    }\r\n\r\n    createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode) {\r\n        let options = this.buildFormOptions(mode);\r\n        let ret = new VForm(options, onSubmit);\r\n        ret.setValues(values);\r\n        return ret;\r\n    }\r\n\r\n    private buildFormOptions(mode?:FormMode):FormOptions {\r\n        let {fields, arrFields} = this.entity;\r\n        let none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton;\r\n        if (this.res !== undefined) {\r\n            none = this.res['none'];\r\n            submitCaption = this.res['submit'];\r\n            arrNewCaption = this.res['arrNew'];\r\n            arrEditCaption = this.res['arrEdit'];\r\n            arrTitleNewButton = this.res['arrTitleNewButton'];\r\n        }\r\n        if (none === undefined) {\r\n            none = this.cUsq.res['none'] || 'none';\r\n        }\r\n        if (submitCaption === undefined)\r\n            submitCaption = this.cUsq.res['submit'] || 'Submit';\r\n        if (arrNewCaption === undefined)\r\n            arrNewCaption = this.cUsq.res['arrNew'] || 'New';\r\n        if (arrEditCaption === undefined)\r\n            arrEditCaption = this.cUsq.res['arrEdit'] || 'Edit';\r\n        if (arrTitleNewButton === undefined)\r\n        arrTitleNewButton = this.cUsq.res['arrTitleNewButton'];\r\n        if (mode === undefined) mode = FormMode.new;\r\n        let formUI = this.ui.form;\r\n        let ret:FormOptions = {\r\n            fields: fields,\r\n            arrs: arrFields,\r\n            ui: formUI,\r\n            res: this.res || {},\r\n            inputs: this.buildInputs(formUI),\r\n            none: none,\r\n            submitCaption: submitCaption,\r\n            arrNewCaption: arrNewCaption,\r\n            arrEditCaption: arrEditCaption,\r\n            arrTitleNewButton: arrTitleNewButton,\r\n            mode: mode,\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildInputs(formUI: FormUI):FieldInputs {\r\n        let {fields, arrFields} = this.entity;\r\n        let ret:FieldInputs = {};\r\n        this.buildFieldsInputs(ret, fields, undefined, formUI);\r\n        if (arrFields !== undefined) {\r\n            for (let arr of arrFields) {\r\n                let {name, fields} = arr;\r\n                let items = formUI && formUI.items;\r\n                this.buildFieldsInputs(ret, fields, name, items && items[name] as FormUI);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildFieldsInputs(ret:FieldInputs, fields:Field[], arr:string, formUI: FormUI) {\r\n        if (arr !== undefined) {\r\n            let arrFieldInputs = ret[arr];\r\n            if (arrFieldInputs === undefined) {\r\n                ret[arr] = arrFieldInputs = {};\r\n                ret = arrFieldInputs;\r\n            }\r\n        }\r\n        for (let field of fields) {\r\n            let {name, _tuid} = field;\r\n            if (_tuid === undefined) continue;\r\n            let fieldUI = formUI && formUI.items && formUI.items[name] as FieldTuidUI;\r\n            ret[name] = {\r\n                select: this.buildSelect(field, arr, fieldUI),\r\n                content: this.buildContent(field, arr),\r\n                placeHolder: this.cUsq.getTuidPlaceHolder(_tuid),\r\n            };\r\n        }\r\n    }\r\n\r\n    protected buildSelect(field:Field, arr:string, fieldUI: FieldTuidUI):FieldCall {\r\n        return async (form:VForm, field:Field, values:any):Promise<any> => {\r\n            let {_tuid, _ownerField} = field;\r\n            let cTuidSelect = await (_tuid as TuidMain).cSelectFrom(); // this.cUsq.cTuidSelect(_tuid);\r\n            let param:any = undefined;\r\n            if (_ownerField !== undefined) param = form.getValue(_ownerField.name);\r\n            if (fieldUI && fieldUI.autoList === true) {\r\n                console.log('select search set param=empty string');\r\n                param = '';\r\n            }\r\n            let ret = await cTuidSelect.call(param);\r\n            cTuidSelect.removeCeased(); // 清除已经废弃的顶部页面\r\n            if (ret === undefined) return undefined;\r\n            let id = cTuidSelect.idFromItem(ret);\r\n            _tuid.useId(id);\r\n            return id;\r\n        };\r\n    }\r\n\r\n    protected buildContent(field:Field, arr:string): React.StatelessComponent<any> {\r\n        return;\r\n    }\r\n\r\n    cQuerySelect(queryName:string):CQuerySelect {\r\n        return this.cUsq.cQuerySelect(queryName);\r\n    }\r\n}\r\n\r\nexport abstract class VEntity<T extends Entity, UI extends EntityUI, C extends CEntity<T, UI>> extends VPage<C> {\r\n    protected readonly entity: T;\r\n    protected readonly ui: UI;\r\n    constructor(controller: C) {\r\n        super(controller);\r\n        this.entity = controller.entity;\r\n        this.ui = controller.ui;\r\n    }\r\n\r\n    get label():string {return this.controller.label}\r\n\r\n    //private _form_$: VForm;\r\n    protected createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode): VForm {\r\n        //if (this._form_$ !== undefined) return this._form_$;\r\n        return this.controller.createForm(onSubmit, values, mode);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { jsonStringify } from '../../tools';\r\n\r\nexport type TypeViewModel = typeof ViewModel;\r\nexport type TypeView = React.StatelessComponent<{vm: ViewModel, className?:string|string[]}>;\r\nexport type TypeContent = React.StatelessComponent<any>;\r\n\r\nexport abstract class ViewModel {\r\n    protected abstract get view(): TypeView;\r\n    render(className?:string|string[]):JSX.Element {\r\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\r\n        return React.createElement(this.view, {vm: this, className:className});\r\n    }\r\n}\r\n\r\nexport const PureJSONContent = (values, x?:any) => <>content: {jsonStringify(values)}</>;\r\nexport const JSONContent = observer(PureJSONContent);\r\nexport const RowContent = \r\n    (values) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>\r\n;\r\n","function replacer(key:string, value:any) {\r\n    let first = key.substr(0, 1);\r\n    switch (first) {\r\n        default: return value;\r\n        case '$':\r\n        case '_': return;\r\n    }\r\n}\r\n\r\nexport function jsonStringify(value:any) {\r\n    return JSON.stringify(value, replacer, ' ');\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { BoxId, Tuid } from \"../entities\";\r\nimport { PureJSONContent } from '../controllers';\r\n\r\ninterface Props {\r\n    tuidValue: number|BoxId, \r\n    ui?: (values?:any, x?:any)=>JSX.Element,\r\n    x?: any,\r\n    nullUI?: ()=>JSX.Element\r\n}\r\n\r\nfunction boxIdContent(bi: any, templet, x) {\r\n    let {id, _$tuid, _$com} = bi;\r\n    let t:Tuid = _$tuid;\r\n    if (t === undefined) {\r\n        if (templet !== undefined) return templet(bi, x);\r\n        return PureJSONContent(bi, x);\r\n    }\r\n    let com = templet || _$com;\r\n    if (com === undefined) {\r\n        com = bi._$com = t.getTuidContent();\r\n    }\r\n    let val = t.valueFromId(id);\r\n    if (typeof val === 'number') val = {id: val};\r\n    if (templet !== undefined) return templet(val, x);\r\n    return React.createElement(com, val);\r\n}\r\n\r\nconst Tv = observer(({tuidValue, ui, x, nullUI}:Props) => {\r\n    let ttv = typeof tuidValue;\r\n    switch (ttv) {\r\n        default:\r\n            if (ui === undefined)\r\n                return <>{ttv}-{tuidValue}</>;\r\n            else\r\n                return ui(tuidValue, x);\r\n        case 'undefined':\r\n            if (nullUI === undefined) return <>null</>;\r\n            return nullUI();\r\n        case 'object':\r\n            if (tuidValue === null) {\r\n                if (nullUI === undefined) return <>null</>;\r\n                return nullUI();\r\n            }\r\n            return boxIdContent(tuidValue, ui, x);\r\n        case 'number':\r\n            return <>id...{tuidValue}</>;\r\n    }\r\n});\r\n\r\nexport const tv = (tuidValue:number|BoxId, ui?:(values?:any, x?:any)=>JSX.Element, x?:any, nullUI?:()=>JSX.Element):JSX.Element => {\r\n    return <Tv tuidValue={tuidValue} ui={ui} x={x} nullUI={nullUI} />;\r\n};\r\n","export * from './jsonStringify';\r\nexport * from './tv';\r\n","export * from './CApp';\r\nexport * from './startApp';\r\nexport * from './usq';\r\nexport * from './action';\r\nexport * from './tuid';\r\nexport * from './sheet';\r\nexport * from './query';\r\nexport * from './map';\r\nexport * from './history';\r\nexport * from './pending';\r\nexport * from './form/viewModel';\r\nexport * from './form';\r\nexport * from './formUI';\r\nexport * from './ControllerUsq';\r\nexport * from './CVEntity';\r\nexport * from './link';\r\nexport * from './icons';\r\n","import * as React from 'react';\r\nimport { VField } from './vField';\r\nimport { VArr } from './vArr';\r\nimport { VSubmit } from './vSubmit';\r\nimport { uid } from 'tonva-react-form';\r\n\r\nexport abstract class VBand {\r\n    protected label: string;\r\n    protected view = () => <div />;\r\n\r\n    constructor(label:string) {\r\n        this.label = label;\r\n    }\r\n\r\n    render():JSX.Element {\r\n        //text-sm-right\r\n        return <div key={this.key} className=\"px-3\">\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\">\r\n                    {this.label}\r\n                </label>\r\n                <div className=\"col-sm-10\">\r\n                    {this.renderContent()}\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {}\r\n    get key() {return this.label}\r\n    public getVFields():VField[] {return;}\r\n    public getVArr():VArr {return;}\r\n    public getVSubmit():VSubmit {return;}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">content</div>;\r\n    }\r\n}\r\n\r\nexport interface FieldRes {\r\n    label: string;\r\n    placeHolder: string;\r\n    suffix: string;\r\n}\r\nexport class VFieldBand extends VBand {\r\n    protected vField:VField;\r\n    constructor(label:string, vField:VField) {\r\n        super(label);\r\n        this.vField = vField;\r\n    }\r\n\r\n    get key() {return this.vField.name}\r\n    public getVFields():VField[] {return [this.vField];}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return this.vField.render();\r\n        /*\r\n        <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\r\n            {this.vField.render()}\r\n        </div>;*/\r\n    }\r\n}\r\n\r\nexport class VArrBand extends VBand {\r\n    protected vArr:VArr;\r\n    constructor(label:string, vArr:VArr) {\r\n        super(label);\r\n        this.vArr = vArr;\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {this.vArr.setAddRow(addRow)}\r\n    get key() {return this.vArr.name}\r\n    public getVArr():VArr {return this.vArr;}\r\n\r\n    render():JSX.Element {\r\n        return <React.Fragment key={this.key}>\r\n            {this.vArr && this.vArr.render()}\r\n        </React.Fragment>;\r\n    }\r\n}\r\n\r\nexport class VFieldsBand extends VBand {\r\n    protected vFields: VField[];\r\n    constructor(label:string, vFields:VField[]) {\r\n        super(label);\r\n        this.vFields = vFields;\r\n    }\r\n\r\n    get key() {return this.vFields[0].name}\r\n    public getVFields():VField[] {return this.vFields;}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\r\n            fields\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class VSubmitBand extends VBand {\r\n    protected vSubmit: VSubmit;\r\n    constructor(vSubmit:VSubmit) {\r\n        super(undefined);\r\n        this.vSubmit = vSubmit;\r\n    }\r\n\r\n    get key() {return '$submit'}\r\n\r\n    public getVSubmit():VSubmit {return this.vSubmit;}\r\n\r\n    render():JSX.Element {\r\n        return <div key=\"$submit\" className=\"px-3\">\r\n            <div className=\"form-group row\">\r\n                <div className=\"offset-sm-2 col-sm-10\">\r\n                    {this.vSubmit.render()}\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames'\r\nimport { ViewModel } from \"./viewModel\";\r\nimport { VForm } from './vForm';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\nexport class VSubmit extends ViewModel {\r\n    private vForm: VForm;\r\n    constructor(vForm: VForm) {\r\n        super();\r\n        this.vForm = vForm;\r\n        this.caption = this.vForm.submitCaption;\r\n        this.className = 'btn btn-primary w-25';\r\n    }\r\n    @observable caption: string;\r\n    @observable className: string;\r\n\r\n    private onClickSubmit = async () => {\r\n        this.vForm.submit();\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let {isOk} = this.vForm;\r\n        return <button type=\"button\" \r\n            onClick={this.onClickSubmit}\r\n            className={this.className}\r\n            disabled={isOk === false}>\r\n            {this.caption}\r\n        </button>;\r\n    });\r\n}","\r\nexport abstract class Rule {\r\n    abstract check(defy:string[], value:any);\r\n}\r\n\r\nexport class RuleRequired extends Rule {\r\n    check(defy:string[], value:any) {\r\n        switch (typeof value) {\r\n            default:\r\n            case 'boolean': return;\r\n            case 'object':\r\n                if (value !== null) return;\r\n                break;\r\n            case 'string':\r\n                if ((value as string).trim().length > 0) return;\r\n                break;\r\n            case 'number':\r\n                if ((value as number) !== NaN) return;\r\n                break;\r\n            case 'undefined':\r\n                break;\r\n        }\r\n        defy.push('不能为空');\r\n    }\r\n}\r\n\r\nexport class RuleNum extends Rule {\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (n === NaN) defy.push('必须是数字');\r\n    }\r\n}\r\n\r\nexport class RuleInt extends Rule {\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (Number.isNaN(n) === true || Number.isInteger(n) === false) {\r\n            defy.push('必须是整数');\r\n        }\r\n    }\r\n}\r\n\r\nexport class RuleMin extends RuleNum {\r\n    constructor(min: number) {\r\n        super();\r\n        this.min = min;\r\n    }\r\n    min: number;\r\n    check(defy:string[], value:any) {\r\n        super.check(defy, value);\r\n        if (Number(value) < this.min) defy.push('不能小于' + this.min);\r\n    }\r\n}\r\n\r\nexport class RuleMax extends RuleNum {\r\n    constructor(max: number) {\r\n        super();\r\n        this.max = max;\r\n    }\r\n    max: number;\r\n    check(defy:string[], value:any) {\r\n        super.check(defy, value);\r\n        if (Number(value) > this.max) defy.push('不能小于' + this.max);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { computed, action } from 'mobx';\r\nimport classNames from 'classnames';\r\nimport { observer } from 'mobx-react';\r\nimport { FA } from 'tonva-react-form';\r\nimport { ViewModel } from \"../viewModel\";\r\nimport { VForm, FormMode } from '../vForm';\r\nimport { Rule, RuleRequired, RuleInt, RuleNum, RuleMin, RuleMax } from '../rule';\r\nimport { Field } from '../../../entities';\r\nimport { FieldRes } from '../vBand';\r\nimport { FieldUI, FieldInputUI, FieldStringUI, FieldNumberUI } from '../../formUI';\r\n\r\nexport abstract class VField extends ViewModel {\r\n    protected form: VForm;\r\n    protected fieldUI: FieldUI;\r\n    protected fieldRes:FieldRes;\r\n    protected field: Field;\r\n    protected rules: Rule[];\r\n    constructor(form:VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\r\n        super();\r\n        this.form = form;\r\n        this.field = field;\r\n        this.name = field.name;\r\n        this.fieldUI = fieldUI || {} as any;\r\n        this.fieldRes = fieldRes || {} as any;\r\n        this.init();\r\n    }\r\n\r\n    name: string;\r\n\r\n    protected init() {\r\n        this.buildRules();\r\n    }\r\n\r\n    protected buildRules() {\r\n        this.rules = [];\r\n        let {required} = this.fieldUI;\r\n        if (required === true || this.field !== undefined && this.field.null === false) {\r\n            this.rules.push(new RuleRequired);\r\n        }\r\n    }\r\n\r\n    @computed get checkRules(): string[] {\r\n        let defy = [];\r\n        for (let r of this.rules) r.check(defy, this.value);\r\n        return defy;\r\n    }\r\n\r\n    @computed get isOk() {\r\n        if (this.rules.length === 0) return true;\r\n        let defy = this.checkRules;\r\n        return defy.length === 0;\r\n    }\r\n\r\n    @computed get value() { return this.form.values[this.name]; }\r\n    setValue(v:any) {\r\n        this.form.values[this.name]=v; \r\n    }\r\n    get error() { return this.form.errors[this.name]; }\r\n    set error(err:any) { this.form.errors[this.name]=err; }\r\n    protected parse(str:string):any {return str;}\r\n    get readonly():boolean {\r\n        let {mode} = this.form;\r\n        return mode === FormMode.readonly || \r\n            mode === FormMode.edit && this.fieldUI.editable === false;\r\n    }\r\n}\r\n\r\nexport class VUnknownField extends VField {\r\n    protected view = () => {\r\n        //let {name, type} = this.fieldUI;\r\n        let type='', name = '';\r\n        return <input type=\"text\" className=\"form-control form-control-plaintext border border-info rounded bg-light\"\r\n            placeholder={'unkown control: ' + type + '-' + name} />;\r\n    }\r\n}\r\n\r\nexport abstract class VInputControl extends VField {\r\n    protected fieldUI: FieldInputUI;\r\n    protected input: HTMLInputElement;\r\n\r\n    protected inputType:string;\r\n    protected get maxLength():number {return}\r\n\r\n    protected renderError = (className:string) => {\r\n        let {errors} = this.form;\r\n        let error = errors[this.name];\r\n        if (error === undefined) return;\r\n        return <div className={className}><FA name=\"exclamation-circle\" /> {error}</div>\r\n    }\r\n\r\n    /*\r\n    get value() {\r\n        return super.value;\r\n    }*/\r\n    setValue(v:any) {\r\n        super.setValue(v); this.setInputValue(); \r\n    }\r\n\r\n    protected ref = (input:HTMLInputElement) => {\r\n        this.input = input;\r\n        this.setInputValue();\r\n    }\r\n\r\n    protected setInputValue() {\r\n        if (!this.input) return;\r\n        let v = this.value;\r\n        this.input.value = v === null || v === undefined? '' : v;\r\n    }\r\n\r\n    protected onFocus = () => {\r\n        this.error = undefined;\r\n    }\r\n\r\n    protected onBlur = () => {\r\n        let defy = this.checkRules;\r\n        if (defy.length > 0) {\r\n            this.error = defy[0];\r\n        }\r\n        this.form.computeFields();\r\n    }\r\n\r\n    protected onChange = (evt: React.ChangeEvent<any>) => {\r\n        let v = this.parse(evt.currentTarget.value);\r\n        if (v === null) {\r\n            return;\r\n        }\r\n        this.setValue(v);\r\n    }\r\n\r\n    protected onKeyPress: (event:React.KeyboardEvent<HTMLInputElement>) => void;\r\n    \r\n    protected view = observer(() => {\r\n        let {required} = this.fieldUI;\r\n        let {placeHolder, suffix} = this.fieldRes;\r\n        let ctrlCN = ['form-control', 'form-control-input'];\r\n        let errCN = 'text-danger small mt-1 mx-2';\r\n    \r\n        let redDot;\r\n        let input;\r\n        if (this.readonly === true) {\r\n            input = <input className={classNames(ctrlCN, 'bg-light')}\r\n                ref={this.ref}\r\n                type={this.inputType}\r\n                readOnly={true}\r\n            />;\r\n        }\r\n        else {\r\n            input = <input className={classNames(ctrlCN)}\r\n                ref={this.ref}\r\n                type={this.inputType}\r\n                onFocus={this.onFocus}\r\n                onBlur={this.onBlur}\r\n                onChange={this.onChange}\r\n                placeholder={placeHolder}\r\n                readOnly={false}\r\n                maxLength={this.maxLength}\r\n                onKeyPress={this.onKeyPress}\r\n            />;\r\n            if (required === true || this.field.null === false) {\r\n                redDot = <RedMark />;\r\n            }\r\n        }\r\n\r\n        let inputGroup;\r\n        if (suffix === undefined)\r\n            inputGroup = input;\r\n        else\r\n            inputGroup = <div className=\"input-group\">\r\n                {input}\r\n                <div className=\"input-group-append\">\r\n                    <span className=\"input-group-text\">{suffix}</span>\r\n                </div>\r\n            </div>;\r\n\r\n        return <>\r\n            {redDot}\r\n            {inputGroup}\r\n            {this.renderError(errCN)}\r\n        </>\r\n    });\r\n}\r\n\r\nexport const RedMark = () => <b style={{color:'red', position:'absolute', left:'0.1em', top:'0.5em'}}>*</b>;\r\n\r\nexport class VStringField extends VInputControl {\r\n    protected fieldUI: FieldStringUI;\r\n    protected inputType:string = 'text';\r\n    protected get maxLength():number {return this.field.size}\r\n}\r\n\r\nconst KeyCode_Neg = 45;\r\nconst KeyCode_Dot = 46;\r\n\r\nexport abstract class VNumberControl extends VInputControl {\r\n    protected fieldUI: FieldNumberUI;\r\n    protected extraChars: number[];\r\n\r\n    protected init() {\r\n        super.init();\r\n        this.extraChars = [];\r\n        if (this.fieldUI !== undefined) {\r\n            let {min, max} = this.fieldUI;\r\n            if (min !== undefined) {\r\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\r\n                if (min < 0) this.extraChars.push(KeyCode_Neg);\r\n            }\r\n            else {\r\n                this.extraChars.push(KeyCode_Neg);\r\n            }\r\n    \r\n            if (max !== undefined) {\r\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\r\n            }\r\n        }\r\n        switch (this.field.type) {\r\n            case 'dec':\r\n            case 'bigint':\r\n            case 'int':\r\n            case 'smallint':\r\n            case 'tinyint':\r\n                this.extraChars.push(KeyCode_Dot); break;\r\n        }\r\n    }\r\n\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        this.rules.push(new RuleNum);\r\n        let {min, max} = this.fieldUI;\r\n        if (min !== undefined) this.rules.push(new RuleMin(min));\r\n        if (max !== undefined) this.rules.push(new RuleMax(max));\r\n    }\r\n\r\n    inputType:string = 'number';\r\n\r\n    protected parse(text:string):any {\r\n        try {\r\n            if (text.trim().length === 0) return undefined;\r\n            let ret = Number(text);\r\n            return (ret === NaN)? null : ret;\r\n        }\r\n        catch {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    protected setInputValue() {\r\n        if (!this.input) return;\r\n        let v = this.value;\r\n        if (this.parse(this.input.value) == v) return;\r\n        this.input.value = v === null || v === undefined? '' : v;\r\n    }\r\n\r\n    protected onKeyPress = (event:React.KeyboardEvent<HTMLInputElement>) => {\r\n        let ch = event.charCode;\r\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\r\n        if (this.extraChars !== undefined) {\r\n            if (this.extraChars.indexOf(ch) >= 0) {\r\n                switch (ch) {\r\n                    case KeyCode_Dot: this.onKeyDot(); break;\r\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    private onKeyDot() {\r\n        let v = this.input.value;\r\n        let p = v.indexOf('.');\r\n        if (p >= 0) this.input.value = v.replace('.', '');\r\n    }\r\n    private onKeyNeg() {\r\n        let v = this.input.value;\r\n        let p = v.indexOf('-');\r\n        if (p >= 0) v = v.replace('-', '');\r\n        else v = '-'+v;\r\n        this.input.value = v;\r\n    }\r\n}\r\n\r\nexport class VIntField extends VNumberControl {\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        this.rules.push(new RuleInt);\r\n    }\r\n}\r\n\r\nexport class VDecField extends VNumberControl {\r\n}\r\n\r\nexport class VTextField extends VStringField {\r\n\r\n}\r\n\r\nexport class VDateTimeField extends VStringField {\r\n\r\n}\r\n","import React from 'react';\r\nimport { VField } from './vField';\r\nimport { Field } from '../../../entities';\r\nimport { VForm } from '../vForm';\r\nimport { observer } from 'mobx-react';\r\nimport { FieldRes } from '../vBand';\r\n\r\nexport class VComputeField extends VField {\r\n    constructor(form:VForm, field: Field, fieldRes: FieldRes) {\r\n        super(form, field, undefined, fieldRes);\r\n    }\r\n    protected view = observer(() => {\r\n        let value = this.form.values[this.field.name];\r\n        let {placeHolder, suffix} = this.fieldRes;\r\n        let ctrlCN = 'form-control form-control-input bg-light';\r\n        if (value === null) value = '';\r\n        let input = <input className={ctrlCN}\r\n            type=\"text\"\r\n            placeholder={placeHolder}\r\n            readOnly={true}\r\n            value={value}/>\r\n        let inputGroup;\r\n        if (suffix === undefined)\r\n            inputGroup = input;\r\n        else\r\n            inputGroup = <div className=\"input-group\">\r\n                {input}\r\n                <div className=\"input-group-append\">\r\n                    <span className=\"input-group-text\">{suffix}</span>\r\n                </div>\r\n            </div>;\r\n        return inputGroup;\r\n        /*\r\n            return <div \r\n            className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\">\r\n            {value} &nbsp;\r\n        </div>;\r\n        */\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { IObservableArray, observable } from 'mobx';\r\nimport _ from 'lodash';\r\nimport { List, FA, Muted } from 'tonva-react-form';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { ViewModel, RowContent, TypeContent, JSONContent } from './viewModel';\r\nimport { ArrFields, Field } from '../../entities';\r\nimport { VForm, FieldInputs, FormMode } from './vForm';\r\nimport { FormArr } from '../formUI';\r\n\r\nexport type ArrEditRow = (initValues:any, onRowChanged:(rowValues:any)=>void) => Promise<void>;\r\n\r\nexport class VArr extends ViewModel {\r\n    protected mode: FormMode;\r\n    protected label: any;\r\n    protected header: any;\r\n    protected footer: any;\r\n    protected rowValues: any;                 // 仅仅用来判断是不是新增，undefined则是新增\r\n    protected onEditRow: ArrEditRow;\r\n    protected ownerForm:VForm;\r\n    protected vForm:VForm;\r\n    protected rowContent:TypeContent;\r\n    protected none: string;\r\n    protected newSubmitCaption: string;\r\n    protected editSubmitCaption: string;\r\n    protected addRow: ()=>Promise<void>;\r\n\r\n    name:string;\r\n    list: IObservableArray<any>;\r\n\r\n    constructor(ownerForm:VForm, arr:ArrFields, onEditRow?:ArrEditRow) {\r\n        super();\r\n        this.ownerForm = ownerForm;\r\n        let {name, fields} = arr;\r\n        this.name = name;\r\n        let {ui, res, mode, inputs, values} = ownerForm;\r\n        let arrsRes = res.arrs;\r\n        let arrRes = arrsRes !== undefined? arrsRes[name] : {};\r\n        let {label, none, newSubmit, editSubmit} = arrRes;\r\n        this.none = none || ownerForm.none;\r\n        this.newSubmitCaption = newSubmit || ownerForm.arrNewCaption;\r\n        this.editSubmitCaption = editSubmit || ownerForm.arrEditCaption;\r\n        this.label = label || name;\r\n        let arrUI = ((ui && ui.items[name]) || {}) as FormArr;\r\n        this.rowContent = arrUI.rowContent;// || JSONContent;\r\n        this.mode = mode;\r\n        if (this.onEditRow === undefined) {\r\n            this.vForm = new VForm({\r\n                fields: fields,\r\n                arrs: undefined,\r\n                ui: arrUI,\r\n                res: arrRes,\r\n                inputs: inputs[name] as FieldInputs,\r\n                none: ownerForm.none,\r\n                submitCaption: 'submit',\r\n                arrNewCaption: undefined,\r\n                arrEditCaption: undefined,\r\n                arrTitleNewButton: undefined,\r\n                mode: mode,\r\n            }, \r\n            mode===FormMode.readonly? undefined: this.onSubmit);\r\n        }\r\n        else {\r\n            this.onEditRow = onEditRow;\r\n        }\r\n        this.list = values[name];\r\n    }\r\n\r\n    reset() {\r\n        this.vForm.reset();\r\n        this.list.clear();\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {\r\n        this.addRow = addRow;\r\n    }\r\n\r\n    protected rowPage = () => {\r\n        return <Page header={this.label} back=\"close\">\r\n            {this.vForm.render('py-3')}\r\n        </Page>\r\n    }\r\n    private onSubmit = async () => {\r\n        let {valueBoxs} = this.vForm;\r\n        await this.onRowChanged(valueBoxs);\r\n    }\r\n\r\n    private onRowChanged = async (rowValues:any) => {\r\n        if (this.rowValues === undefined) {\r\n            rowValues.$owner = this.ownerForm.values;\r\n            this.list.push(rowValues);\r\n            if (this.onEditRow === undefined)\r\n                this.vForm.reset();\r\n            else\r\n                await this.onEditRow(undefined, this.onRowChanged);\r\n        }\r\n        else {\r\n            _.merge(this.rowValues, rowValues);\r\n            if (this.onEditRow === undefined) nav.pop();\r\n        }\r\n    }\r\n\r\n    private renderItem = (item:any, index:number) => {\r\n        if (this.rowContent === undefined)\r\n            return <div className=\"px-3 py-2\"><JSONContent {...item} /></div>\r\n        return <this.rowContent {...item} />;\r\n    }\r\n    private showRow = async (rowValues:any):Promise<any> => {\r\n        if (this.onEditRow !== undefined) {\r\n            await this.onEditRow(rowValues, this.onRowChanged);\r\n            return;\r\n        }\r\n        this.vForm.reset();\r\n        if (rowValues !== undefined) this.vForm.setValues(rowValues);\r\n        nav.push(<this.rowPage />);\r\n    }\r\n    private editRow = async (rowValues:any): Promise<void> => {\r\n        this.rowValues = rowValues;\r\n        let {vSubmit} = this.vForm;\r\n        if (vSubmit !== undefined) {\r\n            vSubmit.caption = this.editSubmitCaption;\r\n            vSubmit.className = 'btn btn-outline-success';\r\n        }\r\n        this.vForm.mode = this.ownerForm.mode;\r\n        await this.showRow(rowValues);\r\n    }\r\n    private internalAddRow = async () => {\r\n        this.rowValues = undefined;\r\n        let {vSubmit} = this.vForm;\r\n        vSubmit.caption = this.newSubmitCaption;\r\n        vSubmit.className = 'btn btn-outline-success';\r\n        this.vForm.reset();\r\n        this.vForm.mode = FormMode.new;\r\n        await this.showRow(undefined);\r\n    }\r\n\r\n    protected view = () => {\r\n        let button;\r\n        if (this.addRow !== undefined || this.mode !== FormMode.readonly) {\r\n            button = <button onClick={this.addRow || this.internalAddRow}\r\n                type=\"button\" \r\n                className=\"btn btn-link p-0\">\r\n                {this.ownerForm.arrTitleNewButton}\r\n            </button>;\r\n        }\r\n        let header = this.header || <div className=\"px-3 bg-light small\" style={{paddingTop:'1px', paddingBottom:'1px'}}>\r\n            <div className=\"flex-fill align-self-center\">{this.label}</div>\r\n            {button}\r\n        </div>;\r\n        return <List className=\"pb-3\"\r\n            header={header}\r\n            none={<Muted className=\"px-3 py-2\">{this.none}</Muted>}\r\n            items={this.list}\r\n            item={{render: this.renderItem, onClick: this.editRow}} />;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { tv } from '../../../tools';\r\nimport { Field, Tuid } from '../../../entities';\r\nimport { VField, RedMark } from \"./vField\";\r\nimport { FieldUI } from '../../formUI';\r\nimport { VForm, FieldInput, FormMode } from '../vForm';\r\nimport { FieldRes } from '../vBand';\r\n\r\nconst buttonStyle:React.CSSProperties = {\r\n    textAlign:'left', \r\n    paddingLeft:'0.75rem', \r\n    paddingRight:'0.75rem', \r\n    overflow: 'hidden'\r\n};\r\n\r\nexport class VTuidField extends VField {\r\n    protected vForm: VForm;\r\n    protected input: FieldInput;\r\n    protected tuid: Tuid;\r\n\r\n    constructor(vForm: VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\r\n        super(vForm, field, fieldUI, fieldRes);\r\n        this.tuid = field._tuid;\r\n        this.vForm = vForm;\r\n        this.input = vForm.inputs[field.name] as FieldInput;\r\n    }\r\n\r\n    onClick = async () => {\r\n        if (this.readonly === true) {\r\n            if (!this.value) return;\r\n            await this.tuid.showInfo(this.value.id);\r\n            return;\r\n        }\r\n        let id:number;\r\n        if (this.input !== undefined) {\r\n            id = await this.input.select(this.vForm, this.field, this.vForm.getValues());\r\n        }\r\n        else {\r\n            alert('call undefined');\r\n            id = 0;\r\n        }\r\n        this.setValue(this.tuid.boxId(id));\r\n    }\r\n    protected view = observer(() => {\r\n        let {placeHolder} = this.fieldRes;\r\n        let disabled:boolean = false;\r\n        let {_ownerField} = this.field;\r\n        if (_ownerField !== undefined) {\r\n            let {name, arr} = _ownerField;\r\n            disabled = this.vForm.getValue(name) === null;\r\n        }\r\n        let content;\r\n        if (this.value === null)\r\n            content = <>{placeHolder || this.input.placeHolder}</>;\r\n        else if (typeof this.value === 'object') {\r\n            content = tv(this.value);\r\n        }\r\n        else {\r\n            let idBox = this.tuid.boxId(this.value);\r\n            content = tv(idBox); // idBox.content();\r\n        }\r\n        if (this.readonly === true)\r\n        {\r\n            return <div \r\n                className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\"\r\n                onClick={this.onClick}>\r\n                {content}\r\n            </div>;\r\n        }\r\n        let redDot;\r\n        let {required} = this.fieldUI;\r\n        if (required === true || this.field.null === false) {\r\n            redDot = <RedMark />;\r\n        }\r\n        return <>\r\n            {redDot}\r\n            <button className=\"form-control btn btn-outline-info\"\r\n                type=\"button\"\r\n                disabled={disabled}\r\n                style={buttonStyle}\r\n                onClick={this.onClick}>\r\n                {content}\r\n            </button>\r\n        </>;\r\n    })\r\n}\r\n","import { VBand, VFieldBand, VArrBand, VFieldsBand, VSubmitBand, FieldRes } from \"./vBand\";\r\nimport { Field, ArrFields } from \"../../entities\";\r\nimport { VForm, FormOptions } from \"./vForm\";\r\nimport { FormItems, FieldUI, FormItem } from \"../formUI\";\r\nimport { VSubmit } from \"./vSubmit\";\r\nimport { VField, buildVField, VComputeField } from \"./vField\";\r\nimport { VArr } from \"./vArr\";\r\nimport { VTuidField } from \"./vField/vTuidField\";\r\n\r\nexport class BandsBuilder {\r\n    private vForm: VForm;\r\n    private onSubmit: (values:any)=>Promise<void>;\r\n    private fields: Field[];\r\n    private arrs: ArrFields[];\r\n    private formItems: FormItems;\r\n    private layout: string[];\r\n    private res: any;\r\n    constructor(vForm:VForm, options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\r\n        this.vForm = vForm;\r\n        this.onSubmit = onSubmit;\r\n        let {fields, arrs, ui, res} = options;\r\n        this.fields = fields;\r\n        this.arrs = arrs;\r\n        if (ui !== undefined) {\r\n            let {items, layout} = ui;\r\n            this.formItems = items;\r\n            this.layout = layout;\r\n        }\r\n        this.res = res;\r\n    }\r\n\r\n    build():VBand[] {\r\n        //return this.bandUIs === undefined? this.bandsOnFly() : this.bandsFromUI();\r\n        return this.layout === undefined? this.bandsOnFly() : this.bandsFromLayout();\r\n    }\r\n\r\n    private resFromName(name:string, res:any):string|FieldRes {\r\n        if (res === undefined) return;\r\n        let {fields} = res;\r\n        if (fields === undefined) return;\r\n        return fields[name] || name;\r\n    }\r\n\r\n    private bandsOnFly():VBand[] {\r\n        let bands:VBand[] = [];\r\n        this.bandsFromFields(bands, this.fields, this.res);\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) bands.push(this.bandFromArr(arr));\r\n        }\r\n        if (this.onSubmit !== undefined) {\r\n            bands.push(new VSubmitBand(new VSubmit(this.vForm)));\r\n        }\r\n        return bands;\r\n    }\r\n\r\n    private bandsFromFields(bands:VBand[], fields:Field[], res:any) {\r\n        if (fields === undefined) return;\r\n        for (let field of fields) bands.push(this.bandFromField(field, res));\r\n    }\r\n\r\n    private bandsFromLayout():VBand[] {\r\n        let bands:VBand[] = [];\r\n        /*\r\n        for (let bandUI of this.bandUIs)  {\r\n            let band = this.bandFromUI(bandUI);\r\n            bands.push(band);\r\n        }\r\n        */\r\n        return bands;\r\n    }\r\n\r\n    /*\r\n    private bandFromUI(bandUI:BandUI):VBand {\r\n        let {band} = bandUI;\r\n        switch (band) {\r\n            default: return this.bandFromFieldUI(bandUI as FieldBandUI);\r\n            case 'arr': return this.bandFromArrUI(bandUI as ArrBandUI);\r\n            case 'fields': return this.bandFromFieldsUI(bandUI as FieldsBandUI);\r\n            case 'submit': return this.bandFromSubmitUI(bandUI as SubmitBandUI);\r\n        }\r\n    }\r\n    \r\n    private bandFromFieldUI(bandUI: FieldBandUI): VFieldBand {\r\n        let {label} = bandUI;\r\n        let vField = this.vFieldFromUI(bandUI);\r\n        return new VFieldBand(label, vField);\r\n    }\r\n    private bandFromArrUI(bandUI: ArrBandUI): VArrBand {\r\n        let {label, name} = bandUI;\r\n        let vArr = this.vArrFromUI(bandUI);\r\n        return new VArrBand(label, vArr);\r\n    }\r\n    private bandFromFieldsUI(bandUI: FieldsBandUI): VFieldsBand {\r\n        let {label, fieldUIs} = bandUI;\r\n        let vFields = fieldUIs.map(v => this.vFieldFromUI(v));\r\n        return new VFieldsBand(label, vFields);\r\n    }\r\n    private bandFromSubmitUI(bandUI: SubmitBandUI): VSubmitBand {\r\n        if (this.onSubmit === undefined) return;\r\n        let vSubmit = new VSubmit(this.vForm);\r\n        return new VSubmitBand(vSubmit);\r\n    }\r\n    */\r\n/*\r\n    private vFieldFromField(field:Field, fieldRes:FieldRes, formItem: FormItem): VField {\r\n        let fieldUI:FieldUI = undefined;\r\n        if (formItem !== undefined) {\r\n            if (typeof formItem === 'function') {\r\n                return new VComputeField(this.vForm, field, fieldRes);\r\n            }\r\n        }\r\n        let ret = buildVField(this.vForm, field, formItem, fieldRes);\r\n        if (ret !== undefined) return ret;\r\n        return new VTuidField(field, fieldUI, fieldRes, this.vForm);\r\n    }\r\n*/\r\n    private bandFromField(field:Field, res:any):VBand {\r\n        let {name} = field;\r\n        let fieldRes:FieldRes;\r\n        let rfn = this.resFromName(name, res);\r\n        let label:string;\r\n        if (typeof rfn === 'object') {\r\n            label = rfn.label;\r\n            fieldRes = rfn;\r\n        }\r\n        else {\r\n            label = rfn as string;\r\n            fieldRes = undefined;\r\n        }\r\n        let vField:VField;\r\n        let formItem:FormItem;\r\n        if (this.formItems !== undefined) formItem = this.formItems[name];\r\n        //let vField = this.vFieldFromField(field, fieldRes as FieldRes, formItem);\r\n        //let fieldUI:FieldUI = undefined;\r\n        if (typeof formItem === 'function') {\r\n            vField = new VComputeField(this.vForm, field, fieldRes);\r\n        }\r\n        else {\r\n            vField = buildVField(this.vForm, field, formItem as FieldUI, fieldRes);\r\n        }\r\n        if (vField === undefined) {\r\n            vField = new VTuidField(this.vForm, field, formItem as FieldUI, fieldRes);\r\n        }\r\n        return new VFieldBand(label || name, vField);\r\n    }\r\n\r\n    private bandFromArr(arr: ArrFields):VBand {\r\n        let {name, fields} = arr;\r\n        //let row = JSONContent;\r\n        //let bands:VBand[] = [];\r\n        //this.bandsFromFields(bands, fields, res);\r\n        let vArr = new VArr(this.vForm, arr); // name, res && res.label || name, row, bands);\r\n        return new VArrBand(name, vArr);\r\n    }\r\n\r\n    /*\r\n    private vFieldFromUI(fieldUI:FieldUI):VField {\r\n        return;\r\n    }\r\n\r\n    private vArrFromUI(arrBandUI:ArrBandUI):VArr {\r\n        return;\r\n    }\r\n    */\r\n}\r\n","import { VField, VIntField, VDecField, VStringField, VTextField, VDateTimeField } from './vField';\r\nimport { Field } from '../../../entities';\r\nimport { FieldRes } from '../vBand';\r\nimport { VForm } from '../vForm';\r\nimport { FieldUI } from '../../formUI';\r\n\r\nexport function buildVField(form:VForm, field: Field, fieldUI: FieldUI, fieldRes:FieldRes): VField {\r\n    let vField:new (form:VForm, field:Field, ui:FieldUI, fieldRes:FieldRes) => VField;\r\n    switch (field.type) {\r\n        default: return;\r\n        case 'tinyint':\r\n        case 'smallint':\r\n        case 'int':\r\n            vField = VIntField;\r\n            break;\r\n        case 'bigint':\r\n            let {_tuid} = field;\r\n            if (_tuid !== undefined) return;\r\n            vField = VIntField;\r\n            break;\r\n        case 'dec':\r\n            vField = VDecField;\r\n            break;\r\n        case 'char':\r\n            vField = VStringField;\r\n            break;\r\n        case 'text':\r\n            vField = VTextField;\r\n            break;\r\n        case 'datetime':\r\n            vField = VDateTimeField;\r\n            break;\r\n    }\r\n    return new vField(form, field, fieldUI, fieldRes);\r\n}\r\n\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { observer } from \"mobx-react\";\r\nimport { VBand } from './vBand';\r\nimport { BandsBuilder } from './bandsBuilder';\r\nimport { Field, ArrFields } from '../../entities';\r\nimport { computed, observable, IObservableObject, IObservableValue } from 'mobx';\r\nimport { VArr } from './vArr';\r\nimport { FormUI, FormUIBase, FormItems } from '../formUI';\r\nimport { VField } from './vField';\r\nimport { VSubmit } from './vSubmit';\r\nimport { IObservableArray } from 'mobx';\r\nimport { FA } from 'tonva-react-form';\r\n\r\nexport type FieldCall = (form:VForm, field:Field, values:any) => Promise<any>;\r\nexport interface FieldInput {\r\n    select: FieldCall;\r\n    content: React.StatelessComponent<any>;\r\n    placeHolder: string;\r\n}\r\nexport interface FieldInputs {\r\n    [fieldOrArr:string]: FieldInput | {[field:string]: FieldInput};\r\n}\r\nexport enum FormMode {new, edit, readonly}\r\n\r\nexport interface FormOptions {\r\n    fields: Field[];\r\n    arrs?: ArrFields[];\r\n    ui: FormUIBase;\r\n    res: any;\r\n    inputs: FieldInputs;\r\n    submitCaption: string;\r\n    arrNewCaption: string;\r\n    arrEditCaption: string;\r\n    arrTitleNewButton: JSX.Element;\r\n    none: string;\r\n    mode: FormMode;\r\n}\r\n\r\nexport class VForm {\r\n    protected fields: Field[];\r\n    protected arrs: ArrFields[];\r\n    protected bands: VBand[];\r\n    protected bandColl: {[key:string]: VBand};\r\n    protected onSubmit: ()=>Promise<void>;\r\n\r\n    constructor(options: FormOptions, onSubmit: ()=>Promise<void>) {\r\n        let {fields, arrs, ui, res, inputs, none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton, mode} = options;\r\n        this.fields = fields;\r\n        this.arrs = arrs;\r\n        this.ui = ui;\r\n        if (this.ui !== undefined) this.formItems = this.ui.items; //.compute = this.ui.compute;\r\n        this.res = res;\r\n        this.inputs = inputs;\r\n        this.none = none;\r\n        this.submitCaption = submitCaption;\r\n        this.arrNewCaption = arrNewCaption;\r\n        this.arrEditCaption = arrEditCaption;\r\n        this.arrTitleNewButton = arrTitleNewButton || <small><FA name=\"plus\" /> 新增</small>;\r\n        if (onSubmit === undefined) this.mode = FormMode.readonly;\r\n        else this.mode = mode;\r\n        this.buildFormValues();\r\n        this.buildBands(options, onSubmit);\r\n        this.onSubmit = onSubmit;\r\n    }\r\n\r\n    ui: FormUI;\r\n    res: any;\r\n    values: any;\r\n    errors: any;\r\n    formItems: FormItems;\r\n    mode: FormMode;\r\n    vFields: {[name:string]:VField} = {};\r\n    vArrs: {[name:string]: VArr} = {};\r\n    vSubmit: VSubmit;\r\n    inputs: FieldInputs;\r\n    none: string;\r\n    submitCaption: string;\r\n    arrNewCaption: string;\r\n    arrEditCaption: string;\r\n    arrTitleNewButton: JSX.Element;\r\n\r\n    private buildBands(options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\r\n        this.bandColl = {};\r\n        let bandsBuilder = new BandsBuilder(this, options, onSubmit);\r\n        this.bands = bandsBuilder.build();\r\n        for (let band of this.bands) {\r\n            this.bandColl[band.key] = band;\r\n            let vFields = band.getVFields();\r\n            if (vFields !== undefined) for (let f of vFields) this.vFields[f.name] = f;\r\n            let vArr = band.getVArr();\r\n            if (vArr !== undefined) this.vArrs[vArr.name] = vArr;\r\n            let vSubmit = band.getVSubmit();\r\n            if (vSubmit !== undefined) this.vSubmit = vSubmit;\r\n        }\r\n    }\r\n\r\n    private onFormSubmit = (event:React.FormEvent<any>) => {\r\n        event.preventDefault();\r\n        return false;\r\n    }\r\n\r\n    protected view = observer(({className}:{className:string}) => {\r\n        return <form className={className} onSubmit={this.onFormSubmit}>\r\n            {this.bands.map(v => v.render())}\r\n        </form>;\r\n    });\r\n\r\n    getBand(name:string) {\r\n        return this.bandColl[name];\r\n    }\r\n\r\n    computeFields() {\r\n        if (this.formItems === undefined) return;\r\n        let values = this.values;\r\n        for (let i in this.formItems) {\r\n            let item = this.formItems[i];\r\n            if (typeof item !== 'function') continue;\r\n            values[i] = item.call(values);\r\n        }\r\n    }\r\n\r\n    async submit() {\r\n        if (this.onSubmit === undefined) return;\r\n        await this.onSubmit();\r\n    }\r\n    \r\n    getValues() {\r\n        let ret:any = {};\r\n        let values = this.values;\r\n        for (let f of this.fields) {\r\n            let {name} = f;\r\n            let v = values[name]\r\n            ret[name] =  v !== null && typeof v === 'object' ? v.id : v;\r\n        }\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) {\r\n                let {name, fields, id, order} = arr;\r\n                let list = ret[name] = [];\r\n                let rows = this.vArrs[name].list;\r\n                for (let row of rows) {\r\n                    let item = {} as any;\r\n                    if (id !== undefined) item[id] = row[id];\r\n                    if (order !== undefined) item[order] = row[order];\r\n                    for (let f of fields) {\r\n                        let {name:fn} = f;\r\n                        let v = row[fn]\r\n                        item[fn] =  v !== null && typeof v === 'object' ? v.id : v;\r\n                    }\r\n                    list.push(item);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    get valueBoxs() {\r\n        let ret:any = {};\r\n        let values = this.values;\r\n        for (let f of this.fields) {\r\n            let {name, _tuid} = f;\r\n            let v = values[name]\r\n            ret[name] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\r\n        }\r\n        if (this.arrs === undefined) return ret;\r\n        for (let arr of this.arrs) {\r\n            let {name, fields, id, order} = arr;\r\n            let list = ret[name] = this.vArrs[name].list.slice();\r\n            for (let row of list) {\r\n                for (let f of fields) {\r\n                    let {name:fn, _tuid} = f;\r\n                    let v = row[fn]\r\n                    row[fn] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    setValues(initValues:any) {\r\n        if (initValues === undefined) {\r\n            this.reset();\r\n            return;\r\n        }\r\n        let values = this.values;\r\n        let errors = this.errors;\r\n        for (let f of this.fields) {\r\n            let fn = f.name;\r\n            errors[fn] = undefined;\r\n            let v =  initValues[fn];\r\n            values[fn] = v;\r\n        }\r\n        // 还要设置arrs的values\r\n        for (let i in this.vArrs) {\r\n            let list = initValues[i];\r\n            if (list === undefined) continue;\r\n            let arrList = values[i] as IObservableArray<any>;\r\n            arrList.clear();\r\n            arrList.push(...list);\r\n        }\r\n    }\r\n\r\n    @computed get isOk():boolean {\r\n        for (let i in this.vFields) {\r\n            if (this.vFields[i].isOk === false) return false;\r\n        }\r\n        return true;\r\n    }\r\n    reset() {\r\n        let values = this.values;\r\n        let errors = this.errors;\r\n        for (let f of this.fields) {\r\n            let fn = f.name;\r\n            //if (this.compute !== undefined && this.compute[fn] !== undefined) continue;\r\n            values[fn] = null;\r\n            errors[fn] = undefined;\r\n        }\r\n        for (let i in this.vFields) {\r\n            let ctrl = this.vFields[i];\r\n            let cn = ctrl.name;\r\n            if (cn === undefined) continue;\r\n            //if (this.compute !== undefined && this.compute[cn] !== undefined) continue;\r\n            ctrl.setValue(null);\r\n        }\r\n        for (let i in this.vArrs) {\r\n            let vArr = this.vArrs[i];\r\n            vArr.reset();\r\n        }\r\n    }\r\n\r\n    getValue(fieldName: string) {\r\n        return this.values[fieldName];\r\n    }\r\n    setValue(fieldName: string, value: any) { this.values[fieldName] = value }\r\n\r\n    setError(fieldName:string, error:string) {this.errors[fieldName] = error}\r\n\r\n    private buildFieldValues(fields: Field[]):any {\r\n        let v: {[p:string]: any} = {\r\n            valueFromFieldName: function(propName:string) {\r\n                return this[propName];\r\n            }\r\n        };\r\n        for (let f of fields) {\r\n            let fn = f.name;\r\n            v[fn] = null;\r\n        }\r\n        return v;\r\n    }\r\n    private buildObservableValues():IObservableObject {\r\n        let v: {[p:string]: any} = this.buildFieldValues(this.fields);\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) {\r\n                v[arr.name] = observable.array([], {deep:true});\r\n            }\r\n        }\r\n        let ret = observable(v);\r\n        return ret;\r\n    }\r\n    private buildFormValues() {\r\n        this.values = this.buildObservableValues();\r\n        this.errors = observable(this.buildFieldValues(this.fields));\r\n    }\r\n\r\n    render(className:string = \"py-3\"):JSX.Element {\r\n        return <this.view className={className} />\r\n    }\r\n}\r\n","export * from './vForm';\r\n","import { Entities, Field, ArrFields, FieldMap } from './entities';\r\nimport { TuidMain, Tuid } from './tuid';\r\n\r\nconst tab = '\\t';\r\nconst ln = '\\n';\r\n\r\nexport abstract class Entity {\r\n    protected entities: Entities;\r\n    protected schema: any;\r\n    private jName: string;\r\n    sys?: boolean;\r\n    readonly name: string;\r\n    readonly typeId: number;\r\n    abstract get typeName(): string;\r\n    get sName():string {return this.jName || this.name}\r\n    fields: Field[];\r\n    arrFields: ArrFields[];\r\n    returns: ArrFields[];\r\n\r\n    constructor(entities:Entities, name:string, typeId:number) {\r\n        this.entities = entities;\r\n        this.name = name;\r\n        this.typeId = typeId;\r\n        this.sys = this.name.indexOf('$') >= 0;\r\n    }\r\n\r\n    public face: any;           // 对应字段的label, placeHolder等等的中文，或者语言的翻译\r\n\r\n    protected get tvApi() {return this.entities.usqApi;}\r\n    protected async getApiFrom() {return this.entities.usqApi;}\r\n\r\n    private fieldMaps: {[arr:string]: FieldMap} = {};\r\n    fieldMap(arr?:string): FieldMap {\r\n        if (arr === undefined) arr = '$';\r\n        let ret = this.fieldMaps[arr];\r\n        if (ret === undefined) {\r\n            let fields:Field[];\r\n            if (arr === '$') fields = this.fields;\r\n            else if (this.arrFields !== undefined) {\r\n                let arrFields = this.arrFields.find(v => v.name === arr);\r\n                if (arrFields !== undefined) fields = arrFields.fields;\r\n            }\r\n            else if (this.returns !== undefined) {\r\n                let arrFields = this.returns.find(v => v.name === arr);\r\n                if (arrFields !== undefined) fields = arrFields.fields;\r\n            }\r\n            if (fields === undefined) return {};\r\n            ret = {};\r\n            for (let f of fields) ret[f.name] = f;\r\n            this.fieldMaps[arr] = ret;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    public async loadSchema():Promise<void> {\r\n        if (this.schema !== undefined) return;\r\n        let schema = await this.entities.usqApi.schema(this.name);\r\n        this.setSchema(schema);\r\n    }\r\n\r\n    public setSchema(schema:any) {\r\n        if (schema === undefined) return;\r\n        if (this.schema !== undefined) return;\r\n        this.schema = schema;\r\n        let {name, fields, arrs, returns} = schema;\r\n        if (name !== this.name) this.jName = name;\r\n        this.entities.buildFieldTuid(this.fields = fields);\r\n        this.entities.buildArrFieldsTuid(this.arrFields = arrs, fields);\r\n        this.entities.buildArrFieldsTuid(this.returns = returns, fields);\r\n        //this.newMain = this.buildCreater(fields);\r\n        //this.newArr = this.buildArrCreater(arrs);\r\n        //this.newRet = this.buildArrCreater(returns);\r\n    }\r\n\r\n    schemaStringify():string {\r\n        return JSON.stringify(this.schema, (key:string, value:any) => {\r\n            if (key === '_tuid') return undefined;\r\n            return value;\r\n        }, 4);\r\n    }\r\n\r\n    tuidFromField(field:Field):Tuid {\r\n        let {_tuid, tuid} = field;\r\n        if (tuid === undefined) return;\r\n        if (_tuid !== undefined) return _tuid;\r\n        return field._tuid = this.entities.getTuid(tuid, undefined);\r\n    }\r\n\r\n    tuidFromName(fieldName:string, arrName?:string):Tuid {\r\n        if (this.schema === undefined) return;\r\n        let {fields, arrs} = this.schema;\r\n        let entities = this.entities;\r\n        function getTuid(fn:string, fieldArr:Field[]) {\r\n            if (fieldArr === undefined) return;\r\n            let f = fieldArr.find(v => v.name === fn);\r\n            if (f === undefined) return;\r\n            return entities.getTuid(f.tuid, undefined);\r\n        }\r\n        let fn = fieldName.toLowerCase();\r\n        if (arrName === undefined) return getTuid(fn, fields);\r\n        if (arrs === undefined) return;\r\n        let an = arrName.toLowerCase();\r\n        let arr = (arrs as ArrFields[]).find(v => v.name === an);\r\n        if (arr === undefined) return;\r\n        return getTuid(fn, arr.fields);\r\n    }\r\n    pack(data:any):string {\r\n        let ret:string[] = [];\r\n        //if (schema === undefined || data === undefined) return;\r\n        let fields = this.fields;\r\n        if (fields !== undefined) this.packRow(ret, fields, data);\r\n        let arrs = this.arrFields; //schema['arrs'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                this.packArr(ret, arr.fields, data[arr.name]);\r\n            }\r\n        }\r\n        return ret.join('');\r\n    }\r\n    \r\n    private escape(row:any, field:Field):any {\r\n        let d = row[field.name];\r\n        switch (typeof d) {\r\n            default: return d;\r\n            case 'object':\r\n                let tuid = field._tuid;\r\n                if (tuid === undefined) return d.id;\r\n                return tuid.getIdFromObj(d);\r\n            case 'string':\r\n                let len = d.length;\r\n                let r = '', p = 0;\r\n                for (let i=0;i<len;i++) {\r\n                    let c = d.charCodeAt(i);\r\n                    switch(c) {\r\n                        case 9: r += d.substring(p, i) + '\\\\t'; p = i+1; break;\r\n                        case 10: r += d.substring(p, i) + '\\\\n'; p = i+1; break;\r\n                    }\r\n                }\r\n                return r + d.substring(p);\r\n            case 'undefined': return '';\r\n        }\r\n    }\r\n    \r\n    private packRow(result:string[], fields:Field[], data:any) {\r\n        let len = fields.length;\r\n        if (len === 0) return;\r\n        let ret = '';\r\n        ret += this.escape(data, fields[0]);\r\n        for (let i=1;i<len;i++) {\r\n            let f = fields[i];\r\n            ret += tab + this.escape(data, f);\r\n        }\r\n        result.push(ret + ln);\r\n    }\r\n    \r\n    private packArr(result:string[], fields:Field[], data:any[]) {\r\n        if (data !== undefined) {\r\n            for (let row of data) {\r\n                this.packRow(result, fields, row);\r\n            }\r\n        }\r\n        result.push(ln);\r\n    }\r\n    \r\n    unpackSheet(data:string):any {\r\n        let ret = {} as any; //new this.newMain();\r\n        //if (schema === undefined || data === undefined) return;\r\n        let fields = this.fields;\r\n        let p = 0;\r\n        if (fields !== undefined) p = this.unpackRow(ret, fields, data, p);\r\n        let arrs = this.arrFields; //schema['arrs'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                p = this.unpackArr(ret, arr, data, p);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    \r\n    unpackReturns(data:string):any {\r\n        let ret = {} as any;\r\n        //if (schema === undefined || data === undefined) return;\r\n        //let fields = schema.fields;\r\n        let p = 0;\r\n        //if (fields !== undefined) p = unpackRow(ret, schema.fields, data, p);\r\n        let arrs = this.returns; //schema['returns'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                //let creater = this.newRet[arr.name];\r\n                p = this.unpackArr(ret, arr, data, p);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    \r\n    private unpackRow(ret:any, fields:Field[], data:string, p:number):number {\r\n        let ch0 = 0, ch = 0, c = p, i = 0, len = data.length, fLen = fields.length;\r\n        for (;p<len;p++) {\r\n            ch0 = ch;\r\n            ch = data.charCodeAt(p);\r\n            if (ch === 9) {\r\n                let f = fields[i];\r\n                if (ch0 !== 8) {\r\n                    if (p>c) {\r\n                        let v = data.substring(c, p);\r\n                        ret[f.name] = this.to(ret, v, f);\r\n                    }\r\n                }\r\n                else {\r\n                    ret[f.name] = null;\r\n                }\r\n                c = p+1;\r\n                ++i;\r\n                if (i>=fLen) break;\r\n            }\r\n            else if (ch === 10) {\r\n                let f = fields[i];\r\n                if (ch0 !== 8) {\r\n                    if (p>c) {\r\n                        let v = data.substring(c, p);\r\n                        ret[f.name] = this.to(ret, v, f);\r\n                    }\r\n                }\r\n                else {\r\n                    ret[f.name] = null;\r\n                }\r\n                ++p;\r\n                ++i;\r\n                break;\r\n            }\r\n        }\r\n        return p;\r\n    }\r\n\r\n    private to(ret:any, v:string, f:Field):any {\r\n        switch (f.type) {\r\n            default: return v;\r\n            case 'datetime':\r\n            case 'date':\r\n            case 'time':\r\n                let date = new Date(Number(v));\r\n                return date;\r\n            case 'tinyint':\r\n            case 'smallint':\r\n            case 'int':\r\n            case 'dec': return Number(v);\r\n            case 'bigint':\r\n                let id = Number(v);\r\n                let {_tuid} = f;\r\n                if (_tuid === undefined) return id;\r\n                _tuid.useId(id, true);\r\n                //let val = _tuid.valueFromId(id);\r\n                //return val.obj || val;\r\n                return _tuid.boxId(id);\r\n                /*\r\n                if (tuidKey !== undefined) {\r\n                    let tuid = f._tuid;\r\n                    if (tuid === undefined) {\r\n                        // 在jsonStringify中间不会出现\r\n                        Object.defineProperty(f, '_tuid', {value:'_tuid', writable: true});\r\n                        f._tuid = tuid = this.getTuid(tuidKey, tuidUrl);\r\n                    }\r\n                    tuid.useId(Number(v), true);\r\n                }*/\r\n                //return Number(v);\r\n        }\r\n    }\r\n\r\n    private unpackArr(ret:any, arr:ArrFields, data:string, p:number):number {\r\n        let vals:any[] = [], len = data.length;\r\n        let {name, fields} = arr;\r\n        while (p<len) {\r\n            let ch = data.charCodeAt(p);\r\n            if (ch === 10) {\r\n                ++p;\r\n                break;\r\n            }\r\n            let val = {} as any; //new creater();\r\n            vals.push(val);\r\n            p = this.unpackRow(val, fields, data, p);\r\n        }\r\n        ret[name] = vals;\r\n        return p;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport _ from 'lodash';\r\nimport { Entity } from './entity';\r\nimport { Entities, Field, ArrFields } from './entities';\r\nimport { isNumber } from 'util';\r\nimport { CUsq, CTuidMain, CTuidEdit, CTuidInfo, CTuidSelect } from '../controllers';\r\n\r\nexport class BoxId {\r\n    id: number;\r\n    obj?: any;\r\n    content: (templet?:(values?:any, x?:any)=>JSX.Element, x?:any)=>JSX.Element;\r\n    valueFromFieldName: (fieldName:string)=>BoxId|any;\r\n}\r\n\r\nconst maxCacheSize = 1000;\r\nexport abstract class Tuid extends Entity {\r\n    private BoxId: ()=>void;\r\n    get typeName(): string { return 'tuid';}\r\n    private queue: number[] = [];               // 每次使用，都排到队头\r\n    private waitingIds: number[] = [];          // 等待loading的\r\n    private cache = observable.map({}, {deep: false});    // 已经缓冲的\r\n    idName: string;\r\n    owner: TuidMain;                    // 用这个值来区分是不是TuidArr\r\n    unique: string[];\r\n    schemaFrom: {owner:string; usq:string};\r\n\r\n    constructor(entities:Entities, name:string, typeId:number) {\r\n        super(entities, name, typeId);\r\n        this.buildIdBoxer();\r\n    }\r\n\r\n    abstract get Main();\r\n\r\n    private buildIdBoxer() {\r\n        this.BoxId = function():void {};\r\n        let prototype = this.BoxId.prototype;\r\n        Object.defineProperty(prototype, '_$tuid', {\r\n            value: this,\r\n            writable: false,\r\n            enumerable: false,\r\n        });\r\n        /*\r\n        prototype.content = function(templet?:(values?:any, x?:any)=>JSX.Element, x?:any) {\r\n            let t:Tuid = this._$tuid;\r\n            let com = templet || this._$com;\r\n            if (com === undefined) {\r\n                com = this._$com = t.entities.usq.getTuidContent(t);\r\n            }\r\n            let val = t.valueFromId(this.id);\r\n            if (typeof val === 'number') val = {id: val};\r\n            if (templet !== undefined) return templet(val, x);\r\n            //return com(val, x);\r\n            return React.createElement(com, val);\r\n        }\r\n        */\r\n        Object.defineProperty(prototype, 'obj', {\r\n            enumerable: false,\r\n            get: function() {\r\n                if (this.id === undefined || this.id<=0) return undefined;\r\n                return this._$tuid.valueFromId(this.id);\r\n            }\r\n        });\r\n        prototype.valueFromFieldName = function(fieldName:string):BoxId|any {\r\n            let t:Tuid = this._$tuid;\r\n            return t.valueFromFieldName(fieldName, this.obj);\r\n        };\r\n        prototype.toJSON = function() {return this.id}\r\n    }\r\n    boxId(id:number):BoxId {\r\n        this.useId(id);\r\n        let ret:BoxId = new this.BoxId();\r\n        ret.id = id;\r\n        return ret;\r\n    }\r\n    getTuidContent() {\r\n        return this.entities.cUsq.getTuidContent(this);\r\n    }\r\n    getIdFromObj(item:any):number {\r\n        return item[this.idName];\r\n    }\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {id, unique} = schema;\r\n        this.idName = id;\r\n        this.unique = unique;\r\n        this.schemaFrom = this.schema.from;\r\n    }\r\n\r\n    private moveToHead(id:number) {\r\n        let index = this.queue.findIndex(v => v === id);\r\n        this.queue.splice(index, 1);\r\n        this.queue.push(id);\r\n    }\r\n\r\n    valueFromId(id:number|BoxId):any {\r\n        let _id:number;\r\n        let tId = typeof id;\r\n        switch (typeof id) {\r\n            case 'object': _id = (id as BoxId).id; break;\r\n            case 'number': _id = id as number; break;\r\n            default: return;\r\n        }\r\n        let v = this.cache.get(_id);\r\n        if (this.owner !== undefined && typeof v === 'object') {\r\n            v.$owner = this.owner.boxId(v.owner); // this.owner.valueFromId(v.owner);\r\n        }\r\n        return v;\r\n    }\r\n    valueFromFieldName(fieldName:string, obj:any):BoxId|any {\r\n        if (obj === undefined) return;\r\n        let f = this.fields.find(v => v.name === fieldName);\r\n        if (f === undefined) return;\r\n        let v = obj[fieldName];\r\n        let {_tuid} = f;\r\n        if (_tuid === undefined) return v;\r\n        return _tuid.valueFromId(v);\r\n    }\r\n    resetCache(id:number) {\r\n        this.cache.delete(id);\r\n        let index = this.queue.findIndex(v => v === id);\r\n        this.queue.splice(index, 1);\r\n        this.useId(id);\r\n    }\r\n    useId(id:number, defer?:boolean) {\r\n        if (id === undefined || id === 0) return;\r\n        if (isNumber(id) === false) return;\r\n        if (this.cache.has(id) === true) {\r\n            this.moveToHead(id);\r\n            return;\r\n        }\r\n        this.entities.cacheTuids(defer===true?70:20);\r\n        //let idVal = this.createID(id);\r\n        this.cache.set(id, id);\r\n        if (this.waitingIds.findIndex(v => v === id) >= 0) {\r\n            this.moveToHead(id);\r\n            return;\r\n        }\r\n\r\n        // 如果没有缓冲, 或者没有waiting\r\n        if (this.queue.length >= maxCacheSize) {\r\n            // 缓冲已满，先去掉最不常用的\r\n            let r = this.queue.shift();\r\n            if (r === id) {\r\n                // 如果移除的，正好是现在用的，则插入\r\n                this.queue.push(r);\r\n                return;\r\n            }\r\n\r\n            //let rKey = String(r);\r\n            if (this.cache.has(r) === true) {\r\n                // 如果移除r已经缓存\r\n                this.cache.delete(r);\r\n            }\r\n            else {\r\n                // 如果移除r还没有缓存\r\n                let index = this.waitingIds.findIndex(v => v === r);\r\n                this.waitingIds.splice(index, 1);\r\n            }\r\n        }\r\n        this.waitingIds.push(id);\r\n        this.queue.push(id);\r\n        return;\r\n    }\r\n    async proxied(name:string, id:number):Promise<any> {\r\n        let proxyTuid = this.entities.getTuid(name, undefined);\r\n        proxyTuid.useId(id);\r\n        let proxied = await this.tvApi.proxied(this.name, name, id);\r\n        this.cacheValue(proxied);\r\n        return proxied;\r\n    }\r\n    cacheValue(val:any):boolean {\r\n        if (val === undefined) return false;\r\n        let id = this.getIdFromObj(val);\r\n        if (id === undefined) return false;\r\n        let index = this.waitingIds.findIndex(v => v === id);\r\n        if (index>=0) this.waitingIds.splice(index, 1);\r\n        //let cacheVal = this.createID(id, val);\r\n        this.cache.set(id, val);\r\n        // 下面的代码应该是cache proxy id, 需要的时候再写吧\r\n        /*\r\n        let {tuids, fields} = this.schema;\r\n        if (tuids !== undefined && fields !== undefined) {\r\n            for (let f of fields) {\r\n                let {name, tuid} = f;\r\n                if (tuid === undefined) continue;\r\n                let t = this.entities.tuid(tuid);\r\n                if (t === undefined) continue;\r\n                t.useId(val[name]);\r\n            }\r\n        }*/\r\n        return true;\r\n    }\r\n    protected afterCacheId(tuidValue:any) {\r\n        for (let f of this.fields) {\r\n            let {_tuid} = f;\r\n            if (_tuid === undefined) continue;\r\n            _tuid.useId(tuidValue[f.name]);\r\n        }\r\n    }\r\n    async cacheIds():Promise<void> {\r\n        if (this.waitingIds.length === 0) return;\r\n        let name:string, arr:string;\r\n        if (this.owner === undefined) {\r\n            name = this.name;\r\n        }\r\n        else {\r\n            name = this.owner.name;\r\n            arr = this.name;\r\n        }\r\n        let api = await this.getApiFrom();\r\n        let tuids = await api.tuidIds(name, arr, this.waitingIds);\r\n        for (let tuidValue of tuids) {\r\n            if (this.cacheValue(tuidValue) === false) continue;\r\n            this.cacheTuidFieldValues(tuidValue);\r\n            this.afterCacheId(tuidValue);\r\n        }\r\n    }\r\n    async load(id:number):Promise<any> {\r\n        if (id === undefined || id === 0) return;\r\n        let api = await this.getApiFrom();\r\n        let values = await api.tuidGet(this.name, id);\r\n        if (values === undefined) return;\r\n        values._$tuid = this;\r\n        this.cacheValue(values);\r\n        this.cacheTuidFieldValues(values);\r\n        return values;\r\n    }\r\n    protected getDiv(divName:string):TuidDiv {return;}\r\n    private cacheTuidFieldValues(values:any) {\r\n        let {fields, arrs} = this.schema;\r\n        this.cacheFieldsInValue(values, fields);\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs as ArrFields[]) {\r\n                let {name, fields} = arr;\r\n                let arrValues = values[name];\r\n                if (arrValues === undefined) continue;\r\n                let tuidDiv = this.getDiv(name);\r\n                for (let row of arrValues) {\r\n                    row._$tuid = tuidDiv;\r\n                    row.$owner = this.boxId(row.owner); \r\n                    this.cacheFieldsInValue(row, fields);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private cacheFieldsInValue(values:any, fields:Field[]) {\r\n        for (let f of fields as Field[]) {\r\n            let {name, _tuid} = f;\r\n            if (_tuid === undefined) continue;\r\n            let id = values[name];\r\n            //_tuid.useId(id);\r\n            values[name] = _tuid.boxId(id);\r\n        }\r\n    }\r\n    async save(id:number, props:any) {\r\n        let params = _.clone(props);\r\n        params[\"$id\"] = id;\r\n        let ret = await this.tvApi.tuidSave(this.name, params);\r\n        let {id:retId, inId} = ret;\r\n        if (retId === undefined) {\r\n            params.id = id;\r\n            this.cacheValue(params);\r\n        }\r\n        else if (retId > 0) {\r\n            params.id = retId;\r\n            this.cacheValue(params);\r\n        }\r\n        return ret;\r\n    }\r\n    async search(key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let ret:any[] = await this.searchArr(undefined, key, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    async searchArr(owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let {fields} = this.schema;\r\n        let name:string, arr:string;\r\n        if (this.owner !== undefined) {\r\n            name = this.owner.name;\r\n            arr = this.name;\r\n        }\r\n        else {\r\n            name = this.name;\r\n            arr = undefined;\r\n        }\r\n        let api = await this.getApiFrom();\r\n        let ret = await api.tuidSearch(name, arr, owner, key, pageStart, pageSize);\r\n        for (let row of ret) {\r\n            this.cacheFieldsInValue(row, fields);\r\n            if (this.owner !== undefined) row.$owner = this.owner.boxId(row.owner);\r\n        }\r\n        return ret;\r\n    }\r\n    async loadArr(arr:string, owner:number, id:number):Promise<any> {\r\n        if (id === undefined || id === 0) return;\r\n        let api = await this.getApiFrom();\r\n        return await api.tuidArrGet(this.name, arr, owner, id);\r\n    }\r\n    /*\r\n    async loadArrAll(owner:number):Promise<any[]> {\r\n        return this.all = await this.tvApi.tuidGetAll(this.name);\r\n    }*/\r\n    async saveArr(arr:string, owner:number, id:number, props:any) {\r\n        let params = _.clone(props);\r\n        params[\"$id\"] = id;\r\n        return await this.tvApi.tuidArrSave(this.name, arr, owner, params);\r\n    }\r\n    async posArr(arr:string, owner:number, id:number, order:number) {\r\n        return await this.tvApi.tuidArrPos(this.name, arr, owner, id, order);\r\n    }\r\n    \r\n    // cache放到Tuid里面之后，这个函数不再需要公开调用了\r\n    //private async ids(idArr:number[]) {\r\n    //    return await this.tvApi.tuidIds(this.name, idArr);\r\n    //}\r\n    async showInfo(id:number) {\r\n        await this.entities.cUsq.showTuid(this, id);\r\n    }\r\n}\r\n\r\nexport class TuidMain extends Tuid {\r\n    get Main() {return this}\r\n\r\n    divs: {[name:string]: TuidDiv};\r\n    proxies: {[name:string]: TuidMain};\r\n\r\n    public setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {arrs} = schema;\r\n        if (arrs !== undefined) {\r\n            this.divs = {};\r\n            for (let arr of arrs) {\r\n                let {name} = arr;\r\n                let tuidDiv = new TuidDiv(this.entities, name, this.typeId);\r\n                tuidDiv.owner = this;\r\n                this.divs[name] = tuidDiv;\r\n                tuidDiv.setSchema(arr);\r\n            }\r\n        }\r\n    }\r\n    protected getDiv(divName:string):TuidDiv {return this.divs[divName];}\r\n    async cacheIds():Promise<void> {\r\n        await super.cacheIds();\r\n        if (this.divs === undefined) return;\r\n        for (let i in this.divs) {\r\n            await this.divs[i].cacheIds();\r\n        }\r\n    }\r\n\r\n    async cUsqFrom(): Promise<CUsq> {\r\n        if (this.schemaFrom === undefined) return this.entities.cUsq;\r\n        let {owner, usq} = this.schemaFrom;\r\n        let cUsq = await this.entities.cUsq\r\n        let cApp = cUsq.cApp;\r\n        if (cApp === undefined) return cUsq;\r\n        let cUsqFrm = await cApp.getImportUsq(owner, usq);\r\n        if (cUsqFrm === undefined) {\r\n            console.error(`${owner}/${usq} 不存在`);\r\n            debugger;\r\n            return cUsq;\r\n        }\r\n        let retErrors = await cUsqFrm.loadSchema();\r\n        if (retErrors !== undefined) {\r\n            console.error('cUsq.loadSchema: ' + retErrors);\r\n            debugger;\r\n            return cUsq;\r\n        }\r\n        return cUsqFrm;\r\n    }\r\n\r\n    protected async getApiFrom() {\r\n        let from = await this.from();\r\n        if (from !== undefined) return from.entities.usqApi;\r\n        return this.entities.usqApi;\r\n    }\r\n\r\n    async from(): Promise<TuidMain> {\r\n        let cUsq = await this.cUsqFrom();\r\n        return cUsq.tuid(this.name);\r\n    }\r\n\r\n    async cFrom(): Promise<CTuidMain> {\r\n        let cUsq = await this.cUsqFrom();\r\n        return cUsq.cTuidMainFromName(this.name);\r\n    }\r\n\r\n    async cEditFrom(): Promise<CTuidEdit> {\r\n        let cUsq = await this.cUsqFrom();\r\n        return cUsq.cTuidEditFromName(this.name);\r\n    }\r\n\r\n    async cInfoFrom(): Promise<CTuidInfo> {\r\n        let cUsq = await this.cUsqFrom();\r\n        return cUsq.cTuidInfoFromName(this.name);\r\n    }\r\n\r\n    async cSelectFrom(): Promise<CTuidSelect> {\r\n        let cUsq = await this.cUsqFrom();\r\n        if (cUsq === undefined) return;\r\n        return cUsq.cTuidSelectFromName(this.name);\r\n    }\r\n\r\n    protected afterCacheId(tuidValue:any) {\r\n        super.afterCacheId(tuidValue);\r\n        if (this.proxies === undefined) return;\r\n        let {type, $proxy} = tuidValue;\r\n        let pTuid = this.proxies[type];\r\n        pTuid.useId($proxy);\r\n    }\r\n}\r\n\r\nexport class TuidDiv extends Tuid {\r\n    get Main() {return this.owner}\r\n}\r\n","import {Entity} from './entity';\r\n\r\nexport class Action extends Entity {\r\n    get typeName(): string { return 'action';}\r\n    async submit(data:object) {\r\n        await this.loadSchema();\r\n        let text = this.pack(data);\r\n        return await this.tvApi.action(this.name, {data:text});\r\n    }\r\n}\r\n\r\n","import {observable, IObservableArray} from 'mobx';\r\nimport {Entity} from './entity';\r\nimport { PageItems } from 'tonva-tools';\r\n\r\nexport interface SheetState {\r\n    name: string;\r\n    actions: SheetAction[];\r\n}\r\n\r\nexport interface SheetAction {\r\n    name: string;\r\n}\r\n\r\nexport interface StateCount {\r\n    state: string;\r\n    count: number;\r\n}\r\n\r\nexport class Sheet extends Entity {\r\n    get typeName(): string { return 'sheet';}\r\n    states: SheetState[];\r\n\r\n    /*\r\n    setStates(states: SheetState[]) {\r\n        for (let state of states) {\r\n            this.setStateAccess(this.states.find(s=>s.name==state.name), state);\r\n        }\r\n    }*/\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.states = schema.states;\r\n    }\r\n    build(obj:any) {\r\n        this.states = [];\r\n        for (let op of obj.ops) {\r\n            this.states.push({name: op, actions:undefined});\r\n        }\r\n        /*\r\n        for (let p in obj) {\r\n            switch(p) {\r\n                case '#':\r\n                case '$': continue;\r\n                default: this.states.push(this.createSheetState(p, obj[p])); break;\r\n            }\r\n        }*/\r\n    }\r\n    private createSheetState(name:string, obj:object):SheetState {\r\n        let ret:SheetState = {name:name, actions:[]};\r\n        let actions = ret.actions;\r\n        for (let p in obj) {\r\n            let action:SheetAction = {name: p};\r\n            actions.push(action);\r\n        }\r\n        return ret;\r\n    }\r\n    /*\r\n    private setStateAccess(s:SheetState, s1:SheetState) {\r\n        if (s === undefined) return;\r\n        for (let action of s1.actions) {\r\n            let acn = action.name;\r\n            let ac = s.actions.find(a=>a.name === acn);\r\n            if (ac === undefined) continue;\r\n            s.actions.push(action);\r\n        }\r\n    }*/\r\n    async save(discription:string, data:any):Promise<any> {\r\n        let {appId} = this.entities;\r\n        let text = this.pack(data);\r\n\r\n        let ret = await this.tvApi.sheetSave(this.name, {app: appId, discription: discription, data:text});\r\n        return ret;\r\n        /*\r\n        let {id, state} = ret;\r\n        if (id > 0) this.changeStateCount(state, 1);\r\n        return ret;\r\n        */\r\n    }\r\n    async action(id:number, flow:number, state:string, action:string) {\r\n        return await this.tvApi.sheetAction(this.name, {id:id, flow:flow, state:state, action:action});\r\n    }\r\n    private async unpack(data:any):Promise<any> {\r\n        //if (this.schema === undefined) await this.loadSchema();\r\n        let ret = data[0];\r\n        let brief = ret[0];\r\n        let sheetData = this.unpackSheet(brief.data);\r\n        let flows = data[1];\r\n        return {\r\n            brief: brief,\r\n            data: sheetData,\r\n            flows: flows,\r\n        }\r\n    }\r\n    async getSheet(id:number):Promise<any> {\r\n        let ret = await this.tvApi.getSheet(this.name, id);\r\n        if (ret[0].length === 0) return await this.getArchive(id);\r\n        return await this.unpack(ret);\r\n    }\r\n    async getArchive(id:number):Promise<any> {\r\n        let ret = await this.tvApi.sheetArchive(this.name, id)\r\n        return await this.unpack(ret);\r\n    }\r\n\r\n    async getArchives(pageStart:number, pageSize:number) {\r\n        let ret = await this.tvApi.sheetArchives(this.name, {pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n\r\n    async getStateSheets(state:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        let ret = await this.tvApi.stateSheets(this.name, {state:state, pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n    createPageStateItems<T>(): PageStateItems<T> {return new PageStateItems<T>(this);}\r\n\r\n    async stateSheetCount():Promise<StateCount[]> {\r\n        let ret:StateCount[] = await this.tvApi.stateSheetCount(this.name);\r\n        return this.states.map(s => {\r\n            let n = s.name, count = 0;\r\n            let r = ret.find(v => v.state === n);\r\n            if (r !== undefined) count = r.count;\r\n            return {state: n, count: count} \r\n        });\r\n    }\r\n}\r\n\r\nexport class PageStateItems<T> extends PageItems<T> {\r\n    private sheet: Sheet;\r\n    constructor(sheet: Sheet) {\r\n        super(true);\r\n        this.sheet = sheet;\r\n        this.pageSize = 10;\r\n    }\r\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        let ret = await this.sheet.getStateSheets(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n","import {observable, IObservableArray} from 'mobx';\r\nimport {Field, ArrFields} from './entities';\r\nimport {Entity} from './entity';\r\n\r\nexport type QueryPageApi = (name:string, pageStart:any, pageSize:number, params:any) => Promise<string>;\r\nexport class Query extends Entity {\r\n    get typeName(): string { return 'query';}\r\n    private pageStart: any;\r\n    private pageSize:number;\r\n    private params:any;\r\n    private more: boolean;\r\n    private startField: Field;\r\n    //@observable loaded: boolean;\r\n    @observable list:IObservableArray; // = observable.array([], {deep: false});\r\n    returns: ArrFields[];\r\n    isPaged: boolean;\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {returns} = schema;\r\n        this.returns = returns;\r\n        this.isPaged = (returns as any[]).find(v => v.name === '$page') !== undefined;\r\n    }\r\n\r\n    resetPage(size:number, params:any) {\r\n        this.pageStart = undefined;\r\n        this.pageSize = size;\r\n        this.params = params;\r\n        this.more = false;\r\n        this.list = undefined;\r\n    }\r\n    get hasMore() {return this.more;}\r\n    async loadPage():Promise<void> {\r\n        if (this.pageSize === undefined) {\r\n            throw 'call resetPage(size:number, params:any) first';\r\n        }\r\n        let pageStart:any;\r\n        if (this.pageStart !== undefined) {\r\n            switch (this.startField.type) {\r\n                default: pageStart = this.pageStart; break;\r\n                case 'date':\r\n                case 'time':\r\n                case 'datetime': pageStart = (this.pageStart as Date).getTime(); break;\r\n            }\r\n        }\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.page(this.name, pageStart, this.pageSize+1, this.params);\r\n        let data = await this.unpackReturns(res);\r\n        this.list = observable.array([], {deep: false});\r\n        let page = data['$page'] as any[];\r\n        if (page !== undefined) {\r\n            if (page.length > this.pageSize) {\r\n                this.more = true;\r\n                page.pop();\r\n                let ret = this.returns.find(r => r.name === '$page');\r\n                this.startField = ret.fields[0];\r\n                this.pageStart = page[page.length-1][this.startField.name];\r\n            }\r\n            else {\r\n                this.more = false;\r\n            }\r\n            this.list.push(...page);\r\n        }\r\n        //this.loaded = true;\r\n    }\r\n\r\n    async page(params:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.page(this.name, pageStart, pageSize+1, params);\r\n        let data = await this.unpackReturns(res);\r\n        return data.$page;// as any[];\r\n    }\r\n    async query(params:any):Promise<any> {\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.query(this.name, params);\r\n        let data = await this.unpackReturns(res);\r\n        return data;\r\n    }\r\n    async table(params:any): Promise<any[]> {\r\n        let ret = await this.query(params);\r\n        for (let i in ret) {\r\n            return ret[i];\r\n        }\r\n    }\r\n    async obj(params:any):Promise<any> {\r\n        let ret = await this.table(params);\r\n        if (ret.length > 0) return ret[0];\r\n    }\r\n    async scalar(params:any):Promise<any> {\r\n        let ret = await this.obj(params);\r\n        for (let i in ret) return ret[i];\r\n    }\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class Book extends Query {\r\n    get typeName(): string { return 'book';}\r\n    protected queryApiName = 'book';\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class History extends Query {\r\n    get typeName(): string { return 'history';}\r\n    protected queryApiName = 'history';\r\n}\r\n","import { Entity } from './entity';\r\nimport { Action } from './action';\r\nimport { Query } from './query';\r\nimport { Field } from './entities';\r\n\r\ninterface MapActions {\r\n    add: Action;\r\n    del: Action;\r\n}\r\ninterface MapQueries {\r\n    all: Query;\r\n    page: Query;\r\n    query: Query;\r\n}\r\n\r\nexport class Map extends Entity {\r\n    get typeName(): string { return 'map';}\r\n    keys: Field[];\r\n    actions: MapActions = {} as any;\r\n    queries: MapQueries = {} as any;\r\n    schemaFrom: {owner:string; usq:string};\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.schemaFrom = this.schema.from;\r\n        let {actions, queries, keys} = schema;\r\n        this.entities.buildFieldTuid(this.keys = keys);\r\n        //let t = this.schemaStringify();\r\n        for (let i in actions) {\r\n            let schema = actions[i];\r\n            let {name} = schema;\r\n            let action = this.entities.newAction(name, undefined);\r\n            action.setSchema(schema);\r\n            this.actions[i] = action;\r\n        }\r\n        for (let i in queries) {\r\n            let schema = queries[i];\r\n            let {name} = schema;\r\n            let query = this.entities.newQuery(name, undefined);\r\n            query.setSchema(schema);\r\n            this.queries[i] = query;\r\n        }\r\n    }\r\n\r\n    async add(param:any) {\r\n        await this.loadSchema();\r\n        return await this.actions.add.submit(param);\r\n    }\r\n\r\n    async del(param:any) {\r\n        await this.loadSchema();\r\n        return await this.actions.del.submit(param);\r\n    }\r\n\r\n    async all() {\r\n        await this.loadSchema();\r\n        return await this.queries.all.query({});\r\n    }\r\n\r\n    async page(param:any, pageStart:any, pageSize: number) {\r\n        await this.loadSchema();\r\n        return await this.queries.page.page(param, pageStart, pageSize);\r\n    }\r\n\r\n    async query(param:any) {\r\n        await this.loadSchema();\r\n        return await this.queries.query.query(param);\r\n    }\r\n    async table(params:any): Promise<any[]> {\r\n        let ret = await this.query(params);\r\n        for (let i in ret) {\r\n            return ret[i];\r\n        }\r\n    }\r\n    async obj(params:any):Promise<any> {\r\n        let ret = await this.table(params);\r\n        if (ret.length > 0) return ret[0];\r\n    }\r\n    async scalar(params:any):Promise<any> {\r\n        let ret = await this.obj(params);\r\n        for (let i in ret) return ret[i];\r\n    }\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class Pending extends Query {\r\n    get typeName(): string { return 'pending';}\r\n    protected queryApiName = 'pending';\r\n}\r\n","//import {UsqlApi} from './usqlApi';\r\nimport {TuidMain, Tuid} from './tuid';\r\nimport {Action} from './action';\r\nimport {Sheet, SheetState, SheetAction} from './sheet';\r\nimport {Query} from './query';\r\nimport {Book} from './book';\r\nimport {History} from './history';\r\nimport { UsqApi } from 'tonva-tools';\r\nimport { Map } from './map';\r\nimport { Pending } from './pending';\r\nimport { CUsq } from '../controllers';\r\n\r\n/*\r\nexport interface Usq {\r\n    getTuidContent(tuid:Tuid): React.StatelessComponent<any>;\r\n    showTuid(tuid:Tuid, id:number):Promise<void>;\r\n}\r\n*/\r\n\r\nexport type FieldType = 'tinyint' | 'smallint' | 'int' | 'bigint' | 'dec' | 'char' | 'text' \r\n    | 'datetime' | 'date' | 'time';\r\n\r\nexport function fieldDefaultValue(type:FieldType) {\r\n    switch (type) {\r\n        case 'tinyint':\r\n        case 'smallint':\r\n        case 'int':\r\n        case 'bigint':\r\n        case 'dec':\r\n            return 0;\r\n        case 'char':\r\n        case 'text': \r\n            return '';\r\n        case 'datetime':\r\n        case 'date':\r\n            return '2000-1-1';\r\n        case 'time':\r\n            return '0:00';\r\n    }\r\n}\r\n\r\nexport interface Field {\r\n    name: string;\r\n    type: FieldType;\r\n    tuid?: string;\r\n    arr?: string;\r\n    url?: string;\r\n    null?: boolean;\r\n    size?: number;\r\n    owner?: string;\r\n    _ownerField: Field;\r\n    _tuid: Tuid;\r\n}\r\nexport interface ArrFields {\r\n    name: string;\r\n    fields: Field[];\r\n    id?: string;\r\n    order?: string;\r\n}\r\nexport interface FieldMap {\r\n    [name:string]: Field;\r\n}\r\n\r\nexport class Entities {\r\n    private tuids: {[name:string]: TuidMain} = {};\r\n    private actions: {[name:string]: Action} = {};\r\n    private sheets: {[name:string]: Sheet} = {};\r\n    private queries: {[name:string]: Query} = {};\r\n    private books: {[name:string]: Book} = {};\r\n    private maps: {[name:string]: Map} = {};\r\n    private histories: {[name:string]: History} = {};\r\n    private pendings: {[name:string]: Pending} = {};\r\n    private cacheTimer: any;\r\n    cUsq: CUsq;\r\n    usqApi: UsqApi;\r\n    appId: number;\r\n    usqId: number;\r\n\r\n    constructor(cUsq: CUsq, usqApi:UsqApi, appId: number) {\r\n        this.cUsq = cUsq;\r\n        this.usqApi = usqApi;\r\n        this.appId = appId;\r\n    }\r\n\r\n    tuid(name:string):TuidMain {return this.tuids[name.toLowerCase()]}\r\n    action(name:string):Action {return this.actions[name.toLowerCase()]}\r\n    sheet(name:string):Sheet {return this.sheets[name.toLowerCase()]}\r\n    query(name:string):Query {return this.queries[name.toLowerCase()]}\r\n    book(name:string):Book {return this.books[name.toLowerCase()]}\r\n    map(name:string):Map {return this.maps[name.toLowerCase()]}\r\n    history(name:string):History {return this.histories[name.toLowerCase()]}\r\n    pending(name:string):Pending {return this.pendings[name.toLowerCase()]}\r\n\r\n    sheetFromTypeId(typeId:number):Sheet {\r\n        for (let i in this.sheets) {\r\n            let sheet = this.sheets[i];\r\n            if (sheet.typeId === typeId) return sheet;\r\n        }\r\n    }\r\n\r\n    tuidArr: TuidMain[] = [];\r\n    actionArr: Action[] = [];\r\n    sheetArr: Sheet[] = [];\r\n    queryArr: Query[] = [];\r\n    bookArr: Book[] = [];\r\n    mapArr: Map[] = [];\r\n    historyArr: History[] = [];\r\n    pendingArr: Pending[] = [];\r\n\r\n    async loadAccess() {\r\n        let accesses = await this.usqApi.loadAccess();\r\n        this.buildEntities(accesses);\r\n    }\r\n\r\n    async loadEntities() {\r\n        let accesses = await this.usqApi.loadEntities();\r\n        this.buildEntities(accesses);\r\n    }\r\n\r\n    private buildEntities(entities:any) {\r\n        let {access, tuids} = entities;\r\n        this.buildTuids(tuids);\r\n        this.buildAccess(access);\r\n    }\r\n\r\n    getTuid(name:string, div?:string, tuidUrl?:string): Tuid {\r\n        let tuid = this.tuids[name];\r\n        if (tuid === undefined) return;\r\n        if (div === undefined) return tuid;\r\n        return tuid.divs[div];\r\n    }\r\n\r\n    cacheTuids(defer:number) {\r\n        this.clearCacheTimer();\r\n        this.cacheTimer = setTimeout(this.loadIds, defer);\r\n    }\r\n    private clearCacheTimer() {\r\n        if (this.cacheTimer === undefined) return;\r\n        clearTimeout(this.cacheTimer);\r\n        this.cacheTimer = undefined;\r\n    }\r\n    private loadIds = () => {\r\n        this.clearCacheTimer();\r\n        for (let i in this.tuids) {\r\n            let tuid = this.tuids[i];\r\n            tuid.cacheIds();\r\n        }\r\n    }\r\n\r\n    private buildTuids(tuids:any) {\r\n        let proxyColl = {} as any;\r\n        for (let i in tuids) {\r\n            let schema = tuids[i];\r\n            let {name, typeId, proxies} = schema;\r\n            let tuid = this.newTuid(i, typeId);\r\n            tuid.sys = true;\r\n            //tuid.setSchema(schema);\r\n            if (proxies !== undefined) proxyColl[i] = proxies;\r\n        }\r\n        for (let i in tuids) {\r\n            let schema = tuids[i];\r\n            let {name} = schema;\r\n            let tuid = this.getTuid(i);\r\n            //tuid.sys = true;\r\n            tuid.setSchema(schema);\r\n        }\r\n        for (let i in proxyColl) {\r\n            let proxies:string[] = proxyColl[i];\r\n            let tuid = this.tuids[i];\r\n            tuid.proxies = {};\r\n            for (let p of proxies) {\r\n                tuid.proxies[p] = this.tuids[p];\r\n            }\r\n        }\r\n    }\r\n\r\n    private buildAccess(access:any) {\r\n        for (let a in access) {\r\n            let v = access[a];\r\n            switch (typeof v) {\r\n                case 'string': this.fromType(a, v); break;\r\n                case 'object': this.fromObj(a, v); break;\r\n            }\r\n        }\r\n        /*\r\n        for (let tuid of this.tuidArr) {\r\n            tuid.setProxies(this);\r\n        }*/\r\n    }\r\n\r\n    newAction(name:string, id:number):Action {\r\n        let action = this.actions[name];\r\n        if (action !== undefined) return action;\r\n        action = this.actions[name] = new Action(this, name, id)\r\n        this.actionArr.push(action);\r\n        return action;\r\n    }\r\n    newTuid(name:string, id:number):TuidMain {\r\n        let tuid = this.tuids[name];\r\n        if (tuid !== undefined) return tuid;\r\n        tuid = this.tuids[name] = new TuidMain(this, name, id);\r\n        this.tuidArr.push(tuid);\r\n        return tuid;\r\n    }\r\n    newQuery(name:string, id:number):Query {\r\n        let query = this.queries[name];\r\n        if (query !== undefined) return query;\r\n        query = this.queries[name] = new Query(this, name, id)\r\n        this.queryArr.push(query);\r\n        return query;\r\n    }\r\n    newBook(name:string, id:number):Book {\r\n        let book = this.books[name];\r\n        if (book !== undefined) return book;\r\n        book = this.books[name] = new Book(this, name, id);\r\n        this.bookArr.push(book);\r\n        return book;\r\n    }\r\n    newMap(name:string, id:number):Map {\r\n        let map = this.maps[name];\r\n        if (map !== undefined) return map;\r\n        map = this.maps[name] = new Map(this, name, id)\r\n        this.mapArr.push(map);\r\n        return map;\r\n    }\r\n    newHistory(name:string, id:number):History {\r\n        let history = this.histories[name];\r\n        if (history !== undefined) return;\r\n        history = this.histories[name] = new History(this, name, id)\r\n        this.historyArr.push(history);\r\n        return history;\r\n    }\r\n    newPending(name:string, id:number):Pending {\r\n        let pending = this.pendings[name];\r\n        if (pending !== undefined) return;\r\n        pending = this.pendings[name] = new Pending(this, name, id)\r\n        this.pendingArr.push(pending);\r\n        return pending;\r\n    }\r\n    newSheet(name:string, id:number):Sheet {\r\n        let sheet = this.sheets[name];\r\n        if (sheet !== undefined) return sheet;\r\n        sheet = this.sheets[name] = new Sheet(this, name, id);\r\n        this.sheetArr.push(sheet);\r\n        return sheet;\r\n    }\r\n    private fromType(name:string, type:string) {\r\n        let parts = type.split('|');\r\n        type = parts[0];\r\n        let id = Number(parts[1]);\r\n        switch (type) {\r\n            case 'usq': this.usqId = id; break;\r\n            case 'tuid': \r\n                let tuid = this.newTuid(name, id);\r\n                tuid.sys = false;\r\n                break;\r\n            case 'action': this.newAction(name, id); break;\r\n            case 'query': this.newQuery(name, id); break;\r\n            case 'book': this.newBook(name, id); break;\r\n            case 'map': this.newMap(name, id); break;\r\n            case 'history': this.newHistory(name, id); break;\r\n            case 'sheet':this.newSheet(name, id); break;\r\n            case 'pending': this.newPending(name, id); break;\r\n        }\r\n    }\r\n    private fromObj(name:string, obj:any) {\r\n        switch (obj['$']) {\r\n            case 'sheet': this.buildSheet(name, obj); break;\r\n        }\r\n    }\r\n    private buildSheet(name:string, obj:any) {\r\n        let sheet = this.sheets[name];\r\n        if (sheet === undefined) sheet = this.newSheet(name, obj.id);\r\n        sheet.build(obj);\r\n        /*\r\n        let states = sheet.states;\r\n        for (let p in obj) {\r\n            switch(p) {\r\n                case '#':\r\n                case '$': continue;\r\n                default: states.push(this.createSheetState(p, obj[p])); break;\r\n            }\r\n        }*/\r\n    }\r\n    /*\r\n    private createSheetState(name:string, obj:object):SheetState {\r\n        let ret:SheetState = {name:name, actions:[]};\r\n        let actions = ret.actions;\r\n        for (let p in obj) {\r\n            let action:SheetAction = {name: p};\r\n            actions.push(action);\r\n        }\r\n        return ret;\r\n    }*/\r\n    buildFieldTuid(fields:Field[], mainFields?:Field[]) {\r\n        if (fields === undefined) return;\r\n        for (let f of fields) {\r\n            let {tuid, arr, url} = f;\r\n            if (tuid === undefined) continue;\r\n            f._tuid = this.getTuid(tuid, arr, url);\r\n        }\r\n        for (let f of fields) {\r\n            let {owner} = f;\r\n            if (owner === undefined) continue;\r\n            let ownerField = fields.find(v => v.name === owner);\r\n            if (ownerField === undefined) {\r\n                if (mainFields !== undefined) {\r\n                    ownerField = mainFields.find(v => v.name === owner);\r\n                }\r\n                if (ownerField === undefined) {\r\n                    throw `owner field ${owner} is undefined`;\r\n                }\r\n            }\r\n            f._ownerField = ownerField;\r\n            let {arr, url} = f;\r\n            f._tuid = this.getTuid(ownerField._tuid.name, arr, url);\r\n            if (f._tuid === undefined) throw 'owner field ${owner} is not tuid';\r\n        }\r\n    }\r\n    buildArrFieldsTuid(arrFields:ArrFields[], mainFields:Field[]) {\r\n        if (arrFields === undefined) return;\r\n        for (let af of arrFields) {\r\n            let {fields} = af;\r\n            if (fields === undefined) continue;\r\n            this.buildFieldTuid(fields, mainFields);\r\n        }\r\n    }\r\n}\r\n","export * from './entities';\r\nexport * from './entity';\r\nexport * from './action';\r\nexport * from './query';\r\nexport * from './sheet';\r\nexport * from './tuid';\r\nexport * from './book';\r\nexport * from './map';\r\nexport * from './history';\r\nexport * from './pending';\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Controller } from 'tonva-tools';\r\n\r\nexport abstract class Link {\r\n    abstract onClick: () => void;\r\n    abstract render(className?:string):JSX.Element;\r\n}\r\n\r\nexport class CLink extends Link {\r\n    private controller: Controller;\r\n    protected icon:string|JSX.Element;\r\n    protected label:string|JSX.Element;\r\n\r\n    constructor(controller:Controller) {\r\n        super();\r\n        this.controller = controller;\r\n        this.icon = controller.icon;\r\n        this.label = controller.label;\r\n    }\r\n\r\n    onClick = async () => {\r\n        await this.controller.start();\r\n    }\r\n\r\n    render(className?:string) {\r\n        return React.createElement(this.view, className);\r\n    }\r\n\r\n    protected view = (className?:string) => {\r\n        return <div\r\n            className={classNames('px-3', 'py-2', 'align-items-center', 'cursor-pointer', className)}\r\n            onClick={this.onClick}>\r\n            {this.icon} &nbsp; {this.label}\r\n        </div>;\r\n    }\r\n}\r\n","export * from './cLink';\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { Page, loadAppUsqs, nav, meInFrame, Controller, TypeVPage, VPage, resLang} from 'tonva-tools';\r\nimport { List, LMR, FA } from 'tonva-react-form';\r\nimport { CUsq, EntityType, UsqUI } from './usq';\r\nimport { centerApi } from '../centerApi';\r\n\r\nexport interface AppUI {\r\n    CApp?: typeof CApp;\r\n    CUsq?: typeof CUsq;\r\n    main?: TypeVPage<CApp>;\r\n    usqs: {[usq:string]: UsqUI};\r\n    res?: any;\r\n}\r\n\r\nexport class CApp extends Controller {\r\n    private appOwner:string;\r\n    private appName:string;\r\n    private isProduction:boolean;\r\n    private cImportUsqs: {[usq:string]: CUsq} = {};\r\n    protected ui:AppUI;\r\n    id: number;\r\n    appUnits:any[];\r\n\r\n    constructor(tonvaApp:string, ui?:AppUI) {\r\n        super(resLang(ui && ui.res));\r\n        let parts = tonvaApp.split('/');\r\n        if (parts.length !== 2) {\r\n            throw 'tonvaApp name must be / separated, owner/app';\r\n        }\r\n        this.appOwner = parts[0];\r\n        this.appName = parts[1];\r\n        this.ui = ui || {usqs:{}};\r\n        this.caption = this.res.caption || 'Tonva';\r\n    }\r\n    \r\n    readonly caption: string; // = 'View Model 版的 Usql App';    \r\n    cUsqCollection: {[usq:string]: CUsq} = {};\r\n\r\n    async startDebug() {\r\n        let appName = this.appOwner + '/' + this.appName;\r\n        let cApp = new CApp(appName, {usqs:{}} );\r\n        let keepNavBackButton = true;\r\n        await cApp.start(keepNavBackButton);    \r\n    }\r\n\r\n    protected async loadUsqs(): Promise<string[]> {\r\n        let retErrors:string[] = [];\r\n        let unit = meInFrame.unit;\r\n        let app = await loadAppUsqs(this.appOwner, this.appName);\r\n        let {id, usqs} = app;\r\n        this.id = id;\r\n        for (let appUsq of usqs) {\r\n            let {id:usqId, usqOwner, usqName, url, urlDebug, ws, access, token} = appUsq;\r\n            let usq = usqOwner + '/' + usqName;\r\n            let ui = this.ui && this.ui.usqs && this.ui.usqs[usq];\r\n            let cUsq = this.newCUsq(usq, usqId, access, ui || {});\r\n            let retError = await cUsq.loadSchema();\r\n            if (retError !== undefined) {\r\n                retErrors.push(retError);\r\n                continue;\r\n            }\r\n            this.cUsqCollection[usq] = cUsq;\r\n        }\r\n        if (retErrors.length === 0) return;\r\n        return retErrors;\r\n    }\r\n\r\n    async getImportUsq(usqOwner:string, usqName:string):Promise<CUsq> {\r\n        let usq = usqOwner + '/' + usqName;\r\n        let cUsq = this.cImportUsqs[usq];\r\n        if (cUsq !== undefined) return cUsq;\r\n        let ui = this.ui && this.ui.usqs && this.ui.usqs[usq];\r\n        let usqId = -1; // unknown\r\n        this.cImportUsqs[usq] = cUsq = this.newCUsq(usq, usqId, undefined, ui || {});\r\n        let retError = await cUsq.loadSchema();\r\n        if (retError !== undefined) {\r\n            console.error(retError);\r\n            debugger;\r\n            return;\r\n        }\r\n        return cUsq;\r\n    }\r\n\r\n    protected newCUsq(usq:string, usqId:number, access:string, ui:any) {\r\n        let cUsq = new (this.ui.CUsq || CUsq)(this, usq, this.id, usqId, access, ui);        \r\n        Object.setPrototypeOf(cUsq.x, this.x);\r\n        return cUsq;\r\n    }\r\n\r\n    get cUsqArr():CUsq[] {\r\n        let ret:CUsq[] = [];\r\n        for (let i in this.cUsqCollection) {\r\n            ret.push(this.cUsqCollection[i]);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    getCUsq(apiName:string):CUsq {\r\n        return this.cUsqCollection[apiName];\r\n    }\r\n\r\n    protected get VAppMain():TypeVPage<CApp> {return (this.ui&&this.ui.main) || VAppMain}\r\n\r\n    protected async beforeStart():Promise<boolean> {\r\n        console.log('if (await super.beforeStart() === false) return false;');\r\n        if (await super.beforeStart() === false) return false;\r\n        return await this.loadUnits();\r\n    }\r\n\r\n    protected async loadUnits() {\r\n        try {\r\n            let hash = document.location.hash;\r\n            if (hash.startsWith('#tvdebug')) {\r\n                this.isProduction = false;\r\n            }\r\n            else {\r\n                this.isProduction = hash.startsWith('#tv');\r\n            }\r\n            let {unit} = meInFrame;\r\n            if (this.isProduction === false && (unit===undefined || unit<=0)) {\r\n                let app = await loadAppUsqs(this.appOwner, this.appName);\r\n                nav.logStep('after loadAppUsqs');\r\n                let {id} = app;\r\n                this.id = id;\r\n                await this.loadAppUnits();\r\n                nav.logStep('after loadAppUnits');\r\n                switch (this.appUnits.length) {\r\n                    case 0:\r\n                        this.showUnsupport();\r\n                        return false;\r\n                    case 1:\r\n                        unit = this.appUnits[0].id;\r\n                        if (unit === undefined || unit < 0) {\r\n                            this.showUnsupport();\r\n                            return false;\r\n                        }\r\n                        meInFrame.unit = unit;\r\n                        break;\r\n                    default: \r\n                        //nav.clear();\r\n                        nav.push(<this.selectUnitPage />)\r\n                        return false;\r\n                }\r\n            }\r\n\r\n            let retErrors = await this.loadUsqs();\r\n            if (retErrors !== undefined) {\r\n                this.openPage(<Page header=\"ERROR\">\r\n                    <div className=\"m-3\">\r\n                        <div>Load Usqs 发生错误：</div>\r\n                        {retErrors.map((r, i) => <div key={i}>{r}</div>)}\r\n                    </div>\r\n                </Page>);\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        catch (err) {\r\n            nav.push(<Page header=\"App start error!\">\r\n                <pre>\r\n                    {typeof err === 'string'? err : err.message}\r\n                </pre>\r\n            </Page>);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    protected async internalStart(param:any) {\r\n        if (param !== true) {\r\n            this.clearPrevPages();\r\n        }\r\n        await this.showMainPage();\r\n    }\r\n\r\n    private loaded: boolean;\r\n    async load() {\r\n        if (this.loaded === true) return;\r\n        //console.log('await this.beforeStart();');\r\n        //await this.beforeStart();\r\n        //if (await this.beforeStart() === false) return false;\r\n        this.registerReceiveHandler();\r\n        let ret = await this.loadUnits();\r\n        this.loaded = true;\r\n        return ret;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        return this.renderView(this.VAppMain);\r\n    }\r\n\r\n    // 如果是独立app，删去显示app之前的页面。\r\n    // 如果非独立app，则不删\r\n    protected clearPrevPages() {\r\n        nav.clear();\r\n    }\r\n\r\n    private showUnsupport() {\r\n        this.clearPrevPages();\r\n        this.openPage(<Page header=\"APP无法运行\" logout={true}>\r\n            <div className=\"m-3 text-danger container\">\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">\r\n                        <FA name=\"exclamation-triangle\" />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        用户不支持APP\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">用户: </div>\r\n                    <div className=\"col\">{`${nav.user.name}`}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">App:</div>\r\n                    <div className=\"col\">{`${this.appOwner}/${this.appName}`}</div>\r\n                </div>\r\n            </div>\r\n        </Page>)\r\n    }\r\n\r\n    private async showMainPage() {\r\n        // #tvRwPBwMef-23-sheet-api-108\r\n        let parts = document.location.hash.split('-');\r\n        if (parts.length > 2) {\r\n            let action = parts[2];\r\n            // sheet_debug 表示centerUrl是debug方式的\r\n            if (action === 'sheet' || action === 'sheet_debug') {\r\n                let usqId = Number(parts[3]);\r\n                let sheetTypeId = Number(parts[4]);\r\n                let sheetId = Number(parts[5]);\r\n                let cUsq = this.getCUsqFromId(usqId);\r\n                if (cUsq === undefined) {\r\n                    alert('unknown usqId: ' + usqId);\r\n                    return;\r\n                }\r\n                this.clearPrevPages();\r\n                await cUsq.navSheet(sheetTypeId, sheetId);\r\n                return;\r\n            }\r\n        }\r\n        this.showVPage(this.VAppMain);\r\n    }\r\n\r\n    private getCUsqFromId(usqId:number): CUsq {\r\n        for (let i in this.cUsqCollection) {\r\n            let cUsq = this.cUsqCollection[i];\r\n            if (cUsq.id === usqId) return cUsq;\r\n        }\r\n        return;\r\n    }\r\n\r\n    private async loadAppUnits() {\r\n        let ret = await centerApi.userAppUnits(this.id);\r\n        this.appUnits = ret;\r\n        if (ret.length === 1) {\r\n            meInFrame.unit = ret[0].id;\r\n        }\r\n    }\r\n\r\n    renderRow = (item: any, index: number):JSX.Element => {\r\n        let {id, nick, name} = item;\r\n        return <LMR className=\"px-3 py-2\" right={'id: ' + id}>\r\n            <div>{nick || name}</div>\r\n        </LMR>;\r\n    }\r\n    onRowClick = async (item: any) => {\r\n        meInFrame.unit = item.id; // 25;\r\n        await this.start();\r\n    }\r\n\r\n    /*\r\n    protected appPage = () => {\r\n        return <Page header={this.caption} logout={()=>{meInFrame.unit = undefined}}>\r\n            {this.cUsqArr.map((v,i) => <div key={i}>{v.render()}</div>)}\r\n        </Page>;\r\n    };\r\n    */\r\n    //<LMR className=\"px-3 py-2 my-2 bg-light\"\r\n    //left={<FA name='cog' fixWidth={true} className=\"text-info mr-2 pt-1\" />}\r\n    //onClick={this.opClick}>设置操作权限</LMR>\r\n\r\n    protected selectUnitPage = () => {\r\n        return <Page header=\"选择小号\" logout={true}>\r\n            <List items={this.appUnits} item={{render: this.renderRow, onClick: this.onRowClick}}/>\r\n        </Page>\r\n    }\r\n}\r\n\r\nclass VAppMain extends VPage<CApp> {\r\n    async showEntry(param?:any) {\r\n        this.openPage(this.appPage);\r\n    }\r\n\r\n    render(param?:any) {\r\n        return this.appContent();\r\n    }\r\n\r\n    protected appPage() {\r\n        let {caption} = this.controller;\r\n        return <Page header={caption} logout={()=>{meInFrame.unit = undefined}}>\r\n            {this.appContent()}\r\n        </Page>;\r\n    }\r\n\r\n    protected appContent = () => {\r\n        let {cUsqArr} = this.controller;\r\n        let content:any;\r\n        if (cUsqArr.length === 0) {\r\n            content = <div className=\"text-danger\">\r\n                <FA name=\"\" /> 此APP没有绑定任何的USQ\r\n            </div>;\r\n        }\r\n        else {\r\n            content = cUsqArr.map((v,i) => <div key={i}>{v.render()}</div>);\r\n        }\r\n        return <>{content}</>;\r\n    };\r\n}\r\n","import React from 'react';\r\nimport { FA } from \"tonva-react-form\";\r\n\r\nfunction icon(className:string, name:string) {\r\n    return <FA className={className} name={name} fixWidth={true} />;\r\n}\r\n/*\r\nexport interface EntityRes {\r\n    caption: string;\r\n    icon: JSX.Element;\r\n}\r\n*/\r\n\r\nexport const entityIcons:{[type:string]:JSX.Element} = {\r\n    tuid: icon('text-info', 'list-alt'),\r\n    action: icon('text-info', 'hand-o-right'),\r\n    map: icon('text-muted', 'list-ul'),\r\n    book: icon('text-muted', 'book'),\r\n    query: icon('text-warning', 'search'),\r\n    history: icon('text-info', 'hand-o-right'),\r\n    pending: icon('text-info', 'forward'),\r\n    sheet: icon('text-primary', 'wpforms'),\r\n};\r\n","import { Controller } from \"tonva-tools\";\r\nimport { CUsq } from \"./usq\";\r\n\r\nexport abstract class ControllerUsq extends Controller {\r\n    constructor(cUsq: CUsq, res:any) {\r\n        super(res);\r\n        this.cUsq = cUsq;\r\n    }\r\n    cUsq: CUsq;\r\n}\r\n","import {CenterApi as CenterApiBase} from 'tonva-tools';\r\n\r\n//\r\n\r\nexport class CenterApi extends CenterApiBase {\r\n    async userAppUnits(app:number):Promise<any[]> {\r\n        return await this.get('tie/user-app-units', {app:app});\r\n    }\r\n}\r\n\r\nexport const centerApi = new CenterApi('tv/', undefined);\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, ButtonProps, Badge } from 'reactstrap';\r\nimport { Page } from 'tonva-tools';\r\nimport { List, Muted, LMR } from 'tonva-react-form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { CSheet, SheetUI } from './cSheet';\r\n\r\nexport class VSheetMain extends VEntity<Sheet, SheetUI, CSheet> {\r\n    async showEntry() {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    newClick = () => this.event('new');\r\n    schemaClick = () => this.event('schema'); \r\n    archivesClick = () => this.event('archives');\r\n    sheetStateClick = (state) => this.event('state', state);\r\n\r\n    renderState = (item:any, index:number) => {\r\n        let {state, count} = item;\r\n        if (count === 0) return null;\r\n        let badge = <Badge className=\"ml-5 align-self-end\" color=\"success\">{count}</Badge>;\r\n        return <LMR className=\"px-3 py-2\" left={this.controller.getStateLabel(state)} right={badge} />;\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let list = this.controller.statesCount.filter(row=>row.count);\r\n        let right = <button className=\"btn btn-outline-primary\" onClick={this.archivesClick}>已归档</button>;\r\n        let templet;\r\n        if (this.isDev === true) {\r\n            templet = <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.schemaClick}>模板</button>;\r\n        }\r\n        return <Page header={this.label}>\r\n            <LMR\r\n                className=\"mx-3 my-2\"\r\n                right={right}>\r\n                <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.newClick}>新建</button>\r\n                {templet}\r\n            </LMR>\r\n            <List className=\"my-2\"\r\n                header={<Muted className=\"mx-3 my-1\">待处理{this.label}</Muted>}\r\n                none=\"[ 无 ]\"\r\n                items={list}\r\n                item={{render:this.renderState, onClick:this.sheetStateClick}} />\r\n        </Page>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { FA } from 'tonva-react-form';\r\nimport { Sheet } from '../../entities';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VSheetNew extends VEntity<Sheet, SheetUI, CSheet> {\r\n    vForm: VForm;\r\n\r\n    async showEntry(param?:any) {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    private onSubmit = async ():Promise<void> => {\r\n        let values = this.vForm.getValues();\r\n        let valuesWithBox = this.vForm.values;\r\n        //let ret = \r\n        await this.controller.onSave(values, valuesWithBox);\r\n        /*\r\n        this.ceasePage();\r\n        //this.openPage(this.finishedPage);\r\n        await this.controller.showSaved(ret);\r\n        */\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render()}\r\n    </Page>;\r\n}\r\n","import * as React from 'react';\r\nimport {List, Muted, LMR, EasyDate, FA} from 'tonva-react-form';\r\nimport { Sheet } from '../../entities';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CSheet, SheetUI, SheetData } from './cSheet';\r\n\r\nconst leftFlowStyle = {width: '8rem'};\r\n\r\nexport abstract class VSheetView extends VEntity<Sheet, SheetUI, CSheet> {\r\n    protected vForm: VForm;\r\n    protected sheetData: SheetData;\r\n    //data: any;\r\n    //state: string;\r\n    //flows:any[];\r\n\r\n    flowRow = (item:any, index:number):JSX.Element => {\r\n        let {date, user, preState, state, action} = item;\r\n        if (action === undefined) action = <><FA className=\"text-primary\" name=\"pencil-square-o\" /> 制单</>;\r\n        let to;\r\n        switch (state) {\r\n            case '$': break;\r\n            case '#': to = <><FA className=\"text-success\" name=\"file-archive-o\" /></>; break;\r\n            default: to = <><FA className=\"text-muted\" name=\"arrow-right\" /> &nbsp; {state}</>; break;\r\n        }\r\n        /*\r\n        return <div className=\"row\">\r\n            <div className=\"col-sm\"></div>\r\n            <div className=\"col-sm\"><div className=\"p-2\">{to}</div></div>\r\n            <div className=\"col-sm text-right\"><div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div></div>\r\n        </div>;\r\n        */\r\n        return <LMR \r\n            left={<div className=\"pl-3 py-2\" style={leftFlowStyle}>{action}</div>}\r\n            right={<div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div>}>\r\n            <div className=\"p-2\">{to}</div>\r\n        </LMR>;\r\n    }\r\n\r\n    protected sheetView = () => {\r\n        let {brief, flows} = this.sheetData;\r\n        let removed;\r\n        if (brief.state === '-')\r\n            removed = <div className=\"mx-3 my-2\" style={{color:'red'}}>本单据作废</div>;\r\n        return <div>\r\n            {removed}\r\n            {this.vForm.render()}\r\n    \r\n            <List header={<Muted className=\"mx-3 my-1\">流程</Muted>}\r\n                items={flows}\r\n                item={{render:this.flowRow}}/>\r\n        </div>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { VForm, FormMode } from '../form';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetEdit extends VSheetView { //VEntity<Sheet, SheetUI, CSheet> {\r\n    protected sheetData: SheetData;\r\n    async showEntry(param: SheetData) {\r\n        this.sheetData = param;\r\n        this.vForm = this.createForm(this.onSubmit, param.data, FormMode.edit);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSubmit = async ():Promise<void> => {\r\n        let values = this.vForm.getValues();\r\n        await this.controller.saveSheet(values, this.vForm.values);\r\n        this.closePage();\r\n        this.returnCall(this.vForm.values);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render()}\r\n    </Page>;\r\n}\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Button } from 'reactstrap';\r\nimport { nav, Page } from 'tonva-tools';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\nimport { FA } from 'tonva-react-form';\r\n\r\nexport class VSheetAction extends VSheetView { \r\n    async showEntry(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\r\n        //this.brief = brief;\r\n        //this.flows = flows;\r\n        //this.data = data;\r\n        //this.state = this.brief.state;\r\n        this.vForm = this.createForm(undefined, sheetData.data);\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    actionClick = async (action:any) => {\r\n        let {id, flow, state} = this.sheetData.brief;\r\n        let res = await this.controller.action(id, flow, state, action.name);\r\n        this.ceasePage();\r\n        this.openPage(this.acted);\r\n        //alert(jsonStringify(res));\r\n        //await this.backPage();\r\n    }\r\n\r\n    deleteClick = async () => {\r\n        alert('单据作废：程序正在设计中');\r\n    }\r\n\r\n    editClick = async () => {\r\n        //alert('修改单据：程序正在设计中');\r\n        let values = await this.controller.editSheet(this.sheetData);\r\n        this.vForm.setValues(values);\r\n    }\r\n\r\n    protected page = () => {\r\n        let {brief} = this.sheetData;\r\n        let {state, no} = brief;\r\n        let stateLabel = this.controller.getStateLabel(state);\r\n        let {states} = this.entity;\r\n        let s = states.find(v => v.name === state);\r\n        let actionButtons, startButtons;\r\n        if (s === undefined) {\r\n            let text:string, cn:string;\r\n            switch (state) {\r\n                default:\r\n                    text = '不认识的单据状态\\'' + state + '\\'';\r\n                    cn = 'text-info';\r\n                    break;\r\n                case '-': \r\n                    text = '已作废';\r\n                    cn = 'text-danger';\r\n                    break;\r\n                case '#':\r\n                    text = '已归档';\r\n                    cn = 'text-success';\r\n                    break;\r\n            }\r\n            actionButtons = <div className={classNames(cn)}>[{text}]</div>;\r\n        }\r\n        else {\r\n            actionButtons = <div className=\"flex-grow-1\">{s.actions.map((v,index) => \r\n                <Button\r\n                    key={index}\r\n                    className=\"mr-2\"\r\n                    color=\"primary\"\r\n                    onClick={()=>this.actionClick(v)}\r\n                >\r\n                    {this.controller.getActionLabel(state, v.name)}\r\n                </Button>)}\r\n            </div>;\r\n            if (state === '$') {\r\n                startButtons = <div>\r\n                    <Button outline={true} className=\"ml-2\" color=\"info\" onClick={this.editClick}>修改</Button>\r\n                    <Button outline={true} className=\"ml-2\" color=\"danger\" onClick={this.deleteClick}>作废</Button>\r\n                </div>\r\n            }\r\n        };\r\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\r\n            <div className=\"mb-2\">\r\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\r\n                    {actionButtons}\r\n                    {startButtons}\r\n                </div>\r\n                <this.sheetView />\r\n            </div>\r\n        </Page>;\r\n    }\r\n\r\n    private acted = () => {\r\n        let {discription} = this.sheetData.brief;\r\n        return <Page header=\"已处理\" back=\"close\">\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"p-3\">{discription}</div>\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\r\n                <div className=\"p-3\">\r\n                    <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VSheetSchema extends VEntity<Sheet, SheetUI, CSheet> {\r\n    async showEntry(param?:any) {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label + \"模板\"}>\r\n        <pre className=\"mx-3 my-2\">{this.entity.schemaStringify()}</pre>\r\n    </Page>;\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport {List, LMR, FA, EasyDate, Muted} from 'tonva-react-form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VArchives extends VEntity<Sheet, SheetUI, CSheet> {\r\n    list: any[];\r\n\r\n    async showEntry() {\r\n        this.list = await this.entity.getArchives(undefined, 10);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    archiveClick = async (brief:any) => {\r\n        if (brief.processing===1) return;\r\n        this.event('archived', brief);\r\n    }\r\n    archiveRow = (row:any, index:number) => {\r\n        let {id, no, discription, date} = row;\r\n        let left = <>\r\n            {row.processing===1? '... ' : ''}\r\n            {row.no} &nbsp; {row.discription}\r\n        </>;\r\n        let right = <Muted><EasyDate date={date} /></Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />\r\n    }\r\n\r\n    protected view = () => {\r\n        return <Page header={'已归档' + this.label}>\r\n            <List items={this.list} item={{render:this.archiveRow, onClick:this.archiveClick}} />\r\n        </Page>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { List, Muted, FA, LMR, EasyDate } from 'tonva-react-form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { CSheet, SheetUI } from './cSheet';\r\n\r\nexport class VSheetList extends VEntity<Sheet, SheetUI, CSheet> {\r\n    protected row: (values) => JSX.Element;\r\n    stateName: string;\r\n    stateLabel: string;\r\n\r\n    async showEntry(item:any) {\r\n        this.row = this.ui.listRow || this.rowContent;\r\n        this.stateName = item.state;\r\n        this.stateLabel = this.controller.getStateLabel(this.stateName);\r\n        //await this.controller.getStateSheets(this.stateName, 0, 10);\r\n        await this.controller.pageStateItems.first(this.stateName);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    rowClick = async (brief:any) => {\r\n        if (brief.processing===1) {\r\n            this.event('processing', brief.id);\r\n            return;\r\n        }\r\n        this.event('action', brief.id);\r\n    }\r\n\r\n    private onScrollBottom = () => {\r\n        console.log('onScrollBottom');\r\n        this.controller.pageStateItems.more();\r\n    }\r\n\r\n    protected rowContent = (row:any):JSX.Element => {\r\n        let {id, no, discription, date, processing} = row;\r\n        let left = <>            \r\n            {no} &nbsp; <Muted>{discription}</Muted> {processing===1? '...' : ''}\r\n        </>;\r\n        let right = <Muted><EasyDate date={date} /></Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />;\r\n    }\r\n\r\n    private renderRow = (row:any, index:number) => <this.row {...row} />\r\n\r\n    protected view = () => {\r\n        //let sheets = this.controller.stateSheets;\r\n        let {pageStateItems} = this.controller;\r\n        return <Page header={this.label + ' - ' + this.stateLabel} onScrollBottom={this.onScrollBottom}>\r\n            <List items={pageStateItems} item={{render:this.renderRow, onClick:this.rowClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {Page} from 'tonva-tools';\r\nimport { VSheetView } from './vSheetView';\r\nimport { CSheet, SheetUI, SheetData } from './cSheet';\r\n\r\nexport interface State {\r\n    flows: any;\r\n    data: any;\r\n}\r\nexport class VArchived extends VSheetView {\r\n    //protected controller: CSheet;\r\n    //brief: any;\r\n\r\n    async showEntry(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        /*\r\n        let {brief, data, flows} = await this.controller.getArchived(inBrief.id);\r\n        this.brief = brief;\r\n        this.data = data;\r\n        this.flows = flows;\r\n        */\r\n        this.vForm = this.createForm(undefined, this.sheetData.data);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => {\r\n        let {brief} = this.sheetData;\r\n        return <Page header={this.label + ':' + '-' + brief.no}>\r\n            <this.sheetView />\r\n        </Page>;\r\n    };\r\n}\r\n","import { Sheet } from \"../../entities\";\r\nimport { SheetUI, CSheet } from \"./cSheet\";\r\nimport { VEntity } from \"../CVEntity\";\r\n\r\nexport abstract class VSheet extends VEntity<Sheet, SheetUI, CSheet> {\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { FA } from 'tonva-react-form';\r\nimport { VSheet } from \"./vSheet\";\r\n\r\nexport class VSheetSaved extends VSheet {\r\n    private brief: any;\r\n    async showEntry(brief?:any) {\r\n        this.brief = brief;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    private restart = async () => {\r\n        this.ceasePage();\r\n        await this.event('new');\r\n    }\r\n\r\n    actionClick = async (action:any) => {\r\n        this.ceasePage();\r\n        let {id, flow, state} = this.brief;\r\n        let res = await this.controller.action(id, flow, state, action.name);\r\n        this.openPage(this.acted);\r\n    }\r\n\r\n    private buttons = <>\r\n        <button className=\"btn btn-outline-primary mr-3\" onClick={this.restart}>继续开单</button>\r\n        <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\r\n    </>;\r\n\r\n    private view = () => {\r\n        let {states} = this.entity;\r\n        const state = '$';\r\n        let s = states.find(v => v.name === state);\r\n        let actionButtons = <>{s.actions.map((v,index) => \r\n            <button\r\n                key={index}\r\n                className=\"btn btn-primary mr-3\"\r\n                onClick={()=>this.actionClick(v)}\r\n            >\r\n                {this.controller.getActionLabel(state, v.name)}\r\n            </button>)}\r\n        </>;\r\n        return <Page header=\"已保存\" back=\"close\">\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已保存！系统尚未处理</div>\r\n                <div className=\"p-3\">\r\n                    {actionButtons}\r\n                    {this.buttons}\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n\r\n    private acted = () => {\r\n        return <Page>\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\r\n                <div className=\"p-3\">\r\n                    {this.buttons}\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Button } from 'reactstrap';\r\nimport { nav, Page } from 'tonva-tools';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\nimport { FA } from 'tonva-react-form';\r\n\r\nexport class VSheetProcessing extends VSheetView { \r\n    async showEntry(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\r\n        //this.brief = brief;\r\n        //this.flows = flows;\r\n        //this.data = data;\r\n        //this.state = this.brief.state;\r\n        this.vForm = this.createForm(undefined, sheetData.data);\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    protected page = () => {\r\n        let {brief} = this.sheetData;\r\n        let {state, no} = brief;\r\n        let stateLabel = this.controller.getStateLabel(state);\r\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\r\n            <div className=\"mb-2\">\r\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\r\n                    正在处理中...\r\n                </div>\r\n                <this.sheetView />\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n","import { IObservableArray, observable } from \"mobx\";\r\nimport { TypeVPage, VPage, PageItems, postWsToTop } from 'tonva-tools';\r\nimport { Sheet, StateCount } from \"../../entities\";\r\nimport { CEntity, EntityUI, VEntity } from \"../CVEntity\";\r\nimport { VSheetMain } from \"./vMain\";\r\nimport { VSheetNew } from \"./vNew\";\r\nimport { VSheetEdit } from \"./vEdit\";\r\nimport { VSheetAction } from \"./vSheetAction\";\r\nimport { VSheetSchema } from \"./vSchema\";\r\nimport { VArchives } from \"./vArchives\";\r\nimport { VSheetList } from \"./vList\";\r\nimport { VArchived } from \"./vArchived\";\r\nimport { VSheetSaved } from \"./vSaved\";\r\nimport { VSheetProcessing } from \"./vSheetProcessing\";\r\n\r\nexport interface SheetActionUI {\r\n    label: string;\r\n}\r\n\r\nexport interface StateUI {\r\n    label: string;\r\n    actions: {[name:string]: SheetActionUI}\r\n}\r\n\r\nexport interface SheetUI extends EntityUI {\r\n    CSheet?: typeof CSheet;\r\n    states?: {[name:string]: StateUI};\r\n    main?: TypeVPage<CSheet>;\r\n    sheetNew?: TypeVPage<CSheet>;\r\n    sheetSaved?: TypeVPage<CSheet>;\r\n    sheetEdit?: TypeVPage<CSheet>;\r\n    sheetAction?: TypeVPage<CSheet>;\r\n    listRow?: (row:any) => JSX.Element;\r\n    sheetTitle?: (sheetValues:any, x:any) => string;      // 返回单据的描述\r\n}\r\n\r\nexport interface SheetData {\r\n    brief: any;\r\n    data: any;\r\n    flows: any[];\r\n}\r\n\r\nexport class CSheet extends CEntity<Sheet, SheetUI> {\r\n    statesCount:IObservableArray<StateCount> = observable.array<StateCount>([], {deep:true});\r\n    curState:string;\r\n    pageStateItems: PageItems<any>;\r\n\r\n    protected async internalStart() {\r\n        await this.loadStateSheetCount();\r\n        this.pageStateItems = this.entity.createPageStateItems();\r\n        await this.showVPage(this.VSheetMain);\r\n    }\r\n\r\n    protected async onMessage(msg: any):Promise<void> {\r\n        let {type, body, from, to, push} = msg;\r\n        if (type === 'sheet') this.onSheet(from, to, body);\r\n    }\r\n    private onSheet(from:number, to:number[], sheetData:any) {\r\n        let me = this.user.id;\r\n        let {id, preState, state} = sheetData;\r\n        console.log({$:'onMessage sheet', from:from, to:to.join(','), id:id, preState:preState, state:state, me:me, sheetData:sheetData})\r\n        if (from === me) {\r\n            this.sheetActPreState(id, preState);\r\n        }\r\n        if (to.find(v=>v===me) !== undefined) {\r\n            this.sheetActState(id, state, sheetData);\r\n        }\r\n    }\r\n    private sheetActPreState(id:number, preState:string) {\r\n        this.changeStateCount(preState, -1);\r\n        if (this.curState === undefined || this.curState !== preState) return;\r\n        /*\r\n        let index = this.stateSheets.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.stateSheets.splice(index, 1);\r\n        }*/\r\n        let index = this.pageStateItems.items.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.pageStateItems.items.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    private sheetActState(id:number, state:string, msg:any) {\r\n        this.changeStateCount(state, 1);\r\n        if (this.curState === undefined || this.curState !== state) return;\r\n        /*\r\n        if (this.stateSheets.findIndex(v => v.id === id) < 0) {\r\n            this.stateSheets.push(msg);\r\n        }\r\n        */\r\n        if (this.pageStateItems.items.findIndex(v => v.id === id) < 0) {\r\n            this.pageStateItems.items.push(msg);\r\n        }\r\n    }\r\n\r\n    private changeStateCount(state:string, delta:number) {\r\n        if (state === undefined) return;\r\n        let index = this.statesCount.findIndex(v => v.state === state);\r\n        console.log({$:'changeState', state: state, delta: delta, index: index});\r\n        if (index < 0) return;\r\n        let stateCount = this.statesCount[index];\r\n        stateCount.count += delta;\r\n        if (stateCount.count < 0) stateCount.count = 0;\r\n    }\r\n\r\n    protected get VSheetMain():TypeVPage<CSheet> {return (this.ui&&this.ui.main) || VSheetMain}\r\n    protected get VSheetNew(): TypeVPage<CSheet> {return this.ui.sheetNew || VSheetNew}\r\n    protected get VSheetSaved(): TypeVPage<CSheet> {return this.ui.sheetSaved || VSheetSaved}\r\n    protected get VSheetEdit(): TypeVPage<CSheet> {return this.ui.sheetEdit || VSheetEdit}\r\n    protected get VSheetSchema(): TypeVPage<CSheet> {return VSheetSchema}\r\n    protected get VArchives(): TypeVPage<CSheet> {return VArchives}\r\n    protected get VArchived(): TypeVPage<CSheet> {return VArchived}\r\n    protected get VSheetList(): TypeVPage<CSheet> {return VSheetList}\r\n    protected get VSheetAction(): TypeVPage<CSheet> {return this.ui.sheetAction || VSheetAction}\r\n    protected get VSheetProcessing(): TypeVPage<CSheet> {return VSheetProcessing}\r\n    protected async onEvent(type:string, value:any) {\r\n        let c: TypeVPage<CSheet>;\r\n        switch (type) {\r\n            default: return;\r\n            case 'new': c = this.VSheetNew; break;\r\n            case 'schema': c = this.VSheetSchema; break;\r\n            case 'archives': c = this.VArchives; break;\r\n            case 'state':\r\n                this.curState = value.state;\r\n                c = this.VSheetList;\r\n                break;\r\n            case 'archived':\r\n                await this.showArchived(value); return;\r\n            case 'action':\r\n                await this.showAction(value); return;\r\n            case 'processing':\r\n                await this.showProcessing(value); return;\r\n        }\r\n        await this.showVPage(c, value);\r\n    }\r\n\r\n    async startSheet(sheetId:number) {\r\n        if (await this.beforeStart() === false) return;\r\n        await this.onEvent('action', sheetId);\r\n    }\r\n\r\n    async showAction(sheetId:number) {\r\n        let sheetData:SheetData = await this.getSheetData(sheetId);\r\n        postWsToTop({\r\n            body: {\r\n                $type: 'msg',\r\n                action: '$sheet',\r\n                msg: {\r\n                    id: sheetId,\r\n                    usq: this.cUsq.id,\r\n                    state: sheetData.brief.state\r\n                }\r\n            }\r\n        });\r\n        await this.showVPage(this.VSheetAction, sheetData);\r\n    }\r\n\r\n    async showProcessing(sheetId:number) {\r\n        let sheetData:SheetData = await this.getSheetData(sheetId);\r\n        await this.showVPage(this.VSheetProcessing, sheetData);\r\n    }\r\n\r\n    async editSheet(sheetData:SheetData):Promise<any> {\r\n        //alert('修改单据：程序正在设计中');\r\n        let values = await this.vCall(this.VSheetEdit, sheetData);\r\n        return values;\r\n    }\r\n\r\n    async showArchived(inBrief:any) {\r\n        let sheetData = await this.getArchived(inBrief.id);\r\n        await this.showVPage(this.VArchived, sheetData);\r\n    }\r\n\r\n    onSave = async (values:any, valuesWithBox:any):Promise<void> => {\r\n        //let values = this.vForm.getValues();\r\n        //let ret = await this.controller.saveSheet(values, this.vForm.values);\r\n        let ret = await this.saveSheet(values, valuesWithBox);\r\n        this.ceasePage();\r\n        //this.openPage(this.finishedPage);\r\n        await this.showSaved(ret);\r\n    }\r\n\r\n    async showSaved(sheetData:any) {\r\n        await this.showVPage(this.VSheetSaved, sheetData);\r\n    }\r\n\r\n    private getStateUI(stateName:string) {\r\n        let {states} = this.res;\r\n        if (states === undefined) return;\r\n        return states[stateName];\r\n    }\r\n    getStateLabel(stateName:string) {\r\n        let state = this.getStateUI(stateName);\r\n        let ret = (state && state.label) || stateName;\r\n        switch (ret) {\r\n            default: return ret;\r\n            case '$': return '新单';\r\n        }\r\n    }\r\n    getActionLabel(stateName:string, actionName:string) {\r\n        let state = this.getStateUI(stateName);\r\n        if (state === undefined) return actionName;\r\n        let actions = state.actions;\r\n        if (actions === undefined) return actionName;\r\n        let action = actions[actionName];\r\n        return (action && action.label) || actionName;\r\n    }\r\n\r\n    private async loadStateSheetCount():Promise<void> {\r\n        this.statesCount.clear();\r\n        let statesCount = await this.entity.stateSheetCount();\r\n        this.statesCount.splice(0, 0, ...statesCount);\r\n    }\r\n\r\n    async getSheetData(sheetId:number):Promise<SheetData> {\r\n        return await this.entity.getSheet(sheetId);\r\n    }\r\n\r\n    async getArchived(sheetId:number):Promise<SheetData> {\r\n        return await this.entity.getArchive(sheetId);\r\n    }\r\n\r\n    async saveSheet(values:any, valuesWithBox:any):Promise<any> {\r\n        let {sheetTitle} = this.ui;\r\n        let disc = sheetTitle === undefined? this.label : sheetTitle(valuesWithBox, this.x);\r\n        let ret = await this.entity.save(disc, values);\r\n        //let {id, state} = ret;\r\n        //if (id > 0) this.changeStateCount(state, 1);\r\n        return ret;\r\n    }\r\n\r\n    async action(id:number, flow:number, state:string, actionName:string):Promise<any> {\r\n        return await this.entity.action(id, flow, state, actionName);\r\n    }\r\n}\r\n","export * from './cSheet';\r\nexport * from './vSheet';\r\nexport * from './vMain';\r\nexport * from './vNew';\r\nexport * from './vEdit';\r\nexport * from './vList';\r\nexport * from './vSheetAction';\r\nexport * from './vSchema';\r\nexport * from './vArchived';\r\nexport * from './vSheetView';\r\n","import * as React from 'react';\r\nimport { SearchBox, List, Muted } from 'tonva-react-form';\r\nimport { Button } from 'reactstrap';\r\nimport { TuidMain, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { CLink } from '../link';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CTuidMain, TuidUI } from './cTuid';\r\n\r\nexport class VTuidMain extends VEntity<TuidMain, TuidUI, CTuidMain> {\r\n    protected controller: CTuidMain;\r\n    onNew = () => this.event('new');\r\n    onList = () => this.event('list');\r\n    onSearch = async (key:string) => this.event('list', key);\r\n\r\n    async showEntry(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected entityRender(link: CLink, index: number): JSX.Element {\r\n        return link.render();\r\n    }\r\n\r\n    protected async entityClick(link: CLink) {\r\n        await link.onClick();\r\n    }\r\n\r\n    protected get view() {\r\n        let {label, proxyLinks, isFrom} = this.controller;\r\n        let newButton;\r\n        if (isFrom === false) newButton = <Button className=\"ml-3\" color=\"primary\" onClick={this.onNew}>新增</Button>;\r\n        return () => <Page header={label}>\r\n            {proxyLinks === undefined ?\r\n            <>\r\n                <SearchBox className=\"w-100\" onSearch={this.onSearch} placeholder={'搜索'+label} />\r\n                <div className='my-3'>\r\n                    {newButton}\r\n                    <Button className=\"ml-3\" color=\"primary\" onClick={this.onList}>列表</Button>\r\n                </div>\r\n            </> :\r\n            <List className=\"my-2\"\r\n                header={<Muted>{label} 代理下列Tuid</Muted>}\r\n                items={proxyLinks}\r\n                item={{render: this.entityRender, onClick:this.entityClick}} />\r\n            }\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva-react-form';\r\nimport { Button } from 'reactstrap';\r\nimport { Page } from 'tonva-tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CTuidMain, TuidUI } from './cTuid';\r\nimport { TuidMain, Tuid } from '../../entities';\r\n\r\nexport type TypeVTuidEdit = typeof VTuidEdit;\r\n\r\nexport class VTuidEdit extends VEntity<Tuid, TuidUI, CTuidMain> {\r\n    private vForm: VForm;\r\n    private id: number;\r\n\r\n    async showEntry(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        if (param !== undefined) {\r\n            this.id = param.id;\r\n        }\r\n        this.openPage(this.editView);\r\n    }\r\n\r\n    protected get editView() {\r\n        return () => <Page header={(this.id===undefined? '新增':'编辑') + ' - ' + this.label}>\r\n            {this.vForm.render('py-3')}\r\n        </Page>;\r\n    }\r\n\r\n    protected next = async () => {\r\n        this.vForm.reset();\r\n        this.closePage();\r\n    }\r\n\r\n    protected finish = () => {\r\n        this.closePage(2);\r\n        this.event('edit-end');\r\n    }\r\n\r\n    protected resetForm() {\r\n        this.vForm.reset();\r\n    }\r\n\r\n    protected onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        let ret = await this.controller.entity.save(this.id, values);\r\n        let {id} = ret;\r\n        if (id < 0) {\r\n            let {unique} = this.controller.entity;\r\n            if (unique !== undefined) {\r\n                for (let u of unique) {\r\n                    this.vForm.setError(u, '不能重复');\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        if (this.controller.isCalling) {\r\n            this.returnCall(id);\r\n            this.closePage();\r\n            return;\r\n        }\r\n        this.openPageElement(<Page header={this.label + '提交成功'} back=\"none\">\r\n            <div className='m-3'>\r\n                <span className=\"text-success\">\r\n                    <FA name='check-circle' size='lg' /> 成功提交！\r\n                </span>\r\n                <div className='mt-5'>\r\n                    <Button className=\"mr-3\" color=\"primary\" onClick={this.next}>继续录入</Button>\r\n                    <Button color=\"primary\" outline={true} onClick={this.finish}>不继续</Button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n\r\n        this.event('item-changed', {id: this.id, values: values});\r\n        return;\r\n    }\r\n\r\n    //protected view = TuidNewPage;\r\n}\r\n/*\r\nconst TuidNewPage = observer(({vm}:{vm:VmTuidEdit}) => {\r\n    let {label, id, vmForm} = vm;\r\n    return <Page header={(id===undefined? '新增':'编辑') + ' - ' + label}>\r\n        {vmForm.render('mx-3 my-2')}\r\n    </Page>;\r\n});\r\n*/","import { nav, Page } from 'tonva-tools';\r\nimport { VTuidMainListBase, VTuidDivListBase } from './vTuidList';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Tuid } from '../../entities';\r\nimport { CTuid, TuidUI } from './cTuid';\r\nimport { SearchBox, List } from 'tonva-react-form';\r\nimport React from 'react';\r\nimport { RowContent } from '../form/viewModel';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class VTuidSelect extends VEntity<Tuid, TuidUI, CTuid<Tuid>> {\r\n    protected mainRowContent: (row:any) => JSX.Element;\r\n    protected divRowContent: (row:any) => JSX.Element;\r\n\r\n    async showEntry(param?:any): Promise<void> {\r\n        if (param === undefined)\r\n            await this.showMain(param);\r\n        else\r\n            await this.showDiv(param);\r\n    }\r\n\r\n    private async showMain(param) {\r\n        this.mainRowContent = this.ui.rowContent || RowContent;\r\n        await this.controller.searchMain(param);\r\n        this.openPage(this.mainView);\r\n    }\r\n\r\n    private async showDiv(ownerValue: any) {\r\n        let {divs} = this.ui;\r\n        if (divs !== undefined) {\r\n            this.divRowContent = divs[this.entity.name].rowContent;\r\n        }\r\n        if (this.divRowContent === undefined) {\r\n            this.divRowContent = RowContent;\r\n        }\r\n        let divItems = await this.controller.getDivItems(ownerValue);\r\n        this.openPage(this.divView, {items: divItems});\r\n    }\r\n\r\n    protected mainView = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearchMain} placeholder={'搜索'+this.label} />;\r\n        return <Page header={header} back=\"close\">\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderMainRow, onClick: this.clickMainRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n\r\n    onSearchMain = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderMainRow = (item:any, index:number):JSX.Element => <this.mainRowContent {...item} />;\r\n    clickMainRow = async (item:any) => {\r\n        this.ceasePage();\r\n        if (this.controller.entity.owner === undefined) {\r\n            this.returnCall(item);\r\n            return;\r\n        }\r\n        await this.showDiv(this.entity.getIdFromObj(item));\r\n    }\r\n\r\n    protected divView = (param:any) => {\r\n        return <Page header=\"选择Div\">\r\n            <List\r\n                items={param.items}\r\n                item={{render: this.renderDivRow, onClick: this.clickDivRow}} />\r\n        </Page>;\r\n    }\r\n    renderDivRow = (item:any, index:number):JSX.Element => <this.divRowContent {...item} />;\r\n    clickDivRow = (item:any) => {\r\n        this.ceasePage();\r\n        this.returnCall(item);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { FA } from 'tonva-react-form';\r\nimport { Button } from 'reactstrap';\r\nimport { Page } from 'tonva-tools';\r\nimport { jsonStringify } from '../../tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { TuidMain } from '../../entities';\r\nimport { TuidUI, CTuidMain } from './cTuid';\r\n\r\nexport type TypeVTuidView = typeof VTuidView;\r\n\r\nexport class VTuidView extends VEntity<TuidMain, TuidUI, CTuidMain> {\r\n    vForm: VForm;\r\n    id: number;\r\n\r\n    protected buildForm(param:any) {\r\n        this.vForm = this.createForm(undefined, param);\r\n    }\r\n\r\n    async showEntry(param:any) {\r\n        this.buildForm(param);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    render(param:any) {\r\n        this.buildForm(param);\r\n        return this.vForm.render();\r\n    }\r\n\r\n    async loadId(id: number) {\r\n        this.id = id;\r\n    }\r\n\r\n    protected next = async () => {\r\n        this.vForm.reset();\r\n        this.closePage();\r\n    }\r\n\r\n    protected finish = () => {\r\n        this.closePage(2);\r\n    }\r\n\r\n    protected resetForm() {\r\n        this.vForm.reset();\r\n    }\r\n\r\n    protected onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        let ret = await this.entity.save(this.id, values);\r\n        if (ret) {\r\n            alert('这里还要判断返回值，先不处理了 \\n' + jsonStringify(ret));\r\n        }\r\n        this.openPage(() => <Page header={this.label + '提交成功'} back=\"none\">\r\n            <div className='m-3'>\r\n                <span className=\"text-success\">\r\n                    <FA name='check-circle' size='lg' /> 成功提交！\r\n                </span>\r\n                <div className='mt-5'>\r\n                    <Button className=\"mr-3\" color=\"primary\" onClick={this.next}>继续录入</Button>\r\n                    <Button color=\"primary\" outline={true} onClick={this.finish}>不继续</Button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n        return;\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n            {this.vForm.render('py-3')}\r\n    </Page>;\r\n}\r\n","import React from 'react';\r\nimport { VTuidView } from './vTuidView';\r\n\r\nexport class VTuidInfo  extends VTuidView {\r\n/*\r\n    async showEntry(param?:any) {\r\n        this.open(this.view);\r\n    }\r\n*/\r\n/*\r\n    private view = () => {\r\n        return <Page>\r\n            TuidInfo\r\n        </Page>\r\n    }\r\n*/\r\n}\r\n","import { PageItems } from 'tonva-tools';\r\nimport { Tuid } from \"../../entities\";\r\n\r\nexport class TuidPageItems<T> extends PageItems<T> {\r\n    private tuid: Tuid;\r\n    constructor(tuid: Tuid) {\r\n        super(true);\r\n        this.tuid = tuid;\r\n    }\r\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        let ret = await this.tuid.search(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { FA, SearchBox, List } from 'tonva-react-form';\r\nimport { Page, PageItems } from 'tonva-tools';\r\nimport { jsonStringify } from '../../tools';\r\nimport { TuidMain, Entity, Tuid, TuidDiv } from '../../entities';\r\nimport { VEntity } from '../CVEntity';\r\nimport { TuidUI, CTuidMain, CTuidDiv } from './cTuid';\r\nimport { JSONContent, RowContent } from '../form/viewModel';\r\n\r\nexport abstract class VTuidMainListBase  extends VEntity<TuidMain, TuidUI, CTuidMain> {\r\n    protected rowContent: (row:any) => JSX.Element;\r\n    protected ownerId: number;\r\n\r\n    async showEntry(param?:any) {\r\n        this.rowContent = this.ui.rowContent || RowContent;\r\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\r\n        // 初始查询, key是空的\r\n        //await this.onSearch('');\r\n        await this.controller.searchMain('');\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSearch = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderRow = (item:any, index:number):JSX.Element => <this.rowContent {...item} />;\r\n\r\n    protected abstract onSelected(item:any): Promise<void>;\r\n    private callOnSelected(item:any) {\r\n        if (this.onSelected === undefined) {\r\n            alert('onSelect is undefined');\r\n            return;\r\n        }\r\n        this.onSelected(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n    private rowKey = (item:any) => {\r\n        let {id} = item;\r\n        return id;\r\n    }\r\n    protected view = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        let {owner} = this.entity;\r\n        let ownerTop;\r\n        if (owner !== undefined) {\r\n            let ownerObj = owner.valueFromId(this.ownerId);\r\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\r\n        }\r\n        return <Page header={header}>\r\n            {ownerTop}\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow, key:this.rowKey}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\nexport class VTuidMainList extends VTuidMainListBase {\r\n    protected async onSelected(item:any) {\r\n        if (this.controller.isFrom === false)\r\n            this.event('edit', item.id);\r\n        else\r\n            this.event('info', item.id);\r\n    }\r\n}\r\n\r\nexport abstract class VTuidDivListBase  extends VEntity<TuidDiv, TuidUI, CTuidDiv> {\r\n    protected ownerId: number;\r\n\r\n    async showEntry(param?:any) {\r\n        //this.PageItems = new TuidPageItems(this.entity);\r\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\r\n        // 初始查询, key是空的\r\n        //await this.onSearch('');\r\n        await this.controller.searchMain('');\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSearch = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderRow = (item:any, index:number):JSX.Element => {\r\n        return <div className=\"px-3 py-2\">{jsonStringify(item)}</div>;\r\n    }\r\n\r\n    protected abstract onSelected(item:any): Promise<void>;\r\n    private callOnSelected(item:any) {\r\n        if (this.onSelected === undefined) {\r\n            alert('onSelect is undefined');\r\n            return;\r\n        }\r\n        this.onSelected(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        let {owner} = this.entity;\r\n        let ownerTop;\r\n        if (owner !== undefined) {\r\n            let ownerObj = owner.valueFromId(this.ownerId);\r\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\r\n        }\r\n        return <Page header={header}>\r\n            {ownerTop}\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\nexport class VTuidDivList extends VTuidDivListBase {\r\n    protected async onSelected(item:any) {\r\n        this.event('edit', item.id);\r\n    }\r\n}\r\n","import _ from 'lodash';\r\nimport { TypeVPage, PageItems } from 'tonva-tools';\r\nimport { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { TuidMain, Tuid, TuidDiv } from \"../../entities\";\r\nimport { VTuidMain } from './vTuidMain';\r\nimport { VTuidEdit } from './vTuidEdit';\r\nimport { VTuidSelect } from './vTuidSelect';\r\nimport { CUsq } from \"../usq/cUsq\";\r\nimport { CLink } from \"../link\";\r\nimport { VTuidInfo } from \"./vTuidInfo\";\r\nimport { TuidPageItems } from \"./pageItems\";\r\nimport { VTuidMainList } from './vTuidList';\r\n\r\nexport interface TuidUI extends EntityUI {\r\n    CTuidMain?: typeof CTuidMain;\r\n    CTuidEdit?: typeof CTuidEdit;\r\n    CTuidList?: typeof CTuidList;\r\n\r\n    CTuidSelect?: typeof CTuidSelect;\r\n    CTuidInfo?: typeof CTuidInfo;\r\n    inputContent?: React.StatelessComponent<any>;\r\n    rowContent?: React.StatelessComponent<any>;\r\n    divs?: {\r\n        [div:string]: {\r\n            CTuidSelect?: typeof CTuidSelect;\r\n            inputContent?: React.StatelessComponent<any>;\r\n            rowContent?: React.StatelessComponent<any>;\r\n        }\r\n    }\r\n}\r\n\r\nexport abstract class CTuid<T extends Tuid> extends CEntity<T, TuidUI> {\r\n    /*\r\n    constructor(cUsq: CUsq, entity: T, ui: TuidUI, res) {\r\n        super(cUsq, entity, ui, res);\r\n    }*/\r\n\r\n    PageItems:PageItems<any>;\r\n\r\n    protected buildPageItems():PageItems<any> {\r\n        return new TuidPageItems(this.entity.owner || this.entity);\r\n    }\r\n\r\n    async searchMain(key:string) {\r\n        if (this.PageItems === undefined) {\r\n            this.PageItems = this.buildPageItems();\r\n        }\r\n        if (key !== undefined) await this.PageItems.first(key);\r\n    }\r\n\r\n    async getDivItems(ownerId:number):Promise<any[]> {\r\n        let ret = await this.entity.searchArr(ownerId, undefined, 0, 1000);\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport class CTuidMain extends CTuid<TuidMain> {\r\n    constructor(cUsq: CUsq, entity: TuidMain, ui: TuidUI, res:any) {\r\n        super(cUsq, entity, ui, res);\r\n        let tuid = this.entity;\r\n        this.proxies = tuid.proxies;\r\n        if (this.proxies !== undefined) {\r\n            this.proxyLinks = [];\r\n            for (let i in this.proxies) {\r\n                let link = this.cUsq.linkFromName('tuid', i);\r\n                this.proxyLinks.push(link);\r\n            }\r\n        }\r\n    }\r\n\r\n    async from():Promise<CTuidMain> {\r\n        let ret = await this.entity.cFrom();\r\n        if (ret === undefined) return this;\r\n        return ret;\r\n    }\r\n\r\n    async cUsqFrom():Promise<CUsq> {\r\n        return await this.entity.cUsqFrom();\r\n    }\r\n    async cEditFrom(): Promise<CTuidEdit> {\r\n        let cUsq = await this.entity.cUsqFrom();\r\n        return await cUsq.cTuidEditFromName(this.entity.name);\r\n    }\r\n    async cInfoFrom(): Promise<CTuidInfo> {\r\n        let cUsq = await this.entity.cUsqFrom();\r\n        return await cUsq.cTuidInfoFromName(this.entity.name);\r\n    }\r\n    async cSelectFrom(): Promise<CTuidSelect> {\r\n        let cUsq = await this.entity.cUsqFrom();\r\n        return await cUsq.cTuidSelectFromName(this.entity.name);\r\n    }\r\n\r\n    getLable(tuid:Tuid):string {\r\n        if (tuid === this.entity) return this.label;\r\n        let {name} = tuid;\r\n        let {arrs} = this.res;\r\n        if (arrs !== undefined) {\r\n            let arr = arrs[name];\r\n            if (arr !== undefined) {\r\n                let label = arr.label;\r\n                if (label !== undefined) return label;\r\n            }\r\n        }\r\n        return name;\r\n    }\r\n\r\n    proxies: {[name:string]: TuidMain};\r\n    proxyLinks: CLink[];\r\n    isFrom: boolean;\r\n\r\n    protected get VTuidMain():typeof VTuidMain {return VTuidMain}\r\n    protected get VTuidEdit():typeof VTuidEdit {return VTuidEdit}\r\n    protected get VTuidList():typeof VTuidMainList {return VTuidMainList}\r\n\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        this.isFrom = this.entity.schemaFrom !== undefined;\r\n        await this.showVPage(this.VTuidMain);\r\n    }\r\n\r\n    protected async onEvent(type:string, value:any) {\r\n        let v: TypeVPage<CTuidMain>;\r\n        switch (type) {\r\n            default: return;\r\n            case 'new': v = this.VTuidEdit; break;\r\n            case 'list': v = this.VTuidList; break;\r\n            case 'edit': await this.edit(value); return;\r\n            case 'item-changed': this.itemChanged(value); return;\r\n            case 'info': \r\n                let cTuidInfo = new CTuidInfo(this.cUsq, this.entity, this.ui, this.res);\r\n                await cTuidInfo.start(value);\r\n                return;\r\n        }\r\n        await this.showVPage(v, value);\r\n    }\r\n\r\n    protected async edit(id:number) {\r\n        let values:any = undefined;\r\n        if (id !== undefined) {\r\n            values = await this.entity.load(id);\r\n        }\r\n        let v = this.VTuidEdit;\r\n        await this.showVPage(v, values);\r\n    }\r\n\r\n    private itemChanged({id, values}:{id:number, values: any}) {\r\n        if (this.PageItems === undefined) return;\r\n        let items = this.PageItems.items;\r\n        let item = items.find(v => v.id === id);\r\n        if (item !== undefined) {\r\n            _.merge(item, values);\r\n        }\r\n    }\r\n}\r\n\r\nexport class CTuidEdit extends CTuidMain {\r\n    protected async internalStart(id:number):Promise<void> {\r\n        await this.edit(id);\r\n    }\r\n}\r\n\r\nexport class CTuidList extends CTuidMain {\r\n    protected async internalStart(id:number):Promise<void> {\r\n        await this.showVPage(this.VTuidList);\r\n    }\r\n}\r\n\r\nexport class CTuidDiv extends CTuid<TuidDiv> {\r\n    protected async internalStart():Promise<void> {\r\n        alert('tuid div: ' + this.entity.name);\r\n    }\r\n}\r\n\r\nexport class CTuidSelect extends CTuid<Tuid> {\r\n    protected async internalStart(param?: any):Promise<void> {\r\n        await this.showVPage(this.VTuidSelect, param);\r\n    }\r\n    protected async beforeStart():Promise<boolean> {\r\n        if (await super.beforeStart() === false) return false;\r\n        if (this.PageItems !== undefined) this.PageItems.reset();\r\n        return true;\r\n    }\r\n    protected get VTuidSelect():typeof VTuidSelect {return VTuidSelect}\r\n    idFromItem(item:any) {\r\n        return item.id;\r\n    }\r\n}\r\n\r\nexport class CTuidInfo extends CTuid<Tuid> {\r\n    protected async internalStart(id: any):Promise<void> {\r\n        let data = await this.entity.load(id)\r\n        await this.showVPage(this.VTuidInfo, data);\r\n    }\r\n    protected get VTuidInfo():typeof VTuidInfo {return VTuidInfo}\r\n}\r\n","export * from './cTuid';\r\nexport * from './vTuidMain';\r\nexport * from './vTuidEdit';\r\nexport * from './vTuidInfo';\r\nexport * from './vTuidView';\r\n","import * as React from 'react';\r\nimport { TuidMain, Book, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CBook, BookUI } from './cBook';\r\n\r\nexport class VBookMain extends VEntity<Book, BookUI, CBook> {\r\n    async showEntry(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        Book\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Book } from \"../../entities\";\r\nimport { VBookMain } from \"./vBookMain\";\r\n\r\nexport interface BookUI extends EntityUI {\r\n    CBook?: typeof CBook;\r\n    main: typeof VBookMain,\r\n}\r\n\r\nexport class CBook extends CEntity<Book, BookUI> {\r\n    protected async internalStart() {\r\n        await this.showVPage(this.VBookMain);\r\n    }\r\n\r\n    protected get VBookMain():typeof VBookMain {return VBookMain}\r\n}\r\n","import React from \"react\";\r\nimport { View } from \"tonva-tools\";\r\nimport { List, Muted } from \"tonva-react-form\";\r\nimport { Entity } from \"../../entities\";\r\nimport { CLink } from \"../link\";\r\nimport { CUsq } from \"./cUsq\";\r\n\r\nexport class VUsq extends View<CUsq> {\r\n    protected isSysVisible = false;\r\n    protected tuidLinks: CLink[];\r\n    protected mapLinks: CLink[];\r\n    protected sheetLinks: CLink[];\r\n    protected actionLinks: CLink[];\r\n    protected queryLinks: CLink[];\r\n    protected bookLinks: CLink[];\r\n    protected historyLinks: CLink[];\r\n    protected pendingLinks: CLink[];\r\n\r\n    constructor(cUsq: CUsq) {\r\n        super(cUsq);\r\n        let {tuidArr, mapArr, sheetArr, actionArr, queryArr, bookArr, historyArr, pendingArr} = cUsq.entities;\r\n        this.tuidLinks = tuidArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cTuidMain(v)));\r\n        this.mapLinks = mapArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cMap(v)));\r\n        this.sheetLinks = sheetArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cSheet(v)));\r\n        this.actionLinks = actionArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cAction(v)));\r\n        this.queryLinks = queryArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cQuery(v)));\r\n        this.bookLinks = bookArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cBook(v)));\r\n        this.historyLinks = historyArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cHistory(v)));\r\n        this.pendingLinks = pendingArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cPending(v)));\r\n    }\r\n    protected isVisible(entity: Entity):boolean {\r\n        return entity.sys !== true || this.isSysVisible;\r\n    }\r\n    render(param?:any) {\r\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\r\n        return React.createElement(this.view);\r\n    }\r\n\r\n    protected view = () => {\r\n        let {res, usq, error} = this.controller;\r\n        let linkItem = {\r\n            render: (cLink:CLink, index:number):JSX.Element => cLink.render(), \r\n            onClick: undefined, \r\n        };\r\n        let lists = [\r\n            {\r\n                header: res.tuid || 'TUID',\r\n                items: this.tuidLinks,\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.map || 'MAP',\r\n                items: this.mapLinks,\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.sheet || 'SHEET',\r\n                items: this.sheetLinks\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.action || 'ACTION',\r\n                items: this.actionLinks\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.query || 'QUERY',\r\n                items: this.queryLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.book || 'BOOK',\r\n                items: this.bookLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.history || 'HISTORY',\r\n                items: this.historyLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.pending || 'PENDING',\r\n                items: this.pendingLinks\r\n            }\r\n        ];\r\n        let content;\r\n        if (error !== undefined) {\r\n            content = <div className=\"p-3 text-danger\">连接错误: {error}</div>;\r\n        }\r\n        else {\r\n            content = lists.map(({cn, header, items},index) => items.length > 0 && <List\r\n                key={index}\r\n                className={cn}\r\n                header={<div className=\"px-3 py-1 bg-light\"><Muted>{header}</Muted></div>}\r\n                items={items}\r\n                item={linkItem} />\r\n            );\r\n        }\r\n        return <>\r\n            <div className=\"px-3 py-1 small\">{res.usq || usq}</div>\r\n            {content}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { UsqApi, Controller, UnitxApi, meInFrame, resLang, nav } from 'tonva-tools';\r\nimport { Entities, TuidMain, Action, Sheet, Query, Book, Map, Entity, Tuid, /*Usq, */History, Pending } from '../../entities';\r\nimport { CLink } from '../link';\r\nimport { CBook, BookUI } from '../book';\r\nimport { CSheet, SheetUI } from '../sheet';\r\nimport { ActionUI, CAction } from '../action';\r\nimport { QueryUI, CQuery, CQuerySelect } from '../query';\r\nimport { CTuidMain, TuidUI, CTuid, CTuidInfo, CTuidSelect, CTuidEdit, CTuidList } from '../tuid';\r\nimport { MapUI, CMap } from '../map';\r\nimport { CEntity, EntityUI } from '../CVEntity';\r\nimport { PureJSONContent } from '../form/viewModel';\r\nimport { VUsq } from './vUsq';\r\nimport { CHistory, HistoryUI } from '../history';\r\nimport { CPending, PendingUI } from '../pending';\r\nimport { CApp } from '../CApp';\r\n\r\nexport type EntityType = 'sheet' | 'action' | 'tuid' | 'query' | 'book' | 'map' | 'history' | 'pending';\r\n\r\nexport interface UsqUI {\r\n    CTuidMain?: typeof CTuidMain;\r\n    CTuidEdit?: typeof CTuidEdit;\r\n    CTuidList?: typeof CTuidList;\r\n    CTuidSelect?: typeof CTuidSelect;\r\n    CTuidInfo?: typeof CTuidInfo;\r\n    CQuery?: typeof CQuery;\r\n    CQuerySelect?: typeof CQuerySelect;\r\n    CMap?: typeof CMap;\r\n    CAction?: typeof CAction;\r\n    CSheet?: typeof CSheet;\r\n    CBook?: typeof CBook;\r\n    CHistory?: typeof CHistory;\r\n    CPending?: typeof CPending;\r\n    tuid?: {[name:string]: TuidUI};\r\n    sheet?: {[name:string]: SheetUI};\r\n    action?: {[name:string]: ActionUI};\r\n    map?: {[name:string]: MapUI};\r\n    query?: {[name:string]: QueryUI};\r\n    book?: {[name:string]: BookUI};    \r\n    history?: {[name:string]: HistoryUI};\r\n    pending?: {[name:string]: PendingUI};\r\n    res?: any;\r\n}\r\n\r\nfunction lowerPropertyName(entities: {[name:string]: EntityUI}) {\r\n    if (entities === undefined) return;\r\n    for (let i in entities) entities[i.toLowerCase()] = entities[i];\r\n}\r\n\r\nexport class CUsq extends Controller /* implements Usq*/ {\r\n    private ui:any;\r\n    private CTuidMain: typeof CTuidMain;\r\n    private CTuidEdit: typeof CTuidEdit;\r\n    private CTuidList: typeof CTuidList;\r\n    private CTuidSelect: typeof CTuidSelect;\r\n    private CTuidInfo: typeof CTuidInfo;\r\n    private CQuery: typeof CQuery;\r\n    private CQuerySelect: typeof CQuerySelect;\r\n    private CMap: typeof CMap;\r\n    private CAction: typeof CAction;\r\n    private CSheet: typeof CSheet;\r\n    private CBook: typeof CBook;\r\n    private CHistory: typeof CHistory;\r\n    private CPending: typeof CPending;\r\n\r\n    constructor(cApp:CApp, usq:string, appId:number, usqId:number, access:string, ui:UsqUI) {\r\n        super(resLang(ui.res));\r\n        this.cApp = cApp;\r\n        this.usq = usq;\r\n        this.id = usqId;\r\n        // 每一个ui都转换成小写的key的版本\r\n        lowerPropertyName(ui.tuid);\r\n        lowerPropertyName(ui.sheet);\r\n        lowerPropertyName(ui.map);\r\n        lowerPropertyName(ui.query);\r\n        lowerPropertyName(ui.action);\r\n        lowerPropertyName(ui.book);\r\n        lowerPropertyName(ui.history);\r\n        lowerPropertyName(ui.pending);\r\n        this.ui = ui;\r\n        this.CTuidMain = ui.CTuidMain || CTuidMain;\r\n        this.CTuidEdit = ui.CTuidEdit || CTuidEdit;\r\n        this.CTuidList = ui.CTuidList || CTuidList;\r\n        this.CTuidSelect = ui.CTuidSelect || CTuidSelect;\r\n        this.CTuidInfo = ui.CTuidInfo || CTuidInfo;\r\n        this.CQuery = ui.CQuery || CQuery;\r\n        this.CQuerySelect = ui.CQuerySelect || CQuerySelect;\r\n        this.CMap = ui.CMap || CMap;\r\n        this.CAction = ui.CAction || CAction;\r\n        this.CSheet = ui.CSheet || CSheet;\r\n        this.CBook = ui.CBook || CBook;\r\n        this.CHistory = ui.CHistory || CHistory;\r\n        this.CPending = ui.CPending || CPending;\r\n\r\n        let token = undefined;\r\n        let usqOwner:string, usqName:string;\r\n        let p = usq.split('/');\r\n        switch (p.length) {\r\n            case 1:\r\n                usqOwner = '$$$';\r\n                usqName = p[0];\r\n                break;\r\n            case 2:\r\n                usqOwner = p[0];\r\n                usqName = p[1];\r\n                break;\r\n            default:\r\n                console.log('usq must be usqOwner/usqName format');\r\n                return;\r\n        }\r\n\r\n        let hash = document.location.hash;\r\n        let baseUrl = hash===undefined || hash===''? \r\n            'debug/':'tv/';\r\n\r\n        let acc: string[];\r\n        if (access === null || access === undefined || access === '*') {\r\n            acc = [];\r\n        }\r\n        else {\r\n            acc = access.split(';').map(v => v.trim()).filter(v => v.length > 0);\r\n        }\r\n        let usqApi:UsqApi;\r\n        if (usq === '$$$/$unitx') {\r\n            // 这里假定，点击home link之后，已经设置unit了\r\n            // 调用 UnitxApi会自动搜索绑定 unitx service\r\n            usqApi = new UnitxApi(meInFrame.unit);\r\n        }\r\n        else {\r\n            usqApi = new UsqApi(baseUrl, usqOwner, usqName, acc, true);\r\n        }\r\n        this.entities = new Entities(this, usqApi, appId);\r\n    }\r\n\r\n    protected async internalStart() {\r\n    }\r\n\r\n    cApp:CApp;\r\n    usq: string;\r\n    id: number;\r\n    res: any;\r\n    entities:Entities;\r\n    error: string;\r\n    private schemaLoaded:boolean = false;\r\n\r\n    protected async loadEntites() {\r\n        await this.entities.loadAccess();\r\n    }\r\n\r\n    async loadSchema():Promise<string> {\r\n        try {\r\n            if (this.schemaLoaded === true) return;\r\n            await this.loadEntites();\r\n            if (this.id === undefined) this.id = this.entities.usqId;\r\n\r\n            for (let i in this.ui) {\r\n                let g = this.ui[i];\r\n                if (g === undefined) continue;\r\n                let {caption, collection} = g;\r\n                if (collection === undefined) continue;\r\n                for (let j in collection) {\r\n                    if (this.entities[i](j) === undefined) {\r\n                        console.warn(i + ':' + '\\'' + j + '\\' is not usql entity');\r\n                    }\r\n                }\r\n            }\r\n            this.schemaLoaded = true;\r\n            return;\r\n        }\r\n        catch(err) {\r\n            console.error(err);\r\n            return this.error = err;\r\n            //debugger;\r\n            //return err.message;\r\n        }\r\n    }\r\n\r\n    async getQuerySearch(name:string):Promise<Query> {\r\n        let query = this.entities.query(name);\r\n        if (query === undefined) \r\n            alert(`QUERY ${name} 没有定义!`);\r\n        else {\r\n            await query.loadSchema();\r\n            let {returns} = query;\r\n            if (returns.length > 1) {\r\n                alert(`QUERY ${name} 返回多张表, 无法做QuerySearch`);\r\n            }\r\n        }\r\n        return query;\r\n    }\r\n    getTuidPlaceHolder(tuid:Tuid) {\r\n        let {tuidPlaceHolder, entity} = this.res;\r\n        let {name} = tuid;\r\n        let type:string;\r\n        if (entity !== undefined) {\r\n            let en = entity[name];\r\n            if (en !== undefined) {\r\n                type = en.label;\r\n            }\r\n        }\r\n        return (tuidPlaceHolder || 'Select');\r\n    }\r\n    getNone() {\r\n        let {none} = this.res;\r\n        return none || 'none';\r\n    }\r\n    protected isSysVisible = false;\r\n    protected isVisible(entity: Entity):boolean {\r\n        return entity.sys !== true || this.isSysVisible;\r\n    }\r\n\r\n    async navSheet(sheetTypeId:number, sheetId:number) {\r\n        let sheet = this.entities.sheetFromTypeId(sheetTypeId);\r\n        if (sheet === undefined) {\r\n            alert('sheetTypeId ' + sheetTypeId + ' is not exists!');\r\n            return;\r\n        }\r\n        let cSheet = this.cSheet(sheet);\r\n        await cSheet.startSheet(sheetId);\r\n    }\r\n\r\n    sheet(entityName:string) {return this.entities.sheet(entityName);}\r\n    action(entityName:string) {return this.entities.action(entityName);}\r\n    query(entityName:string) {return this.entities.query(entityName);}\r\n    book(entityName:string) {return this.entities.book(entityName);}\r\n    map(entityName:string) {return this.entities.map(entityName);}\r\n    history(entityName:string) {return this.entities.history(entityName);}\r\n    pending(entityName:string) {return this.entities.pending(entityName);}\r\n    tuid(entityName:string) {return this.entities.tuid(entityName)}\r\n    tuidDiv(entityName:string, divName:string) {\r\n        let tuid = this.entities.tuid(entityName);\r\n        if (tuid === undefined) return;\r\n        let {divs} = tuid;\r\n        if (divs === undefined) return;\r\n        return divs[divName];\r\n    }\r\n\r\n    cSheetFromName(entityName:string):CSheet {\r\n        let entity = this.entities.sheet(entityName);\r\n        if (entity !== undefined) return this.cSheet(entity);\r\n    }\r\n    cActionFromName(entityName:string) {\r\n        let entity = this.entities.action(entityName);\r\n        if (entity !== undefined) return this.cAction(entity);\r\n    }\r\n    cQueryFromName(entityName:string) {\r\n        let entity = this.entities.query(entityName);\r\n        if (entity !== undefined) return this.cQuery(entity);\r\n    }\r\n    cBookFromName(entityName:string) {\r\n        let entity = this.entities.book(entityName);\r\n        if (entity !== undefined) return this.cBook(entity);\r\n    }\r\n    cMapFromName(entityName:string) {\r\n        let entity = this.entities.map(entityName);\r\n        if (entity !== undefined) return this.cMap(entity);\r\n    }\r\n    cHistoryFromName(entityName:string) {\r\n        let entity = this.entities.history(entityName);\r\n        if (entity !== undefined) return this.cHistory(entity);\r\n    }\r\n    cPendingFromName(entityName:string) {\r\n        let entity = this.entities.pending(entityName);\r\n        if (entity !== undefined) return this.cPending(entity);\r\n    }\r\n    cTuidMainFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidMain(entity);\r\n    }\r\n    cTuidEditFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidEdit(entity);\r\n    }\r\n    cTuidInfoFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidInfo(entity);\r\n    }\r\n\r\n    cTuidSelectFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidSelect(entity);\r\n    }\r\n\r\n    cFromName(entityType:EntityType, entityName:string): CEntity<Entity, EntityUI> {\r\n        switch (entityType) {\r\n            case 'sheet':\r\n                let sheet = this.entities.sheet(entityName);\r\n                if (sheet === undefined) return;\r\n                return this.cSheet(sheet);\r\n            case 'action':\r\n                let action = this.entities.action(entityName);\r\n                if (action === undefined) return;\r\n                return this.cAction(action);\r\n            case 'tuid':\r\n                let tuid = this.entities.tuid(entityName);\r\n                if (tuid === undefined) return;\r\n                return this.cTuidMain(tuid);\r\n            case 'query':\r\n                let query = this.entities.query(entityName);\r\n                if (query === undefined) return;\r\n                return this.cQuery(query);\r\n            case 'book':\r\n                let book = this.entities.book(entityName);\r\n                if (book === undefined) return;\r\n                return this.cBook(book);\r\n            case 'map':\r\n                let map = this.entities.map(entityName);\r\n                if (map === undefined) return;\r\n                return this.cMap(map);\r\n            case 'history':\r\n                let history = this.entities.history(entityName);\r\n                if (history === undefined) return;\r\n                return this.cHistory(history);\r\n            case 'pending':\r\n                let pending = this.entities.pending(entityName);\r\n                if (pending === undefined) return;\r\n                return this.cPending(pending);\r\n        }\r\n    }\r\n\r\n    linkFromName(entityType:EntityType, entityName:string) {\r\n        return this.link(this.cFromName(entityType, entityName));\r\n    }\r\n\r\n    private getUI<T extends Entity, UI extends EntityUI>(t:T):{ui:UI, res:any} {\r\n        let ui, res;\r\n        let {name, typeName} = t;\r\n        if (this.ui !== undefined) {\r\n            let tUI = this.ui[typeName];\r\n            if (tUI !== undefined) {\r\n                ui = tUI[name];\r\n            }\r\n        }\r\n        let {entity} = this.res;\r\n        if (entity !== undefined) {\r\n            res = entity[name];\r\n        }\r\n        return {ui: ui || {}, res: res || {} };\r\n    }\r\n\r\n    link(cEntity:CEntity<Entity, EntityUI>) {\r\n        return new CLink(cEntity);\r\n    }\r\n\r\n    get tuidLinks() {\r\n        return this.entities.tuidArr.filter(v => this.isVisible(v)).map(v => this.link(this.cTuidMain(v)));\r\n    }\r\n    cTuidMain(tuid:TuidMain):CTuidMain {\r\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidMain || this.CTuidMain)(this, tuid, ui, res);\r\n    }\r\n    cTuidEdit(tuid:TuidMain):CTuidEdit {\r\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidEdit || this.CTuidEdit)(this, tuid, ui, res);\r\n    }\r\n    cTuidList(tuid:TuidMain):CTuidList {\r\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidList || this.CTuidList)(this, tuid, ui, res);\r\n    }\r\n    cTuidSelect(tuid:Tuid):CTuidSelect {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid.owner || tuid);\r\n        return new (ui && ui.CTuidSelect || this.CTuidSelect)(this, tuid, ui, res);\r\n    }\r\n    cTuidInfo(tuid:TuidMain):CTuidInfo {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidInfo || this.CTuidInfo)(this, tuid, ui, res);\r\n    }\r\n\r\n    cSheet(sheet:Sheet/*, sheetUI?:SheetUI, sheetRes?:any*/):CSheet {\r\n        let {ui, res} = this.getUI<Sheet, SheetUI>(sheet);\r\n        //if (sheetUI !== undefined) ui = sheetUI;\r\n        //if (sheetRes !== undefined) res = sheetRes;\r\n        //return new (ui && ui.CSheet || this.CSheet)(this, sheet, sheetUI, sheetRes);\r\n        return new (ui && ui.CSheet || this.CSheet)(this, sheet, ui, res);\r\n    }\r\n    get sheetLinks() { \r\n        return this.entities.sheetArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cSheet(v))\r\n        });\r\n    }\r\n\r\n    cAction(action:Action):CAction {\r\n        let {ui, res} = this.getUI<Action, ActionUI>(action);\r\n        return new (ui && ui.CAction || this.CAction)(this, action, ui, res);\r\n    }\r\n    get actionLinks() { \r\n        return this.entities.actionArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cAction(v))\r\n        });\r\n    }\r\n\r\n    cQuery(query:Query):CQuery {\r\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\r\n        return new (ui && ui.CQuery || this.CQuery)(this, query, ui, res);\r\n    }\r\n    cQuerySelect(queryName:string):CQuerySelect {\r\n        let query = this.entities.query(queryName);\r\n        if (query === undefined) return;\r\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\r\n        return new (ui && ui.CQuerySelect || this.CQuerySelect)(this, query, ui, res);\r\n    }\r\n    get queryLinks() {\r\n        return this.entities.queryArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cQuery(v))\r\n        });\r\n    }\r\n    \r\n    cBook(book:Book):CBook {\r\n        let {ui, res} = this.getUI<Book, BookUI>(book);\r\n        return new (ui && ui.CBook || this.CBook)(this, book, ui, res);\r\n    }\r\n    get bookLinks() { \r\n        return this.entities.bookArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cBook(v))\r\n        });\r\n    }\r\n    \r\n    cHistory(history:History):CHistory {\r\n        let {ui, res} = this.getUI<History, HistoryUI>(history);\r\n        return new (ui && ui.CHistory || this.CHistory)(this, history, ui, res);\r\n    }\r\n    get historyLinks() { \r\n        return this.entities.historyArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cHistory(v))\r\n        });\r\n    }\r\n    \r\n    cPending(pending:Pending):CPending {\r\n        let {ui, res} = this.getUI<Pending, PendingUI>(pending);\r\n        return new (ui && ui.CPending || this.CPending)(this, pending, ui, res);\r\n    }\r\n    get pendingLinks() { \r\n        return this.entities.pendingArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cPending(v))\r\n        });\r\n    }\r\n    \r\n    cMap(map:Map):CMap {\r\n        let {ui, res} = this.getUI<Map, MapUI>(map);\r\n        return new (ui && ui.CMap || this.CMap)(this, map, ui, res);\r\n    }\r\n    get mapLinks() { \r\n        return this.entities.mapArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cMap(v));\r\n        });\r\n    }\r\n\r\n    getTuidContent(tuid:Tuid): React.StatelessComponent<any> {\r\n        let {owner} = tuid;\r\n        if (owner === undefined) {\r\n            let {ui} = this.getUI<Tuid, TuidUI>(tuid);\r\n            return (ui && ui.inputContent) || PureJSONContent;\r\n        }\r\n        else {\r\n            let {ui} = this.getUI<Tuid, TuidUI>(owner);\r\n            return (ui && ui.divs && ui.divs[tuid.name].inputContent) || PureJSONContent;\r\n        }\r\n    }\r\n\r\n    async showTuid(tuid:Tuid, id:number):Promise<void> {\r\n        let {owner} = tuid;\r\n        let c = this.cTuidInfo(owner || (tuid as TuidMain));\r\n        await c.start(id);\r\n    }\r\n\r\n    protected get VUsq():typeof VUsq {return VUsq}\r\n\r\n    render() {\r\n        let v = new (this.VUsq)(this);\r\n        return v.render();\r\n    }\r\n}\r\n\r\n","export * from './cUsq';\r\nexport * from './vUsq';","import React from 'react';\r\nimport { jsonStringify } from '../../tools';\r\n\r\nexport const DefaultRow = (values) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>;\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { List, FA } from 'tonva-react-form';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { TuidMain, Query, Entity } from '../../entities';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { QueryUI, CQuery } from './cQuery';\r\nimport { DefaultRow } from './defaultRow';\r\n\r\nexport class VQueryMain extends VEntity<Query, QueryUI, CQuery> {\r\n    protected vForm: VForm;\r\n    private row: React.StatelessComponent;\r\n\r\n    async showEntry(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        let {row, queryRow} = this.ui;\r\n        this.row = queryRow || row || DefaultRow;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSubmit = async () => {\r\n        let params = this.vForm.getValues();\r\n        if (this.entity.isPaged === true) {\r\n            await this.entity.resetPage(30, params);\r\n            await this.entity.loadPage();\r\n            this.replacePage(this.pageResult);\r\n        }\r\n        else {\r\n            let data = await this.entity.query(params);\r\n            this.replacePage(this.queryResult, data);\r\n        }\r\n    }\r\n\r\n    again = () => {\r\n        this.vForm.reset();\r\n        this.replacePage(this.view);\r\n    }\r\n\r\n    renderExtra() {\r\n        return;\r\n    }\r\n\r\n    renderRow = (item:any, index:number) => <this.row {...item} />;\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render('mx-3 my-2')}\r\n        {this.renderExtra()}\r\n    </Page>;\r\n\r\n    protected pageResult = () => {\r\n        let {name, list} = this.entity;\r\n        let rightClose = <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={this.again}>\r\n            <FA name=\"search\" /> 再查询\r\n        </button>;\r\n        return <Page header={this.label} right={rightClose}>\r\n            <List items={list} item={{render: this.renderRow}} />\r\n        </Page>;\r\n    }\r\n\r\n    protected queryResult = observer((result:any) => {\r\n        let rightClose = <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={this.again}>\r\n            <FA name=\"search\" /> 再查询\r\n        </button>;\r\n        return <Page header={this.label} right={rightClose}>\r\n            <pre>{JSON.stringify(result, undefined, '\\t')}</pre>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { FA, SearchBox, List } from 'tonva-react-form';\r\nimport { Page, PageItems } from 'tonva-tools';\r\nimport { Query } from '../../entities';\r\nimport { VEntity } from '../CVEntity';\r\nimport { QueryUI, CQuerySelect } from './cQuery';\r\nimport { DefaultRow } from './defaultRow';\r\n\r\nexport class VQuerySelect extends VEntity<Query, QueryUI, CQuerySelect> {\r\n    private row: React.StatelessComponent;\r\n\r\n    PageItems:QueryPageItems;\r\n    ownerId: number;\r\n\r\n    async showEntry(param?:any) {\r\n        let {row, selectRow} = this.ui;\r\n        this.row = selectRow || row || DefaultRow;\r\n        //this.entity = this.controller.entity;\r\n        this.PageItems = new QueryPageItems(this.entity);\r\n        await this.onSearch(param);\r\n        this.openPage(this.view);\r\n    }\r\n    onSearch = async (key:string) => {\r\n        await this.PageItems.first(key);\r\n    }\r\n\r\n    renderRow = (item:any, index:number) => <this.row {...item} />;\r\n\r\n    private callOnSelected(item:any) {\r\n       this.closePage();\r\n       this.returnCall(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n\r\n    view = () => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        return <Page header={header}>\r\n            <List\r\n                items={this.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    };\r\n}\r\n\r\nexport class QueryPageItems extends PageItems<any> {\r\n    private query: Query;\r\n    constructor(query: Query) {\r\n        super();\r\n        this.query = query;\r\n    }\r\n    protected async load():Promise<any[]> {\r\n        await  this.query.loadSchema();\r\n        let ret:any[];\r\n        if (this.query.isPaged === true)\r\n            ret = await this.query.page(this.param, this.pageStart, this.pageSize);\r\n        else {\r\n            let data = await this.query.query(this.param);\r\n            //let data = await this.query.unpackReturns(res);\r\n            ret = data[this.query.returns[0].name];\r\n        }\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        if (item === undefined) this.pageStart = 0;\r\n    }\r\n}\r\n","import { StatelessComponent } from \"react\";\r\nimport { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Query } from \"../../entities\";\r\nimport { VQueryMain } from \"./vQueryMain\";\r\nimport { VQuerySelect } from \"./vQuerySelect\";\r\n\r\nexport interface QueryUI extends EntityUI {\r\n    CQuery?: typeof CQuery;\r\n    CQuerySelect?: typeof CQuerySelect;\r\n    main?: typeof VQueryMain;\r\n    row?: StatelessComponent;\r\n    queryRow?: StatelessComponent;\r\n    selectRow?: StatelessComponent;\r\n}\r\n\r\nexport abstract class CQueryBase extends CEntity<Query, QueryUI> {\r\n}\r\n\r\nexport class CQuery extends CQueryBase {\r\n    protected async internalStart() {\r\n        await this.showVPage(this.VQueryMain);\r\n    }\r\n\r\n    protected get VQueryMain():typeof VQueryMain {return this.ui && this.ui.main || VQueryMain}\r\n}\r\n\r\nexport class CQuerySelect extends CQueryBase {\r\n    protected async internalStart(param?:any) {\r\n        await this.showVPage(this.VQuerySelect, param);\r\n    }\r\n\r\n    protected get VQuerySelect():typeof VQuerySelect {return VQuerySelect}\r\n}\r\n","export * from './cQuery';\r\nexport * from './vQueryMain';\r\nexport * from './vQuerySelect';"],"sourceRoot":""}