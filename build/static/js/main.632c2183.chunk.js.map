{"version":3,"sources":["tonva-tools/ui/nav.tsx","tonva-tools/index.ts","tonva-tools/ui/form/context.tsx","tonva-tools/net/appBridge.ts","tonva-tools/net/wsChannel.ts","tonva-tools/net/index.ts","tonva-tools/net/httpChannelUI.ts","tonva-tools/net/usqApi.ts","tonva-tools/uid.ts","tonva-tools/net/apiBase.ts","tonva-tools/local.ts","tonva-tools/ui/index.ts","tonva-tools/net/debugHost.ts","tonva-tools/net/httpChannel.ts","tonva-tools/ui/page.tsx","tonva-tools/ui/res.ts","tonva-tools/ui/titleBar.tsx","tonva-tools/ui/loading.tsx","tonva-tools/ui/form/rules/index.ts","tonva-tools/ui/form/widgets/widget.tsx","tonva-tools/ui/form/widgets/textWidget.tsx","tonva-tools/ui/form/widgets/numberWidget.tsx","tonva-tools/ui/form/widgets/updownWidget.tsx","tonva-tools/ui/form/widgets/dateWidget.tsx","tonva-tools/ui/form/widgets/checkBoxWidget.tsx","tonva-tools/ui/form/arrRow.tsx","tonva-tools/ui/form/widgets/selectWidget.tsx","tonva-tools/ui/form/widgets/idWidget.tsx","tonva-tools/ui/form/widgets/unknown.tsx","tonva-tools/ui/form/widgets/buttonWidget.tsx","tonva-tools/ui/form/widgets/factory.tsx","tonva-tools/ui/form/widgets/textareaWidget.tsx","tonva-tools/ui/form/widgets/passwordWidget.tsx","tonva-tools/ui/form/widgets/radioWidget.tsx","tonva-tools/ui/form/widgets/rangeWidget.tsx","tonva-tools/ui/form/widgets/index.ts","tonva-tools/net/fetchLocalCheck.ts","face/store.ts","tonva-tools/user.ts","tonva-tools/ui/rowIcon.tsx","tonva-tools/ui/row.tsx","tonva-tools/ui/VM.tsx","tonva-tools/ui/form/index.ts","tonva-tools/ui/form/field.tsx","tonva-tools/pageItems.ts","tonva-tools/cacheIds.ts","tonva-tools/ui/form/formRes.ts","tonva-tools/ui/form/form.tsx","tonva-tools/ui/tabs/tabs.tsx","tonva-tools/ui/tabs/index.tsx","tonva-tools/net/netToken.ts","tonva-tools/ui/fetchErrorView.tsx","tonva-tools/img/logo.svg","face/home/index.tsx","face/index.tsx","face/member/index.tsx","face/cart/index.tsx","face/me/index.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["mobileHeaderStyle","RegExp","test","navigator","userAgent","minHeight","undefined","logs","__webpack_require__","stackKey","NavView","react__WEBPACK_IMPORTED_MODULE_0__","[object Object]","props","super","this","waitCount","isHistoryBack","clearError","setState","fetchError","back","bind","navBack","stack","state","wait","window","addEventListener","nav","set","start","level","length","waitTimeHandler","global","setTimeout","clearTimeout","err","error","unauthorized","showLogin","view","disposer","clear","push","removeCeased","history","pushState","key","ceased","refresh","item","pop","dispose","p","i","len","backLevel","popAndDispose","Error","find","v","confirmClose","log","confirm","self","top","postMessage","type","message","elWait","elError","className","_fetchErrorView__WEBPACK_IMPORTED_MODULE_5__","Object","assign","map","index","style","visibility","centerUrlAndWs","centerHost","url","ws","Nav","local","_local__WEBPACK_IMPORTED_MODULE_7__","user","lang","district","_res__WEBPACK_IMPORTED_MODULE_15__","language","culture","handler","onWsReceiveAny","handlerId","endWsReceive","msg","receive","_page__WEBPACK_IMPORTED_MODULE_3__","header","_loading__WEBPACK_IMPORTED_MODULE_16__","urlAndWs","debugUrlAndWs","NODE_ENV","PUBLIC_URL","REACT_APP_CENTER_HOST","REACT_APP_CENTER_DEBUG_HOST","_net__WEBPACK_IMPORTED_MODULE_8__","document","location","hash","includes","loadCenterUrl","wsHost","console","origin","isInFrame","startsWith","mif","_net_appBridge__WEBPACK_IMPORTED_MODULE_6__","_net_wsChannel__WEBPACK_IMPORTED_MODULE_13__","parent","device","get","_uid__WEBPACK_IMPORTED_MODULE_14__","logined","notLogined","onLogined","token","connect","JSON","stringify","_net_netToken__WEBPACK_IMPORTED_MODULE_4__","showAppView","withBack","lv","e","then","loginView","default","notShowLogin","logoutClear","startWait","endWait","onError","show","replace","ceaseTop","regConfirmClose","confirmBox","unitId","apiId","sheetType","sheetId","sheet","uh","id","onClick","src","open","__decorate","mobx__WEBPACK_IMPORTED_MODULE_1__","_net__WEBPACK_IMPORTED_MODULE_2__","d","__webpack_exports__","_ui__WEBPACK_IMPORTED_MODULE_3__","o","_pageItems__WEBPACK_IMPORTED_MODULE_5__","Context","form","uiSchema","data","inNode","widgets","errors","errorWidgets","renderErrors","mobx_react__WEBPACK_IMPORTED_MODULE_2__","rules","Array","isArray","arrName","itemName","value","widget","setValue","getDisabled","setDisabled","getReadOnly","setReadOnly","getVisible","setVisible","checkRules","clearContextErrors","rule","ret","setError","setContextError","addErrorWidget","clearContextError","checkFieldRules","checkContextRules","findIndex","pos","splice","hasError","checkHasError","RowContext","formContext","arrSchema","row","uiArr","items","name","isRow","itemSchemas","FormContext","rowContexts","arrRowContexts","j","rowContext","removeErrors","ContextContainer","usqTokens","logoutUsqTokens","appsInFrame","meInFrame","unit","_unit","val","isBridged","setMeInFrame","appHash","parts","split","substr","Number","page","param","slice","appUrl","u","_uid__WEBPACK_IMPORTED_MODULE_2__","loadAppUsqs","appOwner","appName","centerAppApi","_usqApi__WEBPACK_IMPORTED_MODULE_3__","usqs","appUsq","usq","usqOwner","usqName","usqToken","urlDebug","realUrl","_apiBase__WEBPACK_IMPORTED_MODULE_5__","resolve","reject","Promise","at","__awaiter","a","opener","apiName","evt","subWin","source","_wsChannel__WEBPACK_IMPORTED_MODULE_4__","el","getElementById","hidden","hideFrameBack","lodash__WEBPACK_IMPORTED_MODULE_0___default","clone","_ui__WEBPACK_IMPORTED_MODULE_1__","subFrameStarted","onReceive","initSubWin","from","callId","method","body","result","directCall","callCenterApiFromMessage","bca","brideCenterApis","bridgeCenterApiReturn","appInFrame","onReceiveAppApiMessage","action","onAppApiReturn","bridgeCenterApi","subAppWindow","setSubAppWindow","win","postWsToTop","WsBase","handlerSeed","anyHandlers","msgHandlers","seed","$type","wsBaseSeed","wsBridge","wsBaseId","WSChannel","centerToken","that","WebSocket","onopen","ev","onerror","onmessage","wsMessage","onclose","close","event","parse","postWsToSubApp","netThis","send","_wsChannel__WEBPACK_IMPORTED_MODULE_0__","_apiBase__WEBPACK_IMPORTED_MODULE_1__","_usqApi__WEBPACK_IMPORTED_MODULE_2__","_appBridge__WEBPACK_IMPORTED_MODULE_3__","_debugHost__WEBPACK_IMPORTED_MODULE_4__","httpChannelUI_HttpChannelNavUI","channelUIs","channelNoUIs","logoutApis","usqApi_channels","usqApi_UsqApi","apiBase","basePath","access","showWaiting","channels","channelUI","channel","appBridge","httpChannel","acc","join","names","post","params","arr","owner","pageStart","pageSize","order","$order","ids","proxy","put","lodash","usqApi_UnitxApi","buildChannel","CenterAppApi","unitxUsq","setCenterUrl","centerChannel","centerChannelUI","getCenterUrl","setCenterToken","t","usqApi_CenterApi","path","usqTokenApi","callCenterapi","call","uid","ALPHABET","ID_LENGTH","rtn","charAt","Math","floor","random","refetchApi","options","fetch","ApiBase","getHttpChannel","callFetch","delete","replaceUrlHost","hostString","defaultHost","envHost","indexOf","host","getUrlOrDebug","_local__WEBPACK_IMPORTED_MODULE_0__","orgDebug","endsWith","_debugHost__WEBPACK_IMPORTED_MODULE_1__","fetchUrl","fetchOptions","mode","headers","Content-Type","_fetchLocalCheck__WEBPACK_IMPORTED_MODULE_2__","text","isDevelopment","LocalData","Data","localStorage","getItem","setItem","removeItem","homeTabCur","_nav__WEBPACK_IMPORTED_MODULE_0__","_page__WEBPACK_IMPORTED_MODULE_2__","_VM__WEBPACK_IMPORTED_MODULE_5__","_form__WEBPACK_IMPORTED_MODULE_6__","_res__WEBPACK_IMPORTED_MODULE_7__","_tabs__WEBPACK_IMPORTED_MODULE_8__","_loading__WEBPACK_IMPORTED_MODULE_9__","centerDebugHost","usqDebugHost","debugUsqlServer","HttpChannel","isCenter","hostUrl","apiToken","ui","showError","timeout","_local__WEBPACK_IMPORTED_MODULE_2__","keys","c","k","buildOptions","innerFetch","buildError","timeOutHandler","res","encodeURI","ok","statusText","ct","json","retJson","catch","toLowerCase","_ui_nav__WEBPACK_IMPORTED_MODULE_1__","logout","_appBridge__WEBPACK_IMPORTED_MODULE_0__","Headers","append","scrollTimeGap","ScrollView","bottomTime","topTime","onScroll","onScrollTop","onScrollBottom","target","scrollTop","Date","getTime","offsetHeight","scrollHeight","direct","children","forEach","child","_$scroll","toString","eachChild","Page","cur","tabs","tabStates","tab","lodash__WEBPACK_IMPORTED_MODULE_3___default","isSelected","isMounted","t0","onTabClick","load","alert","footer","right","keepHeader","titleBar","icon","title","redDot","img","redDotView","cn","classnames__WEBPACK_IMPORTED_MODULE_2___default","_titleBar__WEBPACK_IMPORTED_MODULE_4__","center","content","invisible","onTouchStart","elFooter","renderTabs","renderSingle","mobx_react__WEBPACK_IMPORTED_MODULE_1__","resOptions","resLang","lodash__WEBPACK_IMPORTED_MODULE_0__","n","merge","_","l","entity","languages","setResOptions","TitleBar","logoutClick","_nav__WEBPACK_IMPORTED_MODULE_1__","navChange","hasBack","href","debugLogout","rightView","b","nick","role","openWindow","Loading","height","width","Rule","RuleCustom","func","defy","RulePredefined","RuleRequired","trim","NaN","required","rules_RuleNum","min","max","minMsg","lodash_default","template","maxMsg","number","checkMore","RuleInt","isInteger","integer","widget_Widget","context","itemSchema","fieldProps","contextErrors","onChange","onChanging","onChanged","prev","allowChange","isChanging","setDataValue","currentTarget","getUiItem","readOnly","disabled","visible","defaultValue","getValue","init","buildRules","r","check","removeErrorWidget","isOk","setElementValue","fieldClass","classnames_default","FieldClass","label","render","uiLabel","requiredFlag","react","FieldContainer","Templet","errorList","tag","mobx_module","textWidget_TextWidget","inputType","onBlur","onFocus","input","placeholder","renderTemplet","ref","onKeyDown","maxLength","numberWidget_NumberWidget","updownWidget_UpdownWidget","keyCode","returnValue","dateWidget_DateWidget","checkBoxWidget_CheckBoxWidget","checked","trueValue","falseValue","defaultChecked","keySeed","ArrRow","selectWidget_SelectWidget","select","option","list","selectWidget_decorate","idWidget_IdWidget","pickId","form-control","required-item","cursor-pointer","is-invalid","idWidget_decorate","Unknown","dataType","uiType","dataTypes","buttonWidget_ButtonWidget","buttonWidget_awaiter","onButtonClick","observerRender","index_module","widgetType","button","ButtonClass","widgetsFactory","textarea","rows","password","date","datetime","time","month","email","updown","color","checkbox","checkboxes","radio","inputs","rowKey","range","step","factory","typeWidget","getItemSchema","ArrComponent","getTypeWidget","WidgetElement","renderContainer","selectable","deletable","restorable","arrLabel","arrSelectable","arrDeletable","arrRestorable","ArrContainer","RowContainer","formSelectable","formDeletable","formRestorable","first","arrRow","$row","selectCheck","deleteIcon","$isSelected","isDeleted","$isDeleted","onDelClick","rowContent","editContainer","deleted","row-selected","sep","RowSeperator","form_context","typeofTemplet","Provider","fetchLocalCheck","store","mobx__WEBPACK_IMPORTED_MODULE_0__","homeCount","box","cartCount","decodeToken","jwt_decode__WEBPACK_IMPORTED_MODULE_0__","accesses","Controller","isDev","_local__WEBPACK_IMPORTED_MODULE_1__","onMessageReceive","onMessage","x","_nav__WEBPACK_IMPORTED_MODULE_2__","isLogined","unregisterReceiveHandler","receiveHandlerId","onDispose","vp","showEntry","onEvent","openPage","registerReceiveHandler","beforeStart","internalStart","isCalling","_resolve_$","View","controller","vm","returnCall","replacePage","backPage","closePage","ceasePage","VPage","coordinator","_form__WEBPACK_IMPORTED_MODULE_0__","_field__WEBPACK_IMPORTED_MODULE_1__","_schema__WEBPACK_IMPORTED_MODULE_2__","_uiSchema__WEBPACK_IMPORTED_MODULE_3__","Field","_widgets__WEBPACK_IMPORTED_MODULE_1__","_context__WEBPACK_IMPORTED_MODULE_2__","contextType","PageItems","itemObservable","isFirst","loading","beforeLoad","loaded","allLoaded","firstSize","appendPosition","_items","array","deep","topDiv","_uid__WEBPACK_IMPORTED_MODULE_1__","bottomDiv","setPageStart","unshift","reset","more","reverse","maxCount","dict","Map","loadId","shift","_loadIds","_loadId","formRes","zh","form_Form","DefaultContainer","DefaultFieldContainer","fieldLabelSize","labelView","fieldCol","DefaultFieldClass","DefaultArrContainer","DefaultRowContainer","py-3","DefaultButtonClass","DefaultRowSeperator","DefaultRes","ui_res","schema","formData","Container","arrItem","arrItems","arrDict","nm","beforeShow","Tab","selected","_content","contentBuilder","TabCaptionComponent","tabs_Tabs","tabClick","selectedTab","size","tabBack","contentBack","caption","notify","display","notifyCircle","num","netToken","_usqApi__WEBPACK_IMPORTED_MODULE_0__","_wsChannel__WEBPACK_IMPORTED_MODULE_1__","FetchErrorView","reApi","_net__WEBPACK_IMPORTED_MODULE_1__","errContent","module","exports","faceTabs","LoadableComponent","lib_default","loader","all","tonva_tools","tc","TabController","src_App_0","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","react_dom","URL","response","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.632c2183.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport {fetchLocalCheck} from '../net/fetchLocalCheck';\r\nimport {User, decodeToken} from '../user';\r\nimport {Page} from './page';\r\nimport {netToken} from '../net/netToken';\r\nimport FetchErrorView from './fetchErrorView';\r\nimport {FetchError} from '../fetchError';\r\nimport {appUrl, setMeInFrame, isBridged, logoutUsqTokens} from '../net/appBridge';\r\nimport {LocalData} from '../local';\r\nimport {logoutApis, setCenterUrl, setCenterToken, WSChannel, getCenterUrl, centerDebugHost} from '../net';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport '../css/va-form.css';\r\nimport '../css/va.css';\r\nimport '../css/animation.css';\r\nimport { WsBase, wsBridge } from '../net/wsChannel';\r\nimport { uid } from '../uid';\r\nimport { resOptions } from './res';\r\nimport { Loading } from './loading';\r\n\r\nconst regEx = new RegExp('Android|webOS|iPhone|iPad|' +\r\n    'BlackBerry|Windows Phone|'  +\r\n    'Opera Mini|IEMobile|Mobile' , \r\n    'i');\r\nconst isMobile = regEx.test(navigator.userAgent);\r\nexport const mobileHeaderStyle = isMobile? {\r\n    minHeight:  '3em'\r\n} : undefined;\r\n\r\nconst logo = require('../img/logo.svg');\r\nconst logs:string[] = [];\r\n\r\nexport interface Props //extends React.Props<Nav>\r\n{\r\n    //view: JSX.Element | (()=>JSX.Element);\r\n    start?: ()=>Promise<void>;\r\n    onLogined: ()=>Promise<void>;\r\n    notLogined?: ()=>Promise<void>;\r\n};\r\nlet stackKey = 1;\r\nexport interface StackItem {\r\n    key: number;\r\n    view: JSX.Element;\r\n    ceased: boolean;\r\n    confirmClose?: ()=>Promise<boolean>;\r\n    disposer?: ()=>void;\r\n}\r\nexport interface State {\r\n    stack: StackItem[];\r\n    wait: 0|1|2;\r\n    fetchError: FetchError\r\n}\r\n\r\nexport class NavView extends React.Component<Props, State> {\r\n    private stack: StackItem[];\r\n    private htmlTitle: string;\r\n    private waitCount: number = 0;\r\n    private waitTimeHandler?: NodeJS.Timer;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.back = this.back.bind(this);\r\n        this.navBack = this.navBack.bind(this);\r\n        this.stack = [];\r\n        this.state = {\r\n            stack: this.stack,\r\n            wait: 0,\r\n            fetchError: undefined\r\n        };\r\n    }\r\n    async componentWillMount() {\r\n        window.addEventListener('popstate', this.navBack);\r\n    }\r\n\r\n    async componentDidMount()\r\n    {\r\n        nav.set(this);\r\n        let start = this.props.start;\r\n        if (start !== undefined) {\r\n            await start();\r\n        }\r\n        else {\r\n            await nav.start();\r\n        }\r\n    }\r\n\r\n    get level(): number {\r\n        return this.stack.length;\r\n    }\r\n\r\n    startWait() {\r\n        if (this.waitCount === 0) {\r\n            this.setState({wait: 1});\r\n            this.waitTimeHandler = global.setTimeout(\r\n                () => {\r\n                    this.waitTimeHandler = undefined;\r\n                    this.setState({wait: 2});\r\n                },\r\n                1000) as NodeJS.Timer;\r\n        }\r\n        ++this.waitCount;\r\n        this.setState({\r\n            fetchError: undefined,\r\n        });\r\n    }\r\n\r\n    endWait() {\r\n        setTimeout(() => {\r\n            /*\r\n            this.setState({\r\n                fetchError: undefined,\r\n            });*/\r\n            --this.waitCount;\r\n            if (this.waitCount === 0) {\r\n                if (this.waitTimeHandler !== undefined) {\r\n                    clearTimeout(this.waitTimeHandler);\r\n                    this.waitTimeHandler = undefined;\r\n                }\r\n                this.setState({wait: 0});\r\n            }\r\n        },100);\r\n    }\r\n\r\n    async onError(fetchError: FetchError)\r\n    {\r\n        let err = fetchError.error;\r\n        if (err !== undefined && err.unauthorized === true) {\r\n            await nav.showLogin();\r\n            return;\r\n        }\r\n        this.setState({\r\n            fetchError: fetchError,\r\n        });\r\n    }\r\n\r\n    show(view: JSX.Element, disposer?: ()=>void): number {\r\n        this.clear();\r\n        return this.push(view, disposer);\r\n    }\r\n\r\n    push(view: JSX.Element, disposer?: ()=>void): number {\r\n        this.removeCeased();\r\n        if (this.stack.length > 0) {\r\n            window.history.pushState('forward', null, null);\r\n        }\r\n        let key = stackKey++;\r\n        this.stack.push({\r\n            key: key,\r\n            view: view, \r\n            ceased: false,\r\n            disposer: disposer\r\n        });\r\n        this.refresh();\r\n        //console.log('push: %s pages', this.stack.length);\r\n        return key;\r\n    }\r\n\r\n    replace(view: JSX.Element, disposer?: ()=>void): number {\r\n        let item:StackItem = undefined;\r\n        let stack = this.stack;\r\n        if (stack.length > 0) {\r\n            item = stack.pop();\r\n            //this.popAndDispose();\r\n        }\r\n        let key = stackKey++;\r\n        this.stack.push({\r\n            key: key, \r\n            view: view, \r\n            ceased: false,\r\n            disposer: disposer\r\n        });\r\n        if (item !== undefined) this.dispose(item.disposer);\r\n        this.refresh();\r\n        //console.log('replace: %s pages', this.stack.length);\r\n        return key;\r\n    }\r\n\r\n    ceaseTop(level:number = 1) {\r\n        let p = this.stack.length - 1;\r\n        for (let i=0; i<level; i++, p--) {\r\n            if (p < 0) break;\r\n            let item = this.stack[p];\r\n            item.ceased = true;\r\n        }\r\n    }\r\n\r\n    pop(level:number = 1) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        //console.log('pop start: %s pages level=%s', len, level);\r\n        if (level <= 0 || len <= 1) return;\r\n        if (len < level) level = len;\r\n        let backLevel = 0;\r\n        for (let i = 0; i < level; i++) {\r\n            if (stack.length === 0) break;\r\n            //stack.pop();\r\n            this.popAndDispose();\r\n            ++backLevel;\r\n        }\r\n        if (backLevel >= len) backLevel--;\r\n        this.refresh();\r\n        if (this.isHistoryBack !== true) {\r\n            //window.removeEventListener('popstate', this.navBack);\r\n            //window.history.back(backLevel);\r\n            //window.addEventListener('popstate', this.navBack);\r\n        }\r\n        //console.log('pop: %s pages', stack.length);\r\n    }\r\n\r\n    popTo(key: number) {\r\n        throw new Error('to be designed');\r\n    }\r\n\r\n    removeCeased() {\r\n        for (;;) {\r\n            let p=this.stack.length-1;\r\n            if (p < 0) break;\r\n            let top = this.stack[p];\r\n            if (top.ceased === false) break;\r\n            let item = this.stack.pop();\r\n            let {disposer} = item;\r\n            this.dispose(disposer);\r\n        }\r\n        this.refresh();\r\n    }\r\n\r\n    private popAndDispose() {\r\n        this.removeCeased();\r\n        let item = this.stack.pop();\r\n        if (item === undefined) return;\r\n        let {disposer} = item;\r\n        this.dispose(disposer);\r\n        this.removeCeased();\r\n        return item;\r\n    }\r\n\r\n    private dispose(disposer:()=>void) {\r\n        if (disposer === undefined) return;\r\n        let item = this.stack.find(v => v.disposer === disposer);\r\n        if (item === undefined) disposer();\r\n    }\r\n\r\n    clear() {\r\n        let len = this.stack.length;\r\n        while (this.stack.length > 0) this.popAndDispose();\r\n        this.refresh();\r\n        if (len > 1) {\r\n            //window.removeEventListener('popstate', this.navBack);\r\n            //window.history.back(len-1);\r\n            //window.addEventListener('popstate', this.navBack);\r\n        }\r\n    }\r\n\r\n    regConfirmClose(confirmClose:()=>Promise<boolean>) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        if (len === 0) return;\r\n        let top = stack[len-1];\r\n        top.confirmClose = confirmClose;\r\n    }\r\n\r\n    private isHistoryBack:boolean = false;\r\n    navBack() {\r\n        nav.log('backbutton pressed - nav level: ' + this.stack.length);\r\n        this.isHistoryBack = true;\r\n        this.back(true);\r\n        this.isHistoryBack = false;\r\n    }\r\n\r\n    async back(confirm:boolean = true) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        if (len === 0) return;\r\n        if (len === 1) {\r\n            if (self != window.top) {\r\n                window.top.postMessage({type:'pop-app'}, '*');\r\n            }\r\n            return;\r\n        }\r\n        let top = stack[len-1];\r\n        if (confirm===true && top.confirmClose) {\r\n            if (await top.confirmClose()===true) this.pop();\r\n        }\r\n        else {\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    confirmBox(message?:string): boolean {\r\n        return window.confirm(message);\r\n    }\r\n    clearError = () => {\r\n        this.setState({fetchError: undefined});\r\n    }\r\n    render() {\r\n        const {wait, fetchError} = this.state;\r\n        let stack = this.state.stack;\r\n        let top = stack.length - 1;\r\n        let elWait = null, elError = null;\r\n        switch (wait) {\r\n            case 1:\r\n                elWait = <li className=\"va-wait va-wait1\">\r\n                </li>;\r\n                break;\r\n            case 2:\r\n                elWait = <li className=\"va-wait va-wait2\">\r\n                    <i className=\"fa fa-spinner fa-spin fa-3x fa-fw\"></i>\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </li>;\r\n                break;\r\n        }\r\n        if (fetchError)\r\n            elError = <FetchErrorView clearError={this.clearError} {...fetchError} />\r\n        return (\r\n        <ul className='va'>\r\n            {\r\n                stack.map((item, index) => {\r\n                    let {key, view} = item;\r\n                    return <li key={key} style={index<top? {visibility: 'hidden'}:undefined}>\r\n                        {view}\r\n                    </li>\r\n                })\r\n            }\r\n            {elWait}\r\n            {elError}\r\n        </ul>\r\n        );\r\n    }\r\n\r\n    private refresh() {\r\n        // this.setState({flag: !this.state.flag});\r\n        this.setState({stack: this.stack });\r\n        // this.forceUpdate();\r\n    }\r\n}\r\n\r\ninterface UrlAndWs {\r\n    url: string;\r\n    ws: string;\r\n}\r\n\r\nfunction centerUrlAndWs(centerHost:string):UrlAndWs {\r\n    //let host = 'REACT_APP_CENTER_HOST';\r\n    //let centerHost = process.env[host];\r\n    if (centerHost === undefined) return {url:undefined, ws:undefined};\r\n    return {\r\n        url: 'http://' + centerHost + '/',\r\n        ws: 'ws://' + centerHost + '/tv/',\r\n    }\r\n}\r\n\r\nasync function loadCenterUrl():Promise<{url:string, ws:string}> {\r\n    let urlAndWs:UrlAndWs = centerUrlAndWs(process.env['REACT_APP_CENTER_HOST']);\r\n    let debugUrlAndWs:UrlAndWs = centerUrlAndWs(process.env.REACT_APP_CENTER_DEBUG_HOST || centerDebugHost);\r\n    let hash = document.location.hash;\r\n    if (hash.includes('sheet_debug') === true) {\r\n        return debugUrlAndWs;\r\n    }\r\n    if (process.env.NODE_ENV==='development') {\r\n        if (debugUrlAndWs.url !== undefined) {\r\n            try {\r\n                console.log('try connect debug url');\r\n                //let ret = await fetch(debugUrlAndWs.url);\r\n                let ret = await fetchLocalCheck(debugUrlAndWs.url);\r\n                console.log('connected');\r\n                return debugUrlAndWs;\r\n            }\r\n            catch (err) {\r\n                //console.error(err);\r\n            }\r\n        }\r\n    }\r\n    return urlAndWs;\r\n}\r\n\r\nexport class Nav {\r\n    private nav:NavView;\r\n    //private loginView: JSX.Element;\r\n    private ws: WsBase;\r\n    private wsHost: string;\r\n    local: LocalData = new LocalData();\r\n    @observable user: User = undefined; // = {id:undefined, name:undefined, token:undefined};\r\n    language: string;\r\n    culture: string;\r\n\r\n    constructor() {\r\n        /*\r\n        let language = navigator.languages && navigator.languages[0] || // Chrome / Firefox\r\n               navigator.language; // ||   // All browsers\r\n               //navigator.userLanguage; // IE <= 10\r\n        if (!language) {\r\n            this.language = 'zh';\r\n            this.culture = 'CN';\r\n        }\r\n        let parts = language.split('-');\r\n        this.language = parts[0];\r\n        if (parts.length > 1) this.culture = parts[1];\r\n        */\r\n\r\n        let {lang, district} = resOptions;\r\n        this.language = lang;\r\n        this.culture = district;\r\n    }\r\n    \r\n    set(nav:NavView) {\r\n        //this.logo = logo;\r\n        this.nav = nav;\r\n    }\r\n\r\n    registerReceiveHandler(handler: (message:any)=>Promise<void>):number {\r\n        if (this.ws === undefined) return;\r\n        return this.ws.onWsReceiveAny(handler);\r\n    }\r\n\r\n    unregisterReceiveHandler(handlerId:number) {\r\n        if (this.ws === undefined) return;\r\n        if (handlerId === undefined) return;\r\n        this.ws.endWsReceive(handlerId);\r\n    }\r\n\r\n    async onReceive(msg:any) {\r\n        if (this.ws === undefined) return;\r\n        await this.ws.receive(msg);\r\n    }\r\n\r\n    private isInFrame:boolean;\r\n    async start() {\r\n        nav.push(<Page header={false}><Loading /></Page>);\r\n\r\n        let {url, ws} = await loadCenterUrl();\r\n        setCenterUrl(url);\r\n        this.wsHost = ws;\r\n\r\n        let hash = document.location.hash;\r\n        // document.title = document.location.origin;\r\n        console.log(\"url=%s hash=%s\", document.location.origin, hash);\r\n        this.isInFrame = hash !== undefined && hash !== '' && hash.startsWith('#tv');\r\n        if (this.isInFrame === true) {\r\n            let mif = setMeInFrame(hash);\r\n            if (mif !== undefined) {\r\n                this.ws = wsBridge;\r\n                console.log('this.ws = wsBridge in sub frame');\r\n                //nav.user = {id:0} as User;\r\n                if (self !== window.parent) {\r\n                    window.parent.postMessage({type:'sub-frame-started', hash: mif.hash}, '*');\r\n                }\r\n                // 下面这一句，已经移到 appBridge.ts 里面的 initSubWin，也就是响应从main frame获得user之后开始。\r\n                //await this.showAppView();\r\n                return;\r\n            }\r\n        }\r\n        let device: string = this.local.device.get();\r\n        let user: User = this.local.user.get();\r\n        if (device === undefined) {\r\n            device = uid();\r\n            this.local.device.set(device);\r\n            user = undefined;\r\n        }\r\n        if (user === undefined || user.device !== device) {\r\n            let {notLogined} = this.nav.props;\r\n            if (notLogined !== undefined) {\r\n                await notLogined();\r\n            }\r\n            else {\r\n                await nav.showLogin();\r\n            }\r\n            return;\r\n        }\r\n\r\n        await nav.logined(user);\r\n    }\r\n\r\n    async showAppView() {\r\n        let {onLogined} = this.nav.props;\r\n        if (onLogined === undefined) {\r\n            nav.push(<div>NavView has no prop onLogined</div>);\r\n            return;\r\n        }\r\n        nav.clear();\r\n        await onLogined();\r\n        console.log('logined: AppView shown');\r\n    }\r\n\r\n    async logined(user: User) {\r\n        let ws:WSChannel = this.ws = new WSChannel(this.wsHost, user.token);\r\n        ws.connect();\r\n\r\n        console.log(\"logined: %s\", JSON.stringify(user));\r\n        this.local.user.set(user);\r\n        netToken.set(user.token);\r\n        this.user = user;\r\n        console.log('ws.connect() in app main frame');\r\n        await this.showAppView();\r\n    }\r\n\r\n    async showLogin(withBack?:boolean) {\r\n        //if (this.loginView === undefined) {\r\n        let lv = await import('../entry/login');\r\n        //this.loginView = <lv.default logo={logo} />;\r\n        let loginView = <lv.default withBack={withBack} />;\r\n        //}\r\n        if (withBack !== true) {\r\n            this.nav.clear();\r\n            this.pop();\r\n        }\r\n        //this.nav.show(loginView);\r\n        this.nav.push(loginView);\r\n    }\r\n\r\n    async logout(notShowLogin?:boolean) {\r\n        this.local.logoutClear();\r\n        this.user = undefined; //{} as User;\r\n        logoutApis();\r\n        logoutUsqTokens();\r\n        setCenterToken(undefined);\r\n        this.ws = undefined;\r\n        if (notShowLogin === true) return;\r\n        await this.showLogin();\r\n    }\r\n\r\n    get level(): number {\r\n        return this.nav.level;\r\n    }\r\n    startWait() {\r\n        this.nav.startWait();\r\n    }\r\n    endWait() {\r\n        this.nav.endWait();\r\n    }\r\n    async onError(error: FetchError) {\r\n        await this.nav.onError(error);\r\n    }\r\n    show (view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.show(view, disposer);\r\n    }\r\n    push(view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.push(view, disposer);\r\n    }\r\n    replace(view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.replace(view, disposer);\r\n    }\r\n    pop(level:number = 1) {\r\n        this.nav.pop(level);\r\n    }\r\n    clear() {\r\n        this.nav.clear();\r\n    }\r\n    navBack() {\r\n        this.nav.navBack();\r\n    }\r\n    ceaseTop(level?:number) {\r\n        this.nav.ceaseTop(level);\r\n    }\r\n    removeCeased() {\r\n        this.nav.removeCeased();\r\n    }\r\n    async back(confirm:boolean = true) {\r\n        await this.nav.back(confirm);\r\n    }\r\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        this.nav.regConfirmClose(confirmClose);\r\n    }\r\n    confirmBox(message?:string): boolean {\r\n        return this.nav.confirmBox(message);\r\n    }\r\n    navToApp(url: string, unitId: number, apiId?:number, sheetType?:number, sheetId?:number) {\r\n        let centerUrl = getCenterUrl();\r\n        let sheet = centerUrl.includes('http://localhost:') === true? 'sheet_debug':'sheet'\r\n        let uh = sheetId === undefined?\r\n                appUrl(url, unitId) :\r\n                appUrl(url, unitId, sheet, [apiId, sheetType, sheetId]);\r\n        console.log('navToApp: %s', JSON.stringify(uh));\r\n        nav.push(<article className='app-container'>\r\n            <span id={uh.hash} onClick={()=>this.back()} style={mobileHeaderStyle}>\r\n                <i className=\"fa fa-arrow-left\" />\r\n            </span>\r\n            <iframe src={uh.url} />\r\n        </article>);\r\n    }\r\n\r\n    navToSite(url: string) {\r\n        // show in new window\r\n        window.open(url);\r\n    }\r\n\r\n    get logs() {return logs};\r\n    log(msg:string) {\r\n        logs.push(msg);\r\n    } \r\n}\r\nexport const nav: Nav = new Nav();\r\n","export {left0} from './left0';\r\nexport * from './user';\r\nexport * from './net';\r\nexport * from './ui';\r\nexport * from './uid';\r\nexport {PageItems} from './pageItems';\r\nexport {CacheIds} from './cacheIds';\r\n","import * as React from 'react';\r\nimport { Form } from './form';\r\nimport { UiSchema, UiArr, UiItem } from './uiSchema';\r\nimport { ArrSchema, ItemSchema } from './schema';\r\nimport { Widget as Widget } from './widgets/widget';\r\nimport { ArrRow } from './arrRow';\r\nimport { observable, computed } from 'mobx';\r\nimport { ContextRule } from './rules';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport abstract class Context {    \r\n    readonly form: Form;\r\n    readonly uiSchema: UiSchema;\r\n    readonly data: any;\r\n    readonly inNode: boolean;           // true: 在</> 流中定义Field\r\n    readonly widgets: {[name:string]: Widget} = {};\r\n    readonly rules: ContextRule[];\r\n    @observable errors: string[] = [];\r\n    @observable errorWidgets:Widget[] = [];\r\n\r\n    constructor(form: Form, uiSchema: UiSchema, data: any, inNode: boolean) {\r\n        this.form = form;\r\n        this.uiSchema = uiSchema;\r\n        this.data = data;\r\n        this.inNode = inNode;\r\n        if (uiSchema !== undefined) {\r\n            let {rules} = uiSchema;\r\n            if (rules !== undefined) {\r\n                this.rules = [];\r\n                if (Array.isArray(rules) === false)\r\n                    this.rules.push(rules as ContextRule);\r\n                else\r\n                    this.rules.push(...rules as ContextRule[]);\r\n            }\r\n        }\r\n    }\r\n\r\n    abstract get isRow():boolean;\r\n    abstract getItemSchema(itemName:string):ItemSchema;\r\n    abstract getUiItem(itemName:string):UiItem;\r\n    get arrName():string {return undefined}\r\n    getValue(itemName:string):any {return this.data[itemName]}\r\n    setValue(itemName:string, value:any) {\r\n        this.data[itemName] = value;\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setValue(value);\r\n    }\r\n    getDisabled(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) return widget.getDisabled();\r\n        return undefined;\r\n    }\r\n    setDisabled(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setDisabled(value);\r\n    }\r\n    getReadOnly(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.getReadOnly();\r\n        return undefined;\r\n    }\r\n    setReadOnly(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setReadOnly(value);\r\n    }\r\n    getVisible(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.getVisible();\r\n        return undefined;\r\n    }\r\n    setVisible(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setVisible(value);\r\n    }\r\n\r\n    checkFieldRules() {\r\n        for (let i in this.widgets) {\r\n            this.widgets[i].checkRules();\r\n        }\r\n    }\r\n\r\n    checkContextRules() {\r\n        if (this.rules === undefined) return;\r\n        this.clearContextErrors();\r\n        for (let rule of this.rules) {\r\n            let ret = rule(this);\r\n            if (ret === undefined) continue;\r\n            if (Array.isArray(ret) === true) {\r\n                this.errors.push(...ret as string[]);\r\n            }\r\n            else if (typeof ret === 'string') {\r\n                this.errors.push(ret as string);\r\n            }\r\n            else {\r\n                for (let i in ret as object) this.setError(i, ret[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    setError(itemName:string, error:string) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget === undefined) return;\r\n        widget.setContextError(error);\r\n        this.addErrorWidget(widget);\r\n    }\r\n\r\n    clearContextErrors() {\r\n        for (let i in this.widgets) this.widgets[i].clearContextError();\r\n    }\r\n\r\n    checkRules() {\r\n        this.checkFieldRules();\r\n        this.checkContextRules();\r\n    }\r\n\r\n    addErrorWidget(widget:Widget) {\r\n        let pos = this.errorWidgets.findIndex(v => v === widget);\r\n        if (pos < 0) this.errorWidgets.push(widget);\r\n    }\r\n    removeErrorWidget(widget:Widget) {\r\n        let pos = this.errorWidgets.findIndex(v => v === widget);\r\n        if (pos >= 0) this.errorWidgets.splice(pos, 1);\r\n    }\r\n\r\n    protected checkHasError():boolean {\r\n        return (this.errorWidgets.length + this.errors.length) > 0\r\n    }\r\n\r\n    @computed get hasError():boolean {\r\n        return this.checkHasError();\r\n    };\r\n\r\n    removeErrors() {\r\n        this.errors.splice(0);\r\n        this.errorWidgets.splice(0);\r\n        for (let i in this.widgets) {\r\n            let widget = this.widgets[i];\r\n            if (widget === undefined) continue;\r\n            widget.clearContextError();\r\n        }\r\n    }\r\n\r\n    renderErrors = observer((): JSX.Element => {\r\n        let {errors} = this;\r\n        if (errors.length === 0) return null;\r\n        return <>\r\n            {errors.map(err => <span key={err} className=\"text-danger inline-block my-1 ml-3\">\r\n                <i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}\r\n            </span>)}\r\n        </>\r\n    });\r\n}\r\n\r\nexport class RowContext extends Context {\r\n    readonly formContext: FormContext;\r\n    readonly arrSchema: ArrSchema;\r\n    readonly uiSchema: UiArr;\r\n    readonly row: ArrRow;\r\n    constructor(formContext:FormContext, arrSchema: ArrSchema, data: any, inNode: boolean, row:ArrRow) {\r\n        let uiArr:UiArr;\r\n        let {form} = formContext;\r\n        let {uiSchema} = form;\r\n        if (uiSchema !== undefined) {\r\n            let {items} = uiSchema;\r\n            if (items !== undefined) uiArr = items[arrSchema.name] as UiArr;\r\n        }\r\n        super(formContext.form, uiArr, data, inNode);\r\n        this.formContext = formContext;\r\n        this.arrSchema = arrSchema;\r\n        this.row = row;\r\n    }\r\n    get isRow():boolean {return true};\r\n    getItemSchema(itemName:string):ItemSchema {return this.arrSchema.itemSchemas[itemName]}\r\n    getUiItem(itemName:string):UiItem {\r\n        if (this.uiSchema === undefined) return undefined;\r\n        let {items} = this.uiSchema;\r\n        if (items === undefined) return undefined;\r\n        return items[itemName]\r\n    }\r\n    get arrName():string {return this.arrSchema.name}\r\n}\r\n\r\nexport class FormContext extends Context {\r\n    rowContexts:{[name:string]:{[rowKey:string]:RowContext}} = {};\r\n    constructor(form:Form, inNode:boolean) {\r\n        super(form, form.uiSchema, form.data, inNode);\r\n    }\r\n    get isRow():boolean {return false};\r\n    getItemSchema(itemName:string):ItemSchema {return this.form.itemSchemas[itemName]}\r\n    getUiItem(itemName:string):UiItem {\r\n        let {uiSchema} = this.form;\r\n        if (uiSchema === undefined) return undefined;\r\n        let {items} = uiSchema;\r\n        if (items === undefined) return undefined;\r\n        return items[itemName]\r\n    }\r\n    checkFieldRules() {\r\n        super.checkFieldRules();\r\n        for (let i in this.rowContexts) {\r\n            let arrRowContexts = this.rowContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                arrRowContexts[j].checkFieldRules();\r\n            }\r\n        }\r\n    }\r\n    checkContextRules() {\r\n        super.checkContextRules();\r\n        for (let i in this.rowContexts) {\r\n            let arrRowContexts = this.rowContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                let rowContext = arrRowContexts[j];\r\n                rowContext.removeErrors();\r\n                rowContext.checkContextRules();\r\n            }\r\n        }\r\n    }\r\n    @computed get hasError():boolean {\r\n        if (super.checkHasError() === true) return true;\r\n        for (let i in this.rowContexts) {\r\n            let arrRowContexts = this.rowContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                if (arrRowContexts[j].hasError === true) return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n}\r\n\r\nexport const ContextContainer = React.createContext<Context>({} as any);\r\n","import _ from 'lodash';\r\nimport {nav} from '../ui';\r\nimport {uid} from '../uid';\r\nimport {usqTokenApi, callCenterapi, CenterAppApi, AppUsq, centerToken, App} from './usqApi';\r\nimport {setSubAppWindow, wsBridge} from './wsChannel';\r\nimport { getUrlOrDebug } from './apiBase';\r\n\r\nexport interface UsqToken {\r\n    name: string;\r\n    url: string;\r\n    urlDebug: string;\r\n    token: string;\r\n}\r\ninterface UsqTokenAction extends UsqToken {\r\n    resolve: (value?: UsqToken | PromiseLike<UsqToken>) => void;\r\n    reject: (reason?: any) => void;\r\n}\r\nconst usqTokens:{[usqName:string]: UsqTokenAction}  = {};\r\nexport function logoutUsqTokens() {\r\n    for (let i in usqTokens) usqTokens[i] = undefined;\r\n}\r\n\r\nexport interface AppInFrame {\r\n    hash: string;\r\n    unit: number;       // unit id\r\n    page?: string;\r\n    param?: string[];\r\n}\r\nconst appsInFrame:{[key:string]:AppInFrame} = {};\r\n\r\nclass AppInFrameClass implements AppInFrame {\r\n    hash: string;\r\n    private _unit: number;\r\n    get unit(): number {return this._unit;}       // unit id\r\n    set unit(val:number) { this._unit=val;}\r\n    page?: string;\r\n    param?: string[];\r\n}\r\n\r\nexport let meInFrame:AppInFrame = new AppInFrameClass();\r\n/* {\r\n    hash: undefined,\r\n    get unit():number {return } undefined, //debugUnitId,\r\n    page: undefined;\r\n    param: undefined,\r\n}*/\r\n\r\nexport function isBridged():boolean {\r\n    return self !== window.parent;\r\n}\r\n\r\nwindow.addEventListener('message', async function(evt) {\r\n    var message = evt.data;\r\n    switch (message.type) {\r\n        case 'sub-frame-started':\r\n            subFrameStarted(evt);\r\n            break;\r\n        case 'ws':\r\n            //wsBridge.receive(message.msg);\r\n            await nav.onReceive(message.msg);\r\n            break;\r\n        case 'init-sub-win':\r\n            await initSubWin(message);\r\n            break;\r\n        case 'pop-app':\r\n            nav.navBack();\r\n            break;\r\n        case 'center-api':\r\n            await callCenterApiFromMessage(evt.source as Window, message);\r\n            break;\r\n        case 'center-api-return':\r\n            bridgeCenterApiReturn(message);\r\n            break;\r\n        case 'app-api':\r\n            console.log(\"receive PostMessage: %s\", JSON.stringify(message));\r\n            let ret = await onReceiveAppApiMessage(message.hash, message.apiName);\r\n            console.log(\"onReceiveAppApiMessage: %s\", JSON.stringify(ret));\r\n            (evt.source as Window).postMessage({\r\n                type: 'app-api-return', \r\n                apiName: message.apiName,\r\n                url: ret.url,\r\n                urlDebug: ret.urlDebug,\r\n                token: ret.token} as any, \"*\");\r\n            break;\r\n        case 'app-api-return':\r\n            console.log(\"app-api-return: %s\", JSON.stringify(message));\r\n            console.log('await onAppApiReturn(message);');\r\n            await onAppApiReturn(message);\r\n            break;\r\n        default:\r\n            this.console.log('message: %s', JSON.stringify(message));\r\n            break;\r\n    }\r\n});\r\n\r\nfunction subFrameStarted(evt:any) {\r\n    var message = evt.data;\r\n    let subWin = evt.source as Window;\r\n    setSubAppWindow(subWin);\r\n    hideFrameBack(message.hash);\r\n    let msg:any = _.clone(nav.user);\r\n    msg.type = 'init-sub-win';\r\n    subWin.postMessage(msg, '*');\r\n}\r\nfunction hideFrameBack(hash:string) {\r\n    let el = document.getElementById(hash);\r\n    if (el !== undefined) el.hidden = true;\r\n}\r\nasync function initSubWin(message:any) {\r\n    console.log('initSubWin: set nav.user', message);\r\n    nav.user = message; // message.user;\r\n    await nav.showAppView();\r\n}\r\nasync function onReceiveAppApiMessage(hash: string, apiName: string): Promise<UsqToken> {\r\n    let appInFrame = appsInFrame[hash];\r\n    if (appInFrame === undefined) return {name:apiName, url:undefined, urlDebug:undefined, token:undefined};\r\n    let {unit} = appInFrame;\r\n    let parts = apiName.split('/');\r\n    let ret = await usqTokenApi.usq({unit: unit, usqOwner: parts[0], usqName: parts[1]});\r\n    if (ret === undefined) {\r\n        console.log('apiTokenApi.api return undefined. api=%s, unit=%s', apiName, unit);\r\n        throw 'api not found';\r\n    }\r\n    return {name: apiName, url: ret.url, urlDebug:ret.urlDebug, token: ret.token};\r\n}\r\n\r\nasync function onAppApiReturn(message:any) {\r\n    let {apiName, url, urlDebug, token} = message;\r\n    let action = usqTokens[apiName];\r\n    if (action === undefined) {\r\n        throw 'error app api return';\r\n        //return;\r\n    }\r\n    let realUrl = await getUrlOrDebug(url, urlDebug);\r\n    console.log('onAppApiReturn(message:any): url=' + url + ', debug=' + urlDebug + ', real=' + realUrl);\r\n    action.url = realUrl;\r\n    action.token = token;\r\n    action.resolve(action);\r\n}\r\n\r\nexport function setMeInFrame(appHash: string):AppInFrame {\r\n    let parts = appHash.split('-');\r\n    let len = parts.length;\r\n    meInFrame.hash = parts[0].substr(3);\r\n    if (len>0) meInFrame.unit = Number(parts[1]);\r\n    if (len>1) meInFrame.page = parts[2];\r\n    if (len>2) meInFrame.param = parts.slice(3);\r\n    return meInFrame;\r\n}\r\n\r\nexport function appUrl(url: string, unitId: number, page?:string, param?:any[]):{url:string; hash:string} {\r\n    let u:string;\r\n    for (;;) {\r\n        u = uid();\r\n        let a = appsInFrame[u];\r\n        if (a === undefined) {\r\n            appsInFrame[u] = {hash:u, unit:unitId};\r\n            break;\r\n        }\r\n    }\r\n    url += '#tv' + u + '-' + unitId;\r\n    if (page !== undefined) {\r\n        url += '-' + page;\r\n        if (param !== undefined) {\r\n            for (let i=0; i<param.length; i++) {\r\n                url += '-' + param[i];\r\n            }\r\n        }\r\n    }\r\n    return {url: url, hash: u};\r\n}\r\n\r\nexport async function loadAppUsqs(appOwner:string, appName): Promise<App> {\r\n    let centerAppApi = new CenterAppApi('tv/', undefined);\r\n    let unit = meInFrame.unit;\r\n    return await centerAppApi.usqs(unit, appOwner, appName);\r\n}\r\n\r\nexport async function appUsq(usq:string, usqOwner:string, usqName:string): Promise<UsqToken> {\r\n    let usqToken = usqTokens[usq];\r\n    if (usqToken !== undefined) return usqToken;\r\n    if (!isBridged()) {\r\n        usqToken = await usqTokenApi.usq({unit: meInFrame.unit, usqOwner:usqOwner, usqName:usqName});\r\n        if (usqToken === undefined) {\r\n            let err = 'unauthorized call: usqTokenApi center return undefined!';\r\n            throw err;\r\n        }\r\n        if (usqToken.token === undefined) usqToken.token = centerToken;\r\n        let {url, urlDebug} = usqToken;\r\n        let realUrl = await getUrlOrDebug(url, urlDebug);\r\n        console.log('realUrl: %s', realUrl);\r\n        usqToken.url = realUrl;\r\n        usqTokens[usq] = usqToken;\r\n        return usqToken;\r\n    }\r\n    console.log(\"appApi parent send: %s\", meInFrame.hash);\r\n    usqToken = {\r\n        name: usq,\r\n        url: undefined,\r\n        urlDebug: undefined,\r\n        token: undefined,\r\n        resolve: undefined,\r\n        reject: undefined,\r\n    };\r\n    usqTokens[usq] = usqToken;\r\n    return new Promise<UsqToken>((resolve, reject) => {\r\n        usqToken.resolve = async (at) => {\r\n            let a = await at;\r\n            console.log('return from parent window: %s', JSON.stringify(a));\r\n            usqToken.url = a.url;\r\n            usqToken.urlDebug = a.urlDebug;\r\n            usqToken.token = a.token;\r\n            resolve(usqToken);\r\n        }\r\n        usqToken.reject = reject;\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'app-api',\r\n            apiName: usq,\r\n            hash: meInFrame.hash,\r\n        }, \"*\");\r\n    });\r\n}\r\n\r\ninterface BridgeCenterApi {\r\n    id: string;\r\n    resolve: (value?:any)=>any;\r\n    reject: (reason?:any)=>void;\r\n}\r\nconst brideCenterApis:{[id:string]: BridgeCenterApi} = {};\r\nexport async function bridgeCenterApi(url:string, method:string, body:any):Promise<any> {\r\n    console.log('bridgeCenterApi: url=%s, method=%s', url, method);\r\n    return await new Promise<any>(async (resolve, reject) => {\r\n        let callId:string;\r\n        for (;;) {\r\n            callId = uid();\r\n            let bca = brideCenterApis[callId];\r\n            if (bca === undefined) {\r\n                brideCenterApis[callId] = {\r\n                    id: callId,\r\n                    resolve: resolve,\r\n                    reject: reject,\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'center-api',\r\n            callId: callId,\r\n            url: url,\r\n            method: method,\r\n            body: body\r\n        }, '*');\r\n    });\r\n}\r\n\r\nasync function callCenterApiFromMessage(from:Window, message):Promise<void> {\r\n    let {callId, url, method, body} = message;\r\n    let result = await callCenterapi.directCall(url, method, body);\r\n    from.postMessage({\r\n        type: 'center-api-return',\r\n        callId: callId,\r\n        result: result,\r\n    }, '*');\r\n}\r\n\r\nfunction bridgeCenterApiReturn(message:any) {\r\n    let {callId, result} = message;\r\n    let bca = brideCenterApis[callId];\r\n    if (bca === undefined) return;\r\n    brideCenterApis[callId] = undefined;\r\n    bca.resolve(result);\r\n}\r\n","\r\nlet subAppWindow:Window;\r\nfunction postWsToSubApp(msg:any) {\r\n    if (subAppWindow === undefined) return;\r\n    subAppWindow.postMessage({\r\n        type: 'ws',\r\n        msg: msg\r\n    }, '*');\r\n}\r\n\r\nexport function setSubAppWindow(win:Window) {\r\n    subAppWindow = win;\r\n}\r\n\r\nexport function postWsToTop(msg:any) {\r\n    window.top.postMessage({\r\n        type: 'ws',\r\n        msg: msg\r\n    }, '*');\r\n}\r\n\r\nexport abstract class WsBase {\r\n    wsBaseId:string;\r\n    private handlerSeed = 1;\r\n    private anyHandlers:{[id:number]:(msg:any)=>Promise<void>} = {};\r\n    private msgHandlers:{[id:number]:{type:string, handler:(msg:any)=>Promise<void>}} = {};\r\n    onWsReceiveAny(handler:(msg:any)=>Promise<void>):number {\r\n        let seed = this.handlerSeed++;\r\n        this.anyHandlers[seed] = handler;\r\n        return seed;\r\n    }\r\n    onWsReceive(type:string, handler:(msg:any)=>Promise<void>):number {\r\n        let seed = this.handlerSeed++;\r\n        this.msgHandlers[seed] = {type:type, handler: handler};\r\n        return seed;\r\n    }\r\n    endWsReceive(handlerId:number) {\r\n        delete this.anyHandlers[handlerId];\r\n        delete this.msgHandlers[handlerId];\r\n    }\r\n    async receive(msg:any) {\r\n        let {$type} = msg;\r\n        for (let i in this.anyHandlers) {\r\n            await this.anyHandlers[i](msg);\r\n        }\r\n        for (let i in this.msgHandlers) {\r\n            let {type, handler} = this.msgHandlers[i];\r\n            if (type !== $type) continue;\r\n            await handler(msg);\r\n        }\r\n    }\r\n}\r\n\r\nlet wsBaseSeed = 1;\r\nexport class WsBridge extends WsBase {\r\n    wsBaseId:string = 'WsBridge seed ' + wsBaseSeed++;\r\n}\r\n\r\nexport const wsBridge = new WsBridge();\r\n\r\nexport class WSChannel extends WsBase {\r\n    wsBaseId:string = 'WSChannel seed ' + wsBaseSeed++;\r\n    static centerToken:string;\r\n    private wsHost: string;\r\n    private token: string;\r\n    private ws: WebSocket;\r\n\r\n    constructor(wsHost: string, token: string) {\r\n        super();\r\n        this.wsHost = wsHost;\r\n        this.token = token;\r\n    }\r\n\r\n    static setCenterToken(token?: string) {\r\n        WSChannel.centerToken = token;\r\n    }\r\n    \r\n    connect():Promise<void> {\r\n        //this.wsHost = wsHost;\r\n        //this.token = token || WSChannel.centerToken;\r\n        if (this.ws !== undefined) return;\r\n        let that = this;\r\n        return new Promise((resolve, reject) => {\r\n            let ws = new WebSocket(this.wsHost, this.token || WSChannel.centerToken);\r\n            console.log('connect webSocket %s', this.wsHost);\r\n            ws.onopen = (ev) => {\r\n                console.log('webSocket connected %s', this.wsHost);\r\n                that.ws = ws;\r\n                resolve();\r\n            };\r\n            ws.onerror = (ev) => {\r\n                reject('webSocket can\\'t open!');\r\n            };\r\n            ws.onmessage = async (msg) => await that.wsMessage(msg);\r\n            ws.onclose = (ev) => {\r\n                that.ws = undefined;\r\n                console.log('webSocket closed!');\r\n            }\r\n        });\r\n    }\r\n    close() {\r\n        if (this.ws !== undefined) {\r\n            this.ws.close();\r\n            this.ws = undefined;\r\n        }\r\n    }\r\n    private async wsMessage(event:any):Promise<void> {\r\n        try {\r\n            console.log('websocket message: %s', event.data);\r\n            let msg = JSON.parse(event.data);\r\n            postWsToSubApp(msg);\r\n            await this.receive(msg);\r\n        }\r\n        catch (err) {\r\n            console.log('ws msg error: ', err);\r\n        }\r\n    }\r\n    sendWs(msg:any) {\r\n        let netThis = this;\r\n        this.connect().then(() => {\r\n            netThis.ws.send(msg);\r\n        });\r\n    }\r\n}\r\n","export {WSChannel, wsBridge, postWsToTop} from './wsChannel';\r\nexport * from './apiBase';\r\nexport * from './usqApi';\r\nexport {meInFrame, loadAppUsqs, isBridged} from './appBridge';\r\nexport * from './debugHost';\r\nexport {httpGet} from './httpChannel';\r\n","import {nav} from '../ui/nav';\r\nimport {FetchError} from '../fetchError';\r\n\r\nexport interface HttpChannelUI {\r\n    startWait():void;\r\n    endWait():void;\r\n    showError(error:FetchError):Promise<void>;\r\n}\r\n\r\nexport class HttpChannelNavUI implements HttpChannelUI {\r\n    startWait() {\r\n        nav.startWait();\r\n    }\r\n    endWait() {\r\n        nav.endWait();\r\n    }\r\n    async showError(error:FetchError):Promise<void> {\r\n        nav.endWait();\r\n        /*\r\n        if (error.name === 'SyntaxError') {\r\n            error = {\r\n                name: error.name,\r\n                message: error.message,\r\n            }\r\n        }*/\r\n        await nav.onError(error);\r\n    }\r\n}\r\n\r\n","import * as _ from 'lodash';\r\nimport {HttpChannel} from './httpChannel';\r\nimport {HttpChannelUI, HttpChannelNavUI} from './httpChannelUI';\r\nimport {appUsq} from './appBridge';\r\nimport {ApiBase, getUrlOrDebug} from './apiBase';\r\n\r\nlet channelUIs:{[name:string]: HttpChannel} = {};\r\nlet channelNoUIs:{[name:string]: HttpChannel} = {};\r\n\r\nexport function logoutApis() {\r\n    channelUIs = {};\r\n    channelNoUIs = {};\r\n    logoutUnitxApis();\r\n}\r\n\r\nexport class UsqApi extends ApiBase {\r\n    private access:string[];\r\n    usqOwner: string;\r\n    usqName: string;\r\n    usq: string;\r\n\r\n    constructor(basePath: string, usqOwner, usqName: string, access:string[], showWaiting?: boolean) {\r\n        super(basePath, showWaiting);\r\n        if (usqName) {\r\n            this.usqOwner = usqOwner;\r\n            this.usqName = usqName;\r\n            this.usq = usqOwner + '/' + usqName;\r\n        }\r\n        this.access = access;\r\n        this.showWaiting = showWaiting;\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        let channels: {[name:string]: HttpChannel};\r\n        let channelUI: HttpChannelNavUI;\r\n        if (this.showWaiting === true || this.showWaiting === undefined) {\r\n            channels = channelUIs;\r\n            channelUI = new HttpChannelNavUI();\r\n        }\r\n        else {\r\n            channels = channelNoUIs;\r\n        }\r\n        let channel = channels[this.usq];\r\n        if (channel !== undefined) return channel;\r\n        let usqToken = await appUsq(this.usq, this.usqOwner, this.usqName);\r\n        this.token = usqToken.token;\r\n        channel = new HttpChannel(false, usqToken.url, usqToken.token, channelUI);\r\n        return channels[this.usq] = channel;\r\n    }\r\n\r\n\r\n    async update():Promise<string> {\r\n        return await this.get('update');\r\n    }\r\n\r\n    async loadAccess():Promise<any> {\r\n        let acc = this.access === undefined?\r\n            '' :\r\n            this.access.join('|');\r\n        return await this.get('access', {acc:acc});\r\n    }\r\n\r\n    async loadEntities():Promise<any> {\r\n        return await this.get('entities');\r\n    }\r\n\r\n    async schema(name:string):Promise<any> {\r\n        return await this.get('schema/' + name);\r\n    }\r\n\r\n    async schemas(names:string[]):Promise<any[]> {\r\n        return await this.post('schema', names);\r\n    }\r\n\r\n    async tuidGet(name:string, id:number):Promise<any> {\r\n        return await this.get('tuid/' + name + '/' + id);\r\n    }\r\n\r\n    async tuidGetAll(name:string):Promise<any[]> {\r\n        return await this.get('tuid-all/' + name + '/');\r\n    }\r\n\r\n    async tuidSave(name:string, params):Promise<any> {\r\n        return await this.post('tuid/' + name, params);\r\n    }\r\n\r\n    async tuidSearch(name:string, arr:string, owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let ret = await this.post('tuids/' + name, {\r\n            arr: arr,\r\n            owner: owner,\r\n            key: key,\r\n            pageStart: pageStart,\r\n            pageSize: pageSize\r\n        });\r\n        return ret;\r\n    }\r\n    async tuidArrGet(name:string, arr:string, owner:number, id:number):Promise<any> {\r\n        return await this.get('tuid-arr/' + name + '/' + owner + '/' + arr + '/' + id);\r\n    }\r\n    async tuidArrGetAll(name:string, arr:string, owner:number):Promise<any[]> {\r\n        return await this.get('tuid-arr-all/' + name + '/' + owner + '/' + arr + '/');\r\n    }\r\n    async tuidArrSave(name:string, arr:string, owner:number, params):Promise<any> {\r\n        return await this.post('tuid-arr/' + name + '/' + owner + '/' + arr + '/', params);\r\n    }\r\n    async tuidArrPos(name:string, arr:string, owner:number, id:number, order:number):Promise<any> {\r\n        return await this.post('tuid-arr-pos/' + name + '/' + owner + '/' + arr + '/', {\r\n            id: id,\r\n            $order: order\r\n        });\r\n    }\r\n\r\n    async tuidIds(name:string, arr:string, ids:number[]):Promise<any[]> {\r\n        try {\r\n            let url = 'tuidids/' + name + '/';\r\n            if (arr !== undefined) url += arr;\r\n            else url += '$';\r\n            let ret = await this.post(url, ids);\r\n            return ret;\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    async proxied(name:string, proxy:string, id:number):Promise<any> {\r\n        try {\r\n            let url = 'tuid-proxy/' + name + '/' + proxy + '/' + id;\r\n            let ret = await this.get(url);\r\n            return ret;\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    async sheetSave(name:string, data:object):Promise<any> {\r\n        return await this.post('sheet/' + name, data);\r\n    }\r\n\r\n    async sheetAction(name:string, data:object) {\r\n        return await this.put('sheet/' + name, data);\r\n    }\r\n\r\n    async stateSheets(name:string, data:object) {\r\n        return await this.post('sheet/' + name + '/states', data);\r\n    }\r\n\r\n    async stateSheetCount(name:string):Promise<any> {\r\n        return await this.get('sheet/' + name + '/statecount');\r\n    }\r\n\r\n    async getSheet(name:string, id:number):Promise<any> {\r\n        return await this.get('sheet/' + name + '/get/' + id);\r\n    }\r\n\r\n    async sheetArchives(name:string, data:object):Promise<any> {\r\n        return await this.post('sheet/' + name + '/archives', data);\r\n    }\r\n\r\n    async sheetArchive(name:string, id:number):Promise<any> {\r\n        return await this.get('sheet/' + name + '/archive/' + id);\r\n    }\r\n\r\n    async action(name:string, data:object):Promise<any> {\r\n        return await this.post('action/' + name, data);\r\n    }\r\n\r\n    async page(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p:any;\r\n        switch (typeof params) {\r\n            case 'undefined': p = {key: ''}; break;\r\n            default: p = _.clone(params); break;\r\n        }\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        return await this.post('query-page/' + name, p);\r\n    }\r\n\r\n    async query(name:string, params:any):Promise<any> {\r\n        let ret = await this.post('query/' + name, params);\r\n        return ret;\r\n    }\r\n/*\r\n    async history(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p = _.clone(params);\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        let ret = await this.post('history/' + name, p);\r\n        return ret;\r\n    }\r\n\r\n    async book(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p = _.clone(params);\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        let ret = await this.post('history/' + name, p);\r\n        return ret;\r\n    }\r\n*/\r\n    async user():Promise<any> {\r\n        return await this.get('user');\r\n    }\r\n}\r\n\r\nlet channels:{[unitId:number]: HttpChannel} = {};\r\n\r\nexport function logoutUnitxApis() {\r\n    channels = {};\r\n}\r\n\r\nexport class UnitxApi extends UsqApi {\r\n    private unitId:number;\r\n    constructor(unitId:number) {\r\n        super('tv/', undefined, undefined, undefined, true);\r\n        this.unitId = unitId;\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        let channel = channels[this.unitId];\r\n        if (channel !== undefined) return channel;\r\n        return channels[this.unitId] = await this.buildChannel();\r\n    }\r\n\r\n    private async buildChannel():Promise<HttpChannel> {\r\n        let channelUI = new HttpChannelNavUI();\r\n        let centerAppApi = new CenterAppApi('tv/', undefined);\r\n        let ret = await centerAppApi.unitxUsq(this.unitId);\r\n        let {token, url, urlDebug} = ret;\r\n        let realUrl = await getUrlOrDebug(url, urlDebug);\r\n        this.token = token;\r\n        return new HttpChannel(false, realUrl, token, channelUI);\r\n    }\r\n}\r\n\r\nlet centerHost:string;\r\n\r\nexport function setCenterUrl(url:string) {\r\n    console.log('setCenterUrl %s', url);\r\n    centerHost = url;\r\n    centerToken = undefined;\r\n    centerChannel = undefined;\r\n    centerChannelUI = undefined;\r\n}\r\n\r\nexport function getCenterUrl():string {\r\n    return centerHost;\r\n}\r\n\r\nexport let centerToken:string|undefined = undefined;\r\n\r\nexport function setCenterToken(t?:string) {\r\n    centerToken = t;\r\n    console.log('setCenterToken %s', t);\r\n    centerChannel = undefined;\r\n    centerChannelUI = undefined;\r\n}\r\n\r\nlet centerChannelUI:HttpChannel;\r\nlet centerChannel:HttpChannel;\r\nfunction getCenterChannelUI():HttpChannel {\r\n    if (centerChannelUI !== undefined) return centerChannelUI;\r\n    return centerChannelUI = new HttpChannel(true, centerHost, centerToken, new HttpChannelNavUI());\r\n}\r\nfunction getCenterChannel():HttpChannel {\r\n    if (centerChannel !== undefined) return centerChannel;\r\n    return centerChannel = new HttpChannel(true, centerHost, centerToken);\r\n}\r\n\r\nexport abstract class CenterApi extends ApiBase {\r\n    constructor(path: string, showWaiting?: boolean) {\r\n        super(path, showWaiting);\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        return (this.showWaiting === true || this.showWaiting === undefined)?\r\n            getCenterChannelUI():\r\n            getCenterChannel();\r\n    }\r\n}\r\n\r\nexport class UsqTokenApi extends CenterApi {\r\n    async usq(params: {unit:number, usqOwner:string, usqName:string}):Promise<any> {\r\n        return await this.get('app-usq', params);\r\n    }\r\n}\r\n\r\nexport const usqTokenApi = new UsqTokenApi('tv/tie/', undefined);\r\n\r\nexport class CallCenterApi extends CenterApi {\r\n    directCall(url:string, method:string, body:any):Promise<any> {\r\n        return this.call(url, method, body);\r\n    }\r\n}\r\nexport const callCenterapi = new CallCenterApi('', undefined);\r\n\r\nexport interface App {\r\n    id: number;\r\n    usqs: AppUsq[];\r\n}\r\n\r\nexport interface AppUsq {\r\n    id: number;\r\n    usqOwner: string;\r\n    usqName: string;\r\n    url: string;\r\n    urlDebug: string;\r\n    ws: string;\r\n    wsDebug: string;\r\n    access: string;\r\n    token: string;\r\n}\r\nconsole.log('CenterApi');\r\nconsole.log(CenterApi);\r\nexport class CenterAppApi extends CenterApi {\r\n    async usqs(unit:number, appOwner:string, appName:string):Promise<App> {\r\n        return await this.get('tie/app-usqs', {unit:unit, appOwner:appOwner, appName:appName});\r\n    }\r\n    async unitxUsq(unit:number):Promise<AppUsq> {\r\n        return await this.get('tie/unitx-usq', {unit:unit});\r\n    }\r\n}\r\n","const ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\nconst ID_LENGTH = 8;\r\n\r\nexport function uid():string {\r\n    let len = ALPHABET.length;\r\n    let rtn = '';\r\n    for (let i = 0; i < ID_LENGTH; i++) {\r\n        rtn += ALPHABET.charAt(Math.floor(Math.random() * len));\r\n    }\r\n    return rtn;\r\n}\r\n","import {isDevelopment} from '../local';\r\nimport {HttpChannel} from './httpChannel';\r\nimport {centerDebugHost, usqDebugHost, debugUsqlServer} from './debugHost';\r\nimport {fetchLocalCheck} from './fetchLocalCheck';\r\n\r\nexport async function refetchApi(channel:HttpChannel, url, options, resolve, reject) {\r\n    await channel.fetch(url, options, resolve, reject);\r\n}\r\n\r\nexport abstract class ApiBase {\r\n    protected token: string;\r\n    protected path: string;\r\n    protected showWaiting: boolean;\r\n\r\n    constructor(path: string, showWaiting: boolean) {\r\n        this.path = path || '';\r\n        this.showWaiting = showWaiting;\r\n    }\r\n\r\n    protected abstract async getHttpChannel(): Promise<HttpChannel>;\r\n\r\n    public async call(url:string, method:string, body:any):Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.callFetch(url, method, body);\r\n    }\r\n\r\n    public async get(path:string, params:any=undefined): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.get(this.path + path, params);\r\n    }\r\n\r\n    public async post(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.post(this.path + path, params);\r\n    }\r\n\r\n    public async put(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.put(this.path + path, params);\r\n    }\r\n\r\n    public async delete(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.delete(this.path + path, params);\r\n    }\r\n}\r\n\r\nfunction replaceUrlHost(url:string, hostString:string, defaultHost:string, envHost:string) {\r\n    //let hostString = '://centerhost:';\r\n    let pos = url.indexOf(hostString);\r\n    if (pos > 0) {\r\n        let host = process.env[envHost] || defaultHost;\r\n        url = url.replace(hostString, '://' + host + '/');\r\n    }\r\n    return url;\r\n}\r\n\r\nexport async function getUrlOrDebug(url:string, urlDebug:string, path:string = 'hello'):Promise<string> {\r\n    if (isDevelopment !== true) return url;\r\n    if (!urlDebug) return url;\r\n    try {\r\n        let orgDebug = urlDebug;\r\n        if (urlDebug.endsWith('/') === false) urlDebug += '/';\r\n        urlDebug = replaceUrlHost(urlDebug, '://centerhost/', centerDebugHost, 'REACT_APP_CENTER_DEBUG_HOST');\r\n        urlDebug = replaceUrlHost(urlDebug, '://usqhost/', usqDebugHost, 'REACT_APP_USQ_DEBUG_HOST');\r\n        urlDebug = replaceUrlHost(urlDebug, '://unitxhost/', usqDebugHost, 'REACT_APP_USQ_DEBUG_HOST');        \r\n        urlDebug = replaceUrlHost(urlDebug, '://usql-server/', debugUsqlServer, 'REACT_APP_DEBUG_USQL_SERVER');\r\n\r\n        if (path === undefined) path = '';\r\n        let fetchUrl = urlDebug + path;\r\n        console.log('urlDebug: ' + orgDebug + ' ---- ' + urlDebug + ' === ' + fetchUrl);\r\n        let fetchOptions = {\r\n            method: \"GET\",\r\n            mode: \"no-cors\", // no-cors, cors, *same-origin\r\n            headers: {\r\n                \"Content-Type\": \"text/plain\"\r\n            },\r\n        };\r\n        let ret = await fetchLocalCheck(fetchUrl, fetchOptions);\r\n        let text = await ret.text();\r\n        return urlDebug;\r\n    }\r\n    catch (error) {\r\n        console.log('cannot connect %s, so use %s', urlDebug, url);\r\n        console.error(error);\r\n        return url;\r\n    }\r\n}\r\n","import {User} from './user';\r\n\r\nexport const isDevelopment = process.env.NODE_ENV === 'development';\r\n\r\nexport interface ClearableData {\r\n    clear(): void;\r\n}\r\n\r\nexport class Data<T> implements ClearableData {\r\n    private name: string;\r\n    private value?: T;\r\n    constructor(name: string) {this.name = name; }\r\n    get(): T {\r\n        if (this.value !== undefined) return this.value;\r\n        let v = localStorage.getItem(this.name);\r\n        return this.value = v === null ? undefined : JSON.parse(v); \r\n    }\r\n    set(value: T) {\r\n        if (!value) { this.clear(); return; }\r\n        this.value = value;\r\n        localStorage.setItem(this.name, JSON.stringify(value));\r\n    }\r\n    clear() {\r\n        this.value = undefined;\r\n        localStorage.removeItem(this.name);\r\n    }\r\n}\r\n\r\nexport class LocalData {\r\n    user = new Data<User>('user');\r\n    device = new Data<string>('device');\r\n    homeTabCur = new Data<number>('homeTabCur');\r\n\r\n    logoutClear() {\r\n        [\r\n            this.user, \r\n            this.homeTabCur\r\n        ].map(d => d.clear());\r\n    }\r\n}\r\n","export * from './nav';\r\nexport * from './titleBar';\r\nexport * from './page';\r\n//export * from './listView';\r\n//export * from './listRow';\r\nexport * from './rowIcon';\r\nexport * from './row';\r\n//export * from './dropdownActions';\r\n//export * from './validForm';\r\nexport * from './VM';\r\nexport * from './form';\r\nexport * from './res';\r\nexport * from './tabs';\r\nexport * from './loading';","export const centerDebugHost = 'localhost:3000'; //'192.168.86.64';\r\nexport const usqDebugHost = 'localhost:3015'; //'192.168.86.63';\r\nexport const debugUsqlServer = 'localhost:3009';\r\n\r\n","import {bridgeCenterApi, isBridged} from './appBridge';\r\nimport {FetchError} from '../fetchError';\r\nimport {HttpChannelUI} from './httpChannelUI';\r\nimport {nav} from '../ui/nav';\r\nimport { isDevelopment } from '../local';\r\n\r\nexport async function httpGet(url:string, params?:any):Promise<any> {\r\n    let channel = new HttpChannel(false, url, undefined, undefined);\r\n    let ret = await channel.get('', params);\r\n    return ret;\r\n}\r\n\r\nexport async function httpPost(url:string, params?:any):Promise<any> {\r\n    let channel = new HttpChannel(false, url, undefined, undefined);\r\n    let ret = await channel.post('', params);\r\n    return ret;\r\n}\r\n\r\nexport class HttpChannel {\r\n    private isCenter: boolean;\r\n    private hostUrl: string;\r\n    private apiToken: string;\r\n    private ui?: HttpChannelUI;\r\n    private timeout: number;\r\n\r\n    constructor(isCenter: boolean, hostUrl: string, apiToken:string, ui?: HttpChannelUI) {\r\n        this.isCenter = isCenter;\r\n        this.hostUrl = hostUrl;\r\n        this.apiToken = apiToken;\r\n        this.ui = ui;\r\n        this.timeout = isDevelopment === true? 500000:5000;\r\n    }\r\n\r\n    private startWait = () => {\r\n        if (this.ui !== undefined) this.ui.startWait();\r\n    }\r\n\r\n    private endWait = (url?:string, reject?:(reason?:any)=>void) => {\r\n        if (this.ui !== undefined) this.ui.endWait();\r\n        if (reject !== undefined) reject('访问webapi超时 ' + url);\r\n    }\r\n\r\n    private showError = async (error:FetchError) => {\r\n        if (this.ui !== undefined) await this.ui.showError(error);\r\n    }\r\n\r\n    used() {\r\n        this.post('', {});\r\n    }\r\n\r\n    async get(url: string, params: any = undefined): Promise<any> {\r\n        if (params) {\r\n            let keys = Object.keys(params);\r\n            if (keys.length > 0) {\r\n                let c = '?';\r\n                for (let k of keys) {\r\n                    let v = params[k];\r\n                    if (v === undefined) continue;\r\n                    url += c + k + '=' + params[k];\r\n                    c = '&';\r\n                }\r\n            }\r\n        }\r\n        let options = this.buildOptions();\r\n        options.method = 'GET';\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async post(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'POST';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async put(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'PUT';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async delete(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'DELETE';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n    async fetch(url: string, options: any, resolve:(value?:any)=>any, reject:(reason?:any)=>void):Promise<void> {\r\n        let that = this;\r\n        this.startWait();\r\n        let path = url;\r\n        function buildError(err: string) {\r\n            return {\r\n                channel: that,\r\n                url: path,\r\n                options: options,\r\n                resolve: resolve,\r\n                reject: reject,\r\n                error: err,\r\n            }\r\n        }\r\n        try {\r\n            console.log('%s %s', options.method, path);\r\n            let timeOutHandler = setTimeout(() => that.endWait(url, reject), this.timeout);\r\n            let res = await fetch(encodeURI(path), options);\r\n            if (res.ok === false) {\r\n                clearTimeout(timeOutHandler);\r\n                that.endWait();\r\n                console.log('call error %s', res.statusText);\r\n                throw res.statusText;\r\n            }\r\n            let ct = res.headers.get('content-type');\r\n            if (ct && ct.indexOf('json')>=0) {\r\n                return res.json().then(async retJson => {\r\n                    clearTimeout(timeOutHandler);\r\n                    that.endWait();\r\n                    if (retJson.ok === true) {\r\n                        return resolve(retJson.res);\r\n                    }\r\n                    if (retJson.error === undefined) {\r\n                        await that.showError(buildError('not valid tonva json'));\r\n                    }\r\n                    else {\r\n                        await that.showError(buildError(retJson.error));\r\n                        reject(retJson.error);\r\n                    }\r\n                    //throw retJson.error;\r\n                }).catch(async error => {\r\n                    await that.showError(buildError(error.message));\r\n                });\r\n            }\r\n            else {\r\n                let text = await res.text();\r\n                clearTimeout(timeOutHandler);\r\n                that.endWait();\r\n                resolve(text);\r\n            }\r\n        }\r\n        catch(error) {\r\n            if (typeof error === 'string') {\r\n                if (error.toLowerCase().startsWith('unauthorized') === true) {\r\n                    nav.logout();\r\n                    return;\r\n                }\r\n            }\r\n            await this.showError(buildError(error.message));\r\n        };\r\n    }\r\n\r\n    private async innerFetch(url: string, options: any): Promise<any> {\r\n        let u = this.hostUrl + url;\r\n        if (this.isCenter === true && this.apiToken === undefined && isBridged())\r\n            return await bridgeCenterApi(u, options.method, options.body);\r\n        return await new Promise<any>(async (resolve, reject) => {\r\n            await this.fetch(u, options, resolve, reject);\r\n        });\r\n    }\r\n\r\n    async callFetch(url:string, method:string, body:any):Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = method;\r\n        options.body = body;\r\n        return await new Promise<any>(async (resolve, reject) => {\r\n            await this.fetch(url, options, resolve, reject);\r\n        });\r\n    }\r\n\r\n    private buildOptions(): any {\r\n        let {language, culture} = nav;\r\n        let headers = new Headers();\r\n        //headers.append('Access-Control-Allow-Origin', '*');\r\n        headers.append('Content-Type', 'application/json;charset=UTF-8');\r\n        let lang = language;\r\n        if (culture) lang += '-' + culture;\r\n        headers.append('Accept-Language', lang);\r\n        if (this.apiToken) { \r\n            headers.append('Authorization', this.apiToken); \r\n        }\r\n        let options = {\r\n            headers: headers,\r\n            // cache: 'no-cache',\r\n        };\r\n        return options;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {IComputedValue} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash';\r\nimport {TitleBar} from './titleBar';\r\n\r\nexport interface ScrollProps {\r\n    onScroll?: (e:any) => void;\r\n    onScrollTop?: () => void;\r\n    onScrollBottom?: () => void;\r\n}\r\ninterface ScrollViewProps extends ScrollProps {\r\n    className?: string;\r\n}\r\nconst scrollTimeGap = 100;\r\nclass ScrollView extends React.Component<ScrollViewProps, null> {\r\n    private bottomTime:number = 0;\r\n    private topTime:number = 0;\r\n\r\n    private onScroll = async (e) => {\r\n        let {onScroll, onScrollTop, onScrollBottom} = this.props;\r\n        if (onScroll) this.props.onScroll(e);\r\n        let el = e.target as HTMLBaseElement;\r\n        if (el.scrollTop < 30) {\r\n            //this.eachChild(this, 'top');\r\n            if (onScrollTop !== undefined) {\r\n                let topTime = new Date().getTime();\r\n                if (topTime-this.topTime > scrollTimeGap) {\r\n                    this.topTime = topTime;\r\n                    onScrollTop();\r\n                }\r\n            }\r\n        }\r\n        if (el.scrollTop + el.offsetHeight > el.scrollHeight - 30) {\r\n            //this.eachChild(this, 'bottom');\r\n            if (onScrollBottom !== undefined) {\r\n                let bottomTime = new Date().getTime();\r\n                if (bottomTime - this.bottomTime > scrollTimeGap) {\r\n                    this.bottomTime = bottomTime;\r\n                    onScrollBottom();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private eachChild(c:any, direct:'top'|'bottom') {\r\n        let { props } = c;\r\n        if (props === undefined)\r\n            return;\r\n        let { children } = props;\r\n        if (children === undefined)\r\n            return;\r\n        React.Children.forEach(children, (child, index) => {\r\n            let {_$scroll} = child as any;\r\n            if (_$scroll) _$scroll(direct);\r\n            console.log(child.toString());\r\n            this.eachChild(child, direct);\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <main className={this.props.className} onScroll={this.onScroll}>\r\n                {this.props.children}\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport interface Tab extends ScrollProps {\r\n    title: string;\r\n    icon?: string;\r\n    content?: JSX.Element | (()=>JSX.Element);\r\n    header?: string;\r\n    isSelected?: boolean;\r\n    redDot?: IComputedValue<number>;\r\n    load?: () => Promise<void>;\r\n}\r\nexport interface TabState extends Tab {\r\n    isMounted?: boolean;\r\n}\r\nexport interface PageProps extends ScrollProps {\r\n    back?: 'close' | 'back' | 'none';\r\n    header?: boolean | string | JSX.Element;\r\n    keepHeader?: boolean;\r\n    right?: JSX.Element;\r\n    footer?: JSX.Element;\r\n    tabs?: Tab[];\r\n    logout?: boolean | (()=>void);\r\n}\r\nexport interface PageState {\r\n    cur?: Tab;\r\n    tabs?: TabState[];\r\n}\r\n\r\n@observer\r\nexport class Page extends React.Component<PageProps, PageState> {\r\n    private tabs:TabState[];\r\n    constructor(props: PageProps) {\r\n        super(props);\r\n        let {tabs} = props;\r\n        if (tabs === undefined || tabs.length === 0) return;\r\n        this.tabs = tabs;\r\n        let cur:Tab;\r\n        let tabStates:Tab[] = [];\r\n        for (let tab of tabs) {\r\n            let t:TabState = _.clone(tab);\r\n            if (cur === undefined) {\r\n                if (t.isSelected === true)\r\n                    cur = t;\r\n                else\r\n                    t.isSelected = false;\r\n            }\r\n            else {\r\n                t.isSelected = false;\r\n            }\r\n            t.isMounted = false;\r\n            tabStates.push(t);\r\n        }\r\n        this.state = {\r\n            cur: cur,\r\n            tabs: tabStates,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.tabs === undefined) return;\r\n        let t0 = this.state.tabs[0];\r\n        if (t0 === undefined) return;\r\n        await this.onTabClick(t0);\r\n    }\r\n\r\n    private async onTabClick(tab: TabState) {\r\n        if (tab.isSelected === true) return;\r\n        let cur:TabState;\r\n        let tabs = this.state.tabs;\r\n        for (let t of tabs) {\r\n            if (t === tab) {\r\n                t.isSelected = true;\r\n                cur = t;\r\n            }\r\n            else\r\n                t.isSelected = false;\r\n        }\r\n        if (cur.isMounted !== true) {\r\n            let {load} = cur;\r\n            if (load !== undefined) {\r\n                await load();\r\n            }\r\n        }\r\n        this.setState({\r\n            cur: cur,\r\n            tabs: tabs\r\n        });\r\n    }\r\n\r\n    private onTouchStart(evt: React.TouchEvent<HTMLElement>) {\r\n        alert('Touch Start')\r\n    }\r\n\r\n    private renderTabs(footer: JSX.Element) {\r\n        const {header, back, right, keepHeader} = this.props;\r\n        let cur = this.state.cur;\r\n        let tabs = <div>{\r\n                this.state.tabs.map((tab, index) => {\r\n                    const {icon, isSelected, title, redDot} = tab;\r\n                    let img, redDotView, cn;\r\n                    if (icon !== undefined) img = <img src={icon} />;\r\n                    if (redDot !== undefined) {\r\n                        let v = redDot.get();\r\n                        if (v < 0) {\r\n                            cn = classNames('red-dot');\r\n                            redDotView = <u />;\r\n                        }\r\n                        else if (v > 0) {\r\n                            cn = classNames('red-dot', 'num');\r\n                            redDotView = <u>{v}</u>;\r\n                        }\r\n                    }\r\n                    return <div key={index}\r\n                        className= {classNames('va-tab', {cur: isSelected})}\r\n                        onClick={() => this.onTabClick(tab)}>\r\n                        {img}<div className={cn}>{title}{redDotView}</div>\r\n                    </div>\r\n                })\r\n            }</div>;\r\n        let titleBar;\r\n        if (header !== false) {\r\n            titleBar = <TitleBar \r\n                back={back} \r\n                center={keepHeader===true? (header as string) : (cur && (cur.header || cur.title))}\r\n                right={right} \r\n            />;\r\n        }\r\n\r\n        return <article className='page-container'>\r\n            {titleBar}\r\n            <section>\r\n            {\r\n                this.state.tabs.map((tab, index) => {\r\n                    let {isSelected, isMounted, content} = tab;\r\n                    if (isSelected === true || isMounted === true) {\r\n                        tab.isMounted = true;\r\n                        return <ScrollView key={index}\r\n                            className={classNames({invisible: isSelected===false})}\r\n                            onScroll={tab.onScroll}\r\n                            onScrollTop={tab.onScrollTop}\r\n                            onScrollBottom={tab.onScrollBottom}\r\n                        >\r\n                            {(typeof content)==='function'? (content as ()=>JSX.Element)():content}\r\n                        </ScrollView>;\r\n                    }\r\n                })\r\n            }\r\n            </section>\r\n            {tabs}\r\n            {footer}\r\n        </article>;\r\n    }\r\n    private renderSingle(footer: JSX.Element) {\r\n        const {back, header, right, onScroll, onScrollTop, onScrollBottom, children} = this.props;\r\n        let titleBar;\r\n        if (header !== false)\r\n            titleBar = <TitleBar \r\n                back={back} \r\n                center={header as any}\r\n                right={right}\r\n                logout={this.props.logout}\r\n            />;\r\n        return (\r\n            <article className='page-container' onTouchStart={this.onTouchStart}>\r\n                {titleBar}\r\n                <section>\r\n                    <ScrollView\r\n                        onScroll={onScroll}\r\n                        onScrollTop={onScrollTop}\r\n                        onScrollBottom={onScrollBottom}\r\n                    >\r\n                        {children}\r\n                    </ScrollView>\r\n                </section>\r\n                {footer}\r\n            </article>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const {footer} = this.props;\r\n        let elFooter;\r\n        if (footer !== undefined) elFooter = <footer>{footer}</footer>;\r\n        if (this.tabs !== undefined)\r\n            return this.renderTabs(elFooter);\r\n        else\r\n            return this.renderSingle(elFooter);\r\n    }\r\n}\r\n","import _ from 'lodash';\r\n\r\nexport interface KeyValueRes {\r\n    [key:string]: any;\r\n}\r\n\r\nexport interface Res<T extends KeyValueRes> {\r\n    [lang:string]: T | {[district:string]: T};\r\n}\r\n\r\nexport const resOptions:{lang:string, district:string} = {\r\n    lang: undefined,\r\n    district: undefined,\r\n}\r\n\r\nexport function setResOptions(lang:string, district:string) {\r\n    resOptions.lang = lang;\r\n    resOptions.district = district;\r\n}\r\n\r\n(function() {\r\n    let lang: string, district: string;\r\n    let language = navigator.languages && navigator.languages[0] || // Chrome / Firefox\r\n        navigator.language; // ||   // All browsers\r\n    //navigator.userLanguage; // IE <= 10\r\n    if (!language) {\r\n        lang = 'zh';\r\n        district = 'CN';\r\n    }\r\n    else {\r\n        let parts = language.split('-');\r\n        lang = parts[0];\r\n        if (parts.length > 1) district = parts[1];\r\n    }\r\n    setResOptions(lang, district);\r\n}());\r\n\r\nexport function resLang<T extends KeyValueRes>(res:Res<T>):T {\r\n    let {lang, district} = resOptions;\r\n    let ret:T = {} as T;\r\n    if (res === undefined) return ret;\r\n    _.merge(ret, res._);\r\n    let l = res[lang];\r\n    if (l === undefined) return ret;\r\n    _.merge(ret, l._);\r\n    let d = l[district];\r\n    if (d === undefined) return ret;\r\n    _.merge(ret, d);\r\n    let {entity} = ret;\r\n    if (entity !== undefined) {\r\n        for (let i in entity) {\r\n            entity[i.toLowerCase()] = entity[i];\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport {nav, mobileHeaderStyle} from './nav';\r\n\r\nexport interface TitleBarProps {\r\n    back?: 'back' | 'close' | 'none';\r\n    center: string | JSX.Element;\r\n    right?: JSX.Element;\r\n    logout?: boolean | (()=>void);\r\n}\r\nexport interface TitleBarState {\r\n    hasBack: boolean;\r\n}\r\nexport class TitleBar extends React.Component<TitleBarProps, TitleBarState> {\r\n    private navChangeHandler: ()=>void;\r\n    constructor(props) {\r\n        super(props);\r\n        this.navChange = this.navChange.bind(this);\r\n        this.state = {\r\n            hasBack: false,\r\n        };\r\n    }\r\n    navChange() {\r\n        this.setState({\r\n            hasBack: nav.level > 1\r\n        })\r\n    }\r\n    componentWillMount() {\r\n        this.navChange();\r\n        //this.navChangeHandler = nav.events.add('change', this.navChange);\r\n    }\r\n    componentWillUnmount() {\r\n        //nav.events.remove('change', this.navChangeHandler);\r\n    }\r\n    async back() {\r\n        await nav.back(); // 这个才会显示confirm box，在dataForm里面，如果输入了数据的话\r\n    }\r\n    openWindow() {\r\n        window.open(document.location.href);\r\n    }\r\n    private logoutClick = () => {\r\n        if (confirm('Really want to logout?') === false) return;\r\n        let {logout} = this.props;\r\n        if (typeof logout === 'function') {\r\n            logout(); \r\n        }\r\n        nav.logout();\r\n    }\r\n    render() {\r\n        let b = this.state.hasBack || self != top;\r\n        let {right, center, logout} = this.props;\r\n        let back, pop, debugLogout;\r\n        if (logout !== undefined && self === top) {\r\n            if (typeof logout === 'boolean' && logout === true\r\n                || typeof logout === 'function')\r\n            {\r\n                let {nick, name} = nav.user;\r\n                debugLogout = <div className=\"d-flex align-items-center\">\r\n                    <small className=\"text-light\">{nick || name}</small>\r\n                    <a className=\"dropdown-toggle btn btn-secondary btn-sm ml-2\"\r\n                        role=\"button\"\r\n                        onClick={this.logoutClick}>\r\n                        <i className=\"fa fa-sign-out\" />\r\n                    </a>\r\n                </div>;\r\n            }\r\n        }\r\n        if (b) {\r\n            switch (this.props.back) {\r\n                case 'none': back = undefined; break;\r\n                default:\r\n                case 'back': back = <nav onClick={this.back}><i className=\"fa fa-arrow-left\" /></nav>; break;\r\n                case 'close': back = <nav onClick={this.back}><i className=\"fa fa-close\" /></nav>; break;\r\n            }\r\n        }\r\n        if (self != top) {\r\n            console.log(document.location.href);\r\n            pop = <header onClick={this.openWindow} />;\r\n        }\r\n        let rightView;\r\n        if (right || debugLogout) rightView = <aside>{right} {debugLogout}</aside>;\r\n        return (\r\n        <header style={mobileHeaderStyle}>\r\n            {pop}\r\n            {back}\r\n            <div>{center}</div>\r\n            {rightView}\r\n        </header>\r\n        );\r\n    }\r\n}\r\n","import * as React from 'react';\r\n\r\nexport function Loading() {\r\n    return <div style={{height:'100%'}} className=\"d-flex flex-fill align-items-center justify-content-center\">\r\n    <div className=\"d-flex align-items-center justify-content-center slide text-info\" style={{width:'5em', height:'2em'}}>\r\n        加载中...\r\n    </div>\r\n    </div>\r\n}\r\n","import _ from 'lodash';\r\nimport { Context } from '../context';\r\nimport { FormRes } from '../formRes';\r\n\r\nexport abstract class Rule {\r\n    abstract check(defy:string[], value:any):void;\r\n}\r\n\r\nexport type ContextRule = (context:Context)=>{[target:string]:string[]|string} | string[] | string;\r\nexport type FieldRule = (value:any) => string[] | string;\r\n\r\nexport class RuleCustom extends Rule {\r\n    private func: FieldRule;\r\n    constructor(func: FieldRule) {\r\n        super();\r\n        this.func = func;\r\n    }\r\n    check(defy:string[], value:any) {\r\n        let ret = this.func(value);\r\n        if (ret === undefined) return;\r\n        switch (typeof ret) {\r\n            case 'undefined': return;\r\n            case 'string': defy.push(ret); return;\r\n            default: defy.push(...ret); return;\r\n        }        \r\n    }\r\n}\r\n\r\nexport abstract class RulePredefined extends Rule {\r\n    protected res: FormRes;\r\n    constructor(res: FormRes) {\r\n        super();\r\n        this.res = res;\r\n    }\r\n}\r\n\r\nexport class RuleRequired extends RulePredefined {\r\n    check(defy:string[], value:any) {\r\n        switch (typeof value) {\r\n            default:\r\n            case 'boolean': return;\r\n            case 'object':\r\n                if (value !== null) return;\r\n                break;\r\n            case 'string':\r\n                if ((value as string).trim().length > 0) return;\r\n                break;\r\n            case 'number':\r\n                if ((value as number) !== NaN) return;\r\n                break;\r\n            case 'undefined':\r\n                break;\r\n        }\r\n        defy.push(this.res.required);\r\n    }\r\n}\r\n\r\nexport class RuleNum extends RulePredefined {\r\n    private minMsg: _.TemplateExecutor;\r\n    private maxMsg: _.TemplateExecutor;\r\n    protected min: number;\r\n    protected max: number\r\n    constructor(res: FormRes, min?: number, max?: number) {\r\n        super(res);\r\n        this.minMsg = _.template(res.min);\r\n        this.maxMsg = _.template(res.max);\r\n        this.min = min;\r\n        this.max = max;\r\n    }\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (n === NaN) {\r\n            defy.push(this.res.number);\r\n        }\r\n        else {\r\n            this.checkMore(defy, n);\r\n        }\r\n    }\r\n\r\n    protected checkMore(defy:string[], value: number) {\r\n        if (this.min !== undefined && Number(value) < this.min) {\r\n            defy.push(this.minMsg({min:this.min}));\r\n        }\r\n        if (this.max !== undefined && Number(value) > this.max) {\r\n            defy.push(this.maxMsg({max:this.max}));\r\n        }\r\n    }\r\n}\r\n\r\nexport class RuleInt extends RuleNum {\r\n    protected checkMore(defy:string[], n: number) {\r\n        super.checkMore(defy, n);\r\n        if (Number.isInteger(n) === false) {\r\n            defy.push(this.res.integer);\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { UiItem, ChangingHandler, ChangedHandler } from '../uiSchema';\r\nimport { FieldProps } from '../field';\r\nimport { Context } from '../context';\r\nimport { ItemSchema } from '../schema';\r\nimport { Rule, RuleRequired, RuleCustom, FieldRule } from '../rules';\r\nimport { computed, observable, reaction } from 'mobx';\r\n\r\nexport abstract class Widget {\r\n    protected name: string;\r\n    protected context: Context;\r\n    protected fieldProps:FieldProps;\r\n    protected children: React.ReactNode;\r\n    protected itemSchema: ItemSchema;\r\n    protected ui: UiItem;\r\n    protected defaultValue: any;\r\n    protected value: any;\r\n    protected rules: Rule[];\r\n    @observable protected errors: string[] = [];\r\n    @observable protected contextErrors: string[] = [];\r\n    @computed protected get hasError():boolean {return (this.errors.length + this.contextErrors.length)>0}\r\n    protected readOnly:boolean;\r\n    protected disabled:boolean;\r\n    @observable visible:boolean;\r\n\r\n    constructor(context:Context, itemSchema:ItemSchema, fieldProps:FieldProps, children: React.ReactNode) {\r\n        this.context = context;\r\n        let {name} = itemSchema;\r\n        this.name = name;\r\n        this.itemSchema = itemSchema;\r\n        this.fieldProps = fieldProps;\r\n        this.children = children;\r\n        this.ui = context.getUiItem(name);\r\n        if (this.ui === undefined) {\r\n            this.readOnly = false;\r\n            this.disabled = false;\r\n            this.visible = true;\r\n        }\r\n        else {\r\n            let {readOnly, disabled, visible} = this.ui;\r\n            this.readOnly = (readOnly === true);\r\n            this.disabled = (disabled === true);\r\n            this.visible = !(visible === false);            \r\n        }\r\n        this.value = this.defaultValue =  context.getValue(name); //defaultValue;\r\n        this.init();\r\n    }\r\n\r\n    protected init() {\r\n        this.rules = [];\r\n        if (this.itemSchema.required === true) {\r\n            this.rules.push(new RuleRequired(this.context.form.res));\r\n        }\r\n        this.buildRules();\r\n        if (this.ui === undefined) return;\r\n        let {rules} = this.ui;\r\n        if (rules === undefined) return;\r\n        if (Array.isArray(rules) === false) {\r\n            this.rules.push(new RuleCustom(rules as FieldRule));\r\n            return;\r\n        }\r\n        for (let rule of rules as FieldRule[]) {\r\n            this.rules.push(new RuleCustom(rule));\r\n        }\r\n    }\r\n\r\n    protected buildRules() {\r\n    }\r\n\r\n    checkRules() {\r\n        let defy:string[] = [];\r\n        for (let r of this.rules) r.check(defy, this.value);\r\n        if (defy.length === 0) {\r\n            this.context.removeErrorWidget(this);\r\n        }\r\n        else {\r\n            this.context.addErrorWidget(this);\r\n            this.errors.push(...defy);\r\n        }\r\n    }\r\n\r\n    @computed get isOk() {\r\n        return this.errors.length ===0;\r\n    }\r\n\r\n    setError(err:string | string[]) {\r\n        if (err === undefined) return;\r\n        if (typeof err === 'string') this.errors.push(err);\r\n        else this.errors.push(...err);\r\n    }\r\n\r\n    setContextError(err:string | string[]) {\r\n        if (err === undefined) return;\r\n        if (typeof err === 'string') this.contextErrors.push(err);\r\n        else this.contextErrors.push(...err);\r\n    }\r\n\r\n    clearError() {\r\n        this.errors.splice(0);\r\n    }\r\n\r\n    clearContextError() {\r\n        this.contextErrors.splice(0);\r\n    }\r\n\r\n    protected parse(value:any):any {return value}\r\n\r\n    protected setElementValue(value:any) {}\r\n    protected setDataValue(value:any) {\r\n        if (this.isChanging === true) return;\r\n        this.context.data[this.name] = this.value = this.parse(value);\r\n    }\r\n\r\n    setValue(value:any) {\r\n        if (this.isChanging === true) return;\r\n        this.setDataValue(value);\r\n        this.setElementValue(value);\r\n    }\r\n\r\n    getValue() {\r\n        return this.context.getValue(this.name);\r\n    }\r\n\r\n    getReadOnly():boolean {return this.readOnly}\r\n    getDisabled():boolean {return this.disabled}\r\n    getVisible():boolean {return this.visible}\r\n    setReadOnly(value:boolean) {this.readOnly = value}\r\n    setDisabled(value:boolean) {this.disabled = value}\r\n    setVisible(value:boolean) {this.visible = value}\r\n\r\n    private isChanging: boolean;\r\n    protected onChange = (evt: React.ChangeEvent<any>) => {\r\n        let prev = this.value;\r\n        let onChanging: ChangingHandler;\r\n        let onChanged: ChangedHandler;\r\n        if (this.ui !== undefined) {\r\n            onChanging = this.ui.onChanging;\r\n            onChanged = this.ui.onChanged;\r\n        }\r\n        let allowChange = true;\r\n        if (onChanging !== undefined) {\r\n            this.isChanging = true;\r\n            allowChange = onChanging(this.context, this.value, prev);\r\n            this.isChanging = false;\r\n        }\r\n        if (allowChange === true) {\r\n            this.setDataValue(evt.currentTarget.value);\r\n            if (onChanged !== undefined) {\r\n                this.isChanging = true;\r\n                onChanged(this.context, this.value, prev);\r\n                this.isChanging = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected get className():string {\r\n        let fieldClass:string;\r\n        if (this.context.inNode === false) fieldClass = 'form-control';\r\n        return classNames(fieldClass, this.context.form.FieldClass, this.ui && this.ui.className);\r\n    }\r\n\r\n    protected abstract render():JSX.Element;\r\n\r\n    renderContainer():JSX.Element {\r\n        if (this.visible === false) return null;\r\n        let {form, inNode} = this.context;\r\n        if (inNode === true) return this.render();\r\n        let label:any;\r\n        if (this.ui === undefined) {\r\n            label = this.name;\r\n        }\r\n        else {\r\n            let uiLabel = this.ui.label;\r\n            if (uiLabel === null) label = null;\r\n            label = uiLabel || this.name;\r\n        }\r\n        if (this.itemSchema.required === true && form.props.requiredFlag !== false) {\r\n            if (label !== null) label = <>{label}&nbsp;<span className=\"text-danger\">*</span></>;\r\n        }\r\n        return form.FieldContainer(label, this.render());\r\n    }\r\n\r\n    protected renderTemplet():JSX.Element | undefined {\r\n        if (this.children !== undefined) {\r\n            return <>{this.children}</>;\r\n        }\r\n        if (this.ui === undefined) return undefined;\r\n        let {Templet} = this.ui;\r\n        if (typeof Templet === 'function') return Templet(this.context, this.name, this.value);\r\n        return Templet;\r\n    }\r\n\r\n    protected renderErrors() {\r\n        let errorList:string[] = [...this.errors, ...this.contextErrors];\r\n        if (errorList.length === 0) return null;\r\n        let {inNode} = this.context;\r\n        let tag = inNode === true? 'span' : 'div';\r\n        return errorList.map(err => React.createElement(tag, \r\n            {\r\n                key: err, \r\n                className: 'text-danger d-inline-block my-2 ml-3'\r\n            },\r\n            <><i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}</>\r\n        ));\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiTextItem } from '../uiSchema';\r\nimport { StringSchema } from '../schema';\r\n\r\nexport class TextWidget extends Widget {\r\n    protected inputType = 'text';\r\n    protected ui: UiTextItem;\r\n    protected input: HTMLInputElement;\r\n\r\n    protected setElementValue(value:any) {this.input.value = value}\r\n    protected get placeholder() {return (this.ui && this.ui.placeholder) || this.name}\r\n    protected onKeyDown: (evt:React.KeyboardEvent<HTMLInputElement>)=>void;\r\n\r\n    protected onBlur = () => {\r\n        this.checkRules();\r\n        this.context.checkContextRules();\r\n    }\r\n    protected onFocus = () => {\r\n        this.clearError();\r\n        this.context.removeErrorWidget(this);\r\n        this.context.removeErrors();\r\n    }\r\n\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {\r\n        this.input.disabled = this.disabled = value\r\n    }\r\n\r\n    render() {\r\n        let renderTemplet = this.renderTemplet();\r\n        if (renderTemplet !== undefined) return renderTemplet;\r\n        let cn = {\r\n            //'form-control': true,\r\n        };\r\n        if (this.hasError === true) {\r\n            cn['is-invalid'] = true;\r\n        }\r\n        else {\r\n            cn['required-item'] = this.itemSchema.required === true;\r\n        }\r\n        return <><input ref={input=>this.input = input}\r\n            className={classNames(this.className, cn)}\r\n            type={this.inputType}\r\n            defaultValue={this.defaultValue} \r\n            onChange={this.onChange}\r\n            placeholder={this.placeholder}\r\n            readOnly={this.readOnly}\r\n            disabled={this.disabled}\r\n            onKeyDown = {this.onKeyDown}\r\n            onFocus = {this.onFocus}\r\n            onBlur={this.onBlur}\r\n            maxLength={(this.itemSchema as StringSchema).maxLength} />\r\n            {this.renderErrors()}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\nimport { RuleNum, RuleInt } from '../rules';\r\nimport { NumBaseSchema } from '../schema';\r\n\r\nexport class NumberWidget extends TextWidget {\r\n    protected inputType = 'number';\r\n    protected itemSchema: NumBaseSchema;\r\n\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        let res = this.context.form.res;\r\n        let {min, max} = this.itemSchema;\r\n        this.rules.push(\r\n            this.itemSchema.type === 'integer'?\r\n                new RuleNum(res, min, max) :\r\n                new RuleInt(res, min, max)\r\n        );\r\n        /*\r\n        if (this.itemSchema.type === 'integer') {\r\n            this.rules.push(new RuleInt);\r\n        }\r\n        let {min, max} = this.itemSchema;\r\n        if (min !== undefined) this.rules.push(new RuleMin(min));\r\n        if (max !== undefined) this.rules.push(new RuleMax(max));\r\n        */\r\n    }\r\n\r\n    protected parse(value:any):any {\r\n        if (value === undefined || value === null) return;\r\n        return Number(value);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { NumberWidget } from './numberWidget';\r\n\r\nexport class UpdownWidget extends NumberWidget {\r\n    protected inputType = 'number';\r\n    protected onKeyDown = (evt:React.KeyboardEvent<HTMLInputElement>) => {\r\n        let key = evt.keyCode;\r\n        event.returnValue = key===46 || key===8 || key===37 || key===39\r\n            || key>=48 && key<=57\r\n            || key>=96 && key<=105\r\n            || key===109 || key===189;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\n\r\nexport class DateWidget extends TextWidget {\r\n    protected inputType = 'date';\r\n}\r\n\r\nexport class DateTimeWidget extends TextWidget {\r\n    protected inputType = 'datetime';\r\n}\r\n\r\nexport class TimeWidget extends TextWidget {\r\n    protected inputType = 'time';\r\n}\r\n\r\nexport class MonthWidget extends TextWidget {\r\n    protected inputType = 'month';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiCheckItem } from '../uiSchema';\r\n\r\nexport class CheckBoxWidget extends Widget {\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiCheckItem;\r\n    protected trueValue: any;\r\n    protected falseValue: any;\r\n\r\n    protected init() {\r\n        super.init();\r\n        if (this.ui !== undefined) {\r\n            let {trueValue, falseValue} = this.ui;\r\n            if (trueValue === undefined) this.trueValue = true;\r\n            else this.trueValue = trueValue;\r\n            if (falseValue === undefined) this.falseValue = false;\r\n            else this.falseValue = falseValue;\r\n        }\r\n        else {\r\n            this.trueValue = true;\r\n            this.falseValue = false;\r\n        }\r\n    }\r\n    protected setElementValue(value:any) {\r\n        this.input.checked = value === this.trueValue;\r\n    }\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    protected onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setDataValue(evt.target.checked === true? this.trueValue : this.falseValue);\r\n    }\r\n\r\n    render() {\r\n        let cn = classNames(this.className, 'form-check-inline');\r\n        let input = <input\r\n            ref={(input)=>this.input = input}\r\n            className={'align-self-center'}\r\n            type=\"checkbox\"\r\n            defaultChecked={this.defaultValue} \r\n            onChange={this.onChange} />;\r\n        return this.context.inNode?\r\n            <label className={cn}>\r\n                {input} {(this.ui&&this.ui.label) || this.name}\r\n            </label>\r\n            :\r\n            <div className={cn}>{input}</div>;\r\n    }\r\n}\r\n","import { Form } from './form';\r\nimport { UiArr } from './uiSchema';\r\nimport { ArrSchema } from './schema';\r\n\r\nlet keySeed:number = 1;\r\n\r\nexport class ArrRow {\r\n    readonly key: number;\r\n    readonly form: Form;\r\n    readonly arrSchema: ArrSchema;\r\n    readonly uiArr: UiArr\r\n    readonly data: any;\r\n    constructor(form:Form, arrSchema:ArrSchema, data:any) {\r\n        this.key = keySeed++;\r\n        this.form = form;\r\n        this.arrSchema = arrSchema;\r\n        let {uiSchema} = form;\r\n        if (uiSchema !== undefined) {\r\n            this.uiArr = uiSchema.items[arrSchema.name] as UiArr;\r\n        }\r\n        this.data = data;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { Widget } from './widget';\r\nimport { UiSelect } from '../uiSchema';\r\n\r\nexport class SelectWidget extends Widget {\r\n    protected select: HTMLSelectElement;\r\n    protected ui: UiSelect;\r\n    @observable protected readOnly: boolean;\r\n\r\n    protected setElementValue(value:any) {this.select.value = value}\r\n    protected onChange = (evt:React.ChangeEvent<HTMLSelectElement>) => {\r\n        this.setDataValue(evt.target.value);\r\n    }\r\n\r\n    setReadOnly(value:boolean) {this.select.disabled = this.readOnly = !value}\r\n    setDisabled(value:boolean) {this.select.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        if (this.readOnly === true) {\r\n            let option = this.ui.list.find(v => v.value === this.value);\r\n            let title = (option === undefined)? '(???)' : option.title;\r\n            return <span className=\"form-control w-min-6c\">{title}</span>;\r\n        }\r\n        return <select\r\n            ref={(select)=>this.select = select}\r\n            className={classNames(this.className, 'form-control')}\r\n            defaultValue={this.defaultValue} \r\n            onChange={this.onChange}>\r\n            {this.ui.list.map((v,index) => {\r\n                let {title, value} = v;\r\n                let cn:string;\r\n                //if (value === undefined || value === null) cn = 'text-light small';\r\n                //else cn = 'text-danger';\r\n                return <option className={cn} key={index} value={value}>{title || value}</option>\r\n            })}\r\n        </select>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiIdItem, TempletType } from '../uiSchema';\r\nimport { observable } from 'mobx';\r\n\r\nexport class IdWidget extends Widget {\r\n    protected ui: UiIdItem;\r\n    @observable protected value:number;\r\n    setReadOnly(value:boolean) {this.readOnly = value}\r\n    setDisabled(value:boolean) {this.disabled = value}    \r\n\r\n    protected onClick = async () => {\r\n        let pickId = this.ui && this.ui.pickId;\r\n        if (pickId === undefined) {\r\n            alert('no pickId defined!');\r\n            return;\r\n        }\r\n        let id = await pickId(this.context, this.name, this.value);        \r\n        this.setDataValue(id);\r\n        this.clearError();\r\n        this.clearContextError();\r\n        this.checkRules();\r\n    }\r\n\r\n    render() {\r\n        let placeholder:string|JSX.Element, Templet: TempletType;\r\n        if (this.ui !== undefined) {\r\n            placeholder = this.ui.placeholder;\r\n            Templet = this.ui.Templet;\r\n        }\r\n        let cn = {\r\n            'form-control': true,\r\n            'required-item': this.itemSchema.required === true,\r\n            'cursor-pointer': true,\r\n            'is-invalid': this.hasError,\r\n        };\r\n        let content;\r\n        if (this.value === undefined || this.value === null) {\r\n            content = placeholder || 'placeholder';\r\n            cn['text-muted'] = true;\r\n        }\r\n        else if (Templet === undefined) {\r\n            content = <>{this.value}</>;\r\n        }\r\n        else if (typeof Templet === 'function') {\r\n            content = Templet(this.context, this.name, this.value);\r\n        }\r\n        else {\r\n            content = Templet;\r\n        }\r\n        return <>\r\n            <div className={classNames(cn)} onClick={this.onClick}>{content}</div>\r\n            {this.renderErrors()}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { DataType } from '../schema';\r\nimport { UiType } from '../uiSchema';\r\n\r\nexport const Unknown = (dataType:DataType, uiType:UiType, dataTypes:DataType[]) => {\r\n    return <span className=\"text-danger\">!!data type {dataType} only support {(dataTypes || []).join(', ')}, can't use ui {uiType}!!</span>;\r\n};\r\n","import * as React from 'react';\r\nimport { UiButton, TempletType } from '../uiSchema';\r\nimport { Unknown } from './unknown';\r\nimport { Widget } from './widget';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class ButtonWidget extends Widget {\r\n    protected ui: UiButton;\r\n\r\n    protected onClick = async () => {\r\n        this.clearError();\r\n        this.clearContextError();\r\n        let {name, type} = this.itemSchema;\r\n        if (type === 'submit') {\r\n            this.context.checkRules()\r\n            if (this.context.hasError === true) {\r\n                return;\r\n            }\r\n        }\r\n        let {onButtonClick} = this.context.form.props;\r\n        if (onButtonClick === undefined) {\r\n            alert(`button ${name} clicked. you should define form onButtonClick`);\r\n            return;\r\n        }\r\n        let ret = await onButtonClick(name, this.context);\r\n        if (ret === undefined) return;\r\n        this.context.setError(name, ret);\r\n    }\r\n\r\n    private observerRender = observer(() => {\r\n        let {name, type} = this.itemSchema;\r\n        let Templet:TempletType, cn:string, label:string;\r\n        if (this.ui !== undefined) {\r\n            let {widget:widgetType} = this.ui;\r\n            if (widgetType !== 'button') return Unknown(type, widgetType, ['button']);\r\n            Templet = this.ui.Templet;\r\n            cn = this.ui.className;\r\n            label = this.ui.label;\r\n        }\r\n        let {form, hasError} = this.context;\r\n        let context = this.context;\r\n        let disabled = type==='submit' && hasError;\r\n        let content:any;\r\n        if (this.children !== undefined) content = this.children;\r\n        else if (typeof Templet === 'function') content = Templet(context, name);\r\n        else if (Templet !== undefined) content = Templet;\r\n        else content = label; \r\n        let button = <button \r\n            className={cn} \r\n            type=\"button\"\r\n            disabled={disabled}\r\n            onClick={this.onClick}>\r\n            {content || name}\r\n        </button>;\r\n        if (context.inNode === true) return <>{button}{this.renderErrors()}</>;\r\n        return <div className={form.ButtonClass}>\r\n            <div>{this.renderErrors()}</div>\r\n            {button}\r\n        </div>;\r\n    });\r\n    \r\n    render() {\r\n        return <this.observerRender />\r\n    }\r\n\r\n    renderContainer():JSX.Element {\r\n        if (this.visible === false) return null;        \r\n        let {form, inNode} = this.context;\r\n        if (inNode === true) return this.render();\r\n        return form.FieldContainer(null, this.render());\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport { Schema, ArrSchema, DataType, ButtonSchema, ItemSchema } from '../schema';\r\nimport { UiItem, UiArr, UiType, UiButton, TempletType } from '../uiSchema';\r\n//import { ContextValue, FormContext, Form } from '../form';\r\nimport { TextWidget } from './textWidget';\r\nimport { Widget } from './widget';\r\nimport { TextAreaWidget } from './textareaWidget';\r\nimport { PasswordWidget, UrlWidget, EmailWidget } from './passwordWidget';\r\nimport { UpdownWidget } from './updownWidget';\r\nimport { NumberWidget } from './numberWidget';\r\nimport { DateWidget, DateTimeWidget, TimeWidget, MonthWidget } from './dateWidget';\r\nimport { CheckBoxWidget } from './checkBoxWidget';\r\nimport { FieldProps } from '../field';\r\nimport { ArrRow } from '../arrRow';\r\nimport { Context, RowContext, FormContext, ContextContainer } from '../context';\r\nimport { SelectWidget } from './selectWidget';\r\nimport { RadioWidget } from './radioWidget';\r\nimport { RangeWidget } from './rangeWidget';\r\nimport { IdWidget } from './idWidget';\r\nimport { ButtonWidget } from './buttonWidget';\r\nimport { Unknown } from './unknown';\r\n\r\ntype TypeWidget = new (context:Context, itemSchema:ItemSchema, fieldProps:FieldProps, children: React.ReactNode) => Widget;\r\n\r\nconst widgetsFactory: {[type: string]: {widget?: TypeWidget, dataTypes?: DataType[]}} = {\r\n    id: {\r\n        dataTypes: ['id'],\r\n        widget: IdWidget,\r\n    },\r\n    text: {\r\n        dataTypes: ['integer', 'number', 'string'],\r\n        widget: TextWidget\r\n    },\r\n    textarea: {\r\n        dataTypes: ['string'],\r\n        widget: TextAreaWidget\r\n    },\r\n    password: {\r\n        dataTypes: ['string'],\r\n        widget: PasswordWidget\r\n    },\r\n    date: {\r\n        dataTypes: ['date'],\r\n        widget: DateWidget\r\n    },\r\n    datetime: {\r\n        dataTypes: ['date'],\r\n        widget: DateTimeWidget\r\n    },\r\n    time: {\r\n        dataTypes: ['date'],\r\n        widget: TimeWidget\r\n    },\r\n    month: {\r\n        dataTypes: ['date'],\r\n        widget: MonthWidget\r\n    },\r\n    select: {\r\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\r\n        widget: SelectWidget\r\n    },\r\n    url: {\r\n        dataTypes: ['string'],\r\n        widget: UrlWidget\r\n    },\r\n    email: {\r\n        dataTypes: ['string'],\r\n        widget: EmailWidget\r\n    },\r\n    number: {\r\n        dataTypes: ['integer', 'number'],\r\n        widget: NumberWidget\r\n    },\r\n    updown: {\r\n        dataTypes: ['integer', 'number'],\r\n        widget: UpdownWidget\r\n    },\r\n    color: {\r\n\r\n    },\r\n    checkbox: {\r\n        dataTypes: ['boolean', 'integer', 'number'],\r\n        widget: CheckBoxWidget\r\n    },\r\n    checkboxes: {\r\n\r\n    },\r\n    radio: {\r\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\r\n        widget: RadioWidget\r\n    },\r\n    range: {\r\n        dataTypes: ['integer'],\r\n        widget: RangeWidget,\r\n    },\r\n    button: {\r\n        dataTypes: ['button', 'submit'],\r\n        widget: ButtonWidget,\r\n    }\r\n}\r\n\r\nexport function factory(context: Context, itemSchema: ItemSchema, children:React.ReactNode, fieldProps?: FieldProps):JSX.Element {\r\n    if (context === undefined) {\r\n        debugger;\r\n        return null;\r\n    }\r\n    if (itemSchema === undefined) return undefined;\r\n    let {name, type} = itemSchema;\r\n    switch (type) {\r\n    //case 'button':\r\n    //case 'submit':\r\n    //    return <FormButton context={context} itemSchema={itemSchema as ButtonSchema} children={children} />;\r\n    case 'arr':\r\n        let arrSchema = context.getItemSchema(name) as ArrSchema;\r\n        return <ArrComponent formContext={context as FormContext} arrSchema={arrSchema} children={children} />;\r\n    default:\r\n        break;\r\n    }\r\n\r\n    let typeWidget: TypeWidget;\r\n    let ui = context.getUiItem(name);\r\n    function getTypeWidget(t:DataType): TypeWidget {\r\n        switch(t) {\r\n        default: return TextWidget; \r\n        case 'id': return IdWidget;\r\n        case 'integer': return UpdownWidget;\r\n        case 'number': return NumberWidget; \r\n        case 'string': return TextWidget; \r\n        case 'date': return DateWidget; \r\n        case 'boolean': return CheckBoxWidget; \r\n        case 'button':\r\n        case 'submit': return ButtonWidget;\r\n        }\r\n    }\r\n    if (ui === undefined) {\r\n        typeWidget = getTypeWidget(type);\r\n    }\r\n    else {\r\n        let {widget:widgetType} = ui;\r\n        switch (widgetType) {\r\n        default:\r\n            if (widgetType !== undefined) {\r\n                let widgetFactory = widgetsFactory[widgetType];\r\n                typeWidget = widgetFactory.widget;\r\n            }\r\n            if (typeWidget === undefined) typeWidget = getTypeWidget(type);\r\n            break;\r\n        case 'group':\r\n            return <span>impletment group</span>;\r\n        }\r\n        //label = uiLabel || name;\r\n    }\r\n    \r\n    let {isRow, widgets} = context;\r\n    let widget = new typeWidget(context, itemSchema, fieldProps, children);\r\n    widgets[name] = widget;\r\n\r\n    if (isRow === false) {\r\n        let WidgetElement = observer(() => widget.renderContainer());\r\n        //if (inNode === true) \r\n        return <WidgetElement />;\r\n        //return form.FieldContainer(label, <WidgetElement />);\r\n    }\r\n    else {\r\n        let widgetElement = widget.renderContainer();\r\n        //if (inNode === true) \r\n        return widgetElement;\r\n        //return form.FieldContainer(label, widgetElement);\r\n    }\r\n}\r\n\r\nconst ArrComponent = observer((\r\n    {formContext, arrSchema, children}:{formContext: FormContext, arrSchema: ArrSchema, children: React.ReactNode}) => \r\n{\r\n    let {name, arr} = arrSchema;\r\n    let data = formContext.data[name] as any[];\r\n    let {form, rowContexts} = formContext;\r\n    let arrRowContexts = rowContexts[name];\r\n    if (arrRowContexts === undefined) rowContexts[name] = arrRowContexts = {};\r\n    let ui = formContext.getUiItem(name) as UiArr;\r\n    let arrLabel = name;\r\n    let Templet:TempletType;\r\n    let selectable:boolean, deletable:boolean, restorable:boolean;    \r\n    if (ui !== undefined) {\r\n        let {widget:widgetType, label, selectable:arrSelectable, deletable:arrDeletable, restorable:arrRestorable} = ui;\r\n        selectable = arrSelectable;\r\n        deletable = arrDeletable;\r\n        restorable = arrRestorable;\r\n        Templet = ui.Templet;\r\n        if (widgetType !== 'arr') return Unknown(arrSchema.type, widgetType, ['arr']);\r\n        arrLabel = label || arrLabel;\r\n    }\r\n    let {ArrContainer, RowContainer, uiSchema} = form;\r\n    if (uiSchema !== undefined) {\r\n        let {selectable:formSelectable, deletable:formDeletable, restorable:formRestorable} = uiSchema;\r\n        if (selectable !== true) selectable = formSelectable;\r\n        if (deletable !== true) deletable = formDeletable;\r\n        if (restorable !== true) restorable = formRestorable;\r\n    }\r\n    let first = true;\r\n    return ArrContainer(arrLabel, <>\r\n        {data.map((row:any, index) => {\r\n            let arrRow = row.$row;\r\n            if (arrRow === undefined) {\r\n                row.$row = arrRow = new ArrRow(form, arrSchema, row);\r\n            }\r\n            let rowKey = arrRow.key;\r\n\r\n            let selectCheck:JSX.Element, deleteIcon:JSX.Element;\r\n            if (selectable === true) {\r\n                let onClick = (evt: React.MouseEvent<HTMLInputElement>)=>{\r\n                    row.$isSelected=(evt.target as HTMLInputElement).checked;\r\n                }\r\n                selectCheck = <div className=\"form-row-checkbox\">\r\n                    <input type=\"checkbox\" onClick={onClick} />\r\n                </div>;\r\n            }\r\n            let isDeleted = !(row.$isDeleted===undefined || row.$isDeleted===false);\r\n            if (deletable === true) {\r\n                let icon = isDeleted? 'fa-undo' : 'fa-trash';\r\n                let onDelClick = () => {\r\n                    if (restorable === true) {\r\n                        row.$isDeleted = !isDeleted;\r\n                    }\r\n                    else {\r\n                        let p = data.indexOf(row);\r\n                        if (p>=0) data.splice(p, 1);\r\n                    }\r\n                }\r\n                deleteIcon = <div className=\"form-row-edit align-self-start text-info cursor-pointer\" onClick={onDelClick}>\r\n                    <i className={classNames('fa', icon, 'fa-fw')} />\r\n                </div>;\r\n            }\r\n            let editContainer = selectable===true || deletable===true?\r\n                (content:any) => <fieldset disabled={isDeleted}><div className={classNames('d-flex', {'deleted':isDeleted, 'row-selected':row.$isSelected})}>\r\n                    {selectCheck}<div className=\"flex-grow-1\">{content}</div>{deleteIcon}\r\n                </div></fieldset>\r\n                :\r\n                (content:any) => content;\r\n\r\n            let rowContext: RowContext;\r\n            let rowContent: JSX.Element;\r\n            let sep = undefined;\r\n            if (first === false) sep = form.RowSeperator;\r\n            else first = false;\r\n            if (children !== undefined) {\r\n                rowContext = new RowContext(formContext, arrSchema, row, true, arrRow);\r\n                rowContent = <>children</>;\r\n            }\r\n            else {\r\n                let typeofTemplet = typeof Templet;\r\n                if (typeofTemplet === 'function') {\r\n                    rowContext = new RowContext(formContext, arrSchema, row, true, arrRow);\r\n                    rowContent = React.createElement(observer(Templet as React.StatelessComponent));\r\n                }\r\n                else if (typeofTemplet === 'object') {\r\n                    rowContext = new RowContext(formContext, arrSchema, row, true, arrRow);\r\n                    rowContent = Templet as JSX.Element;\r\n                }\r\n                else {\r\n                    rowContext = new RowContext(formContext, arrSchema, row, false, arrRow);\r\n                    rowContent = <>{\r\n                        arr.map((v, index) => {\r\n                            return <React.Fragment key={v.name}>\r\n                                {factory(rowContext, v, undefined)}\r\n                            </React.Fragment>\r\n                        })}\r\n                    </>;\r\n                }\r\n            }\r\n            arrRowContexts[rowKey] = rowContext;\r\n            return <ContextContainer.Provider key={rowKey} value={rowContext}>\r\n                {sep}\r\n                {RowContainer(editContainer(<><rowContext.renderErrors />{rowContent}</>))}\r\n            </ContextContainer.Provider>;\r\n        })}\r\n    </>);\r\n});\r\n","import * as React from 'react';\r\nimport { Widget } from './widget';\r\nimport { UiTextAreaItem } from '../uiSchema';\r\nimport { StringSchema } from '../schema';\r\n\r\nexport class TextAreaWidget extends Widget {\r\n    protected itemSchema: StringSchema;\r\n    protected input: HTMLTextAreaElement;\r\n    protected ui: UiTextAreaItem;\r\n\r\n    protected setElementValue(value:any) {this.input.value = value}\r\n    protected onChange = (evt: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        this.setValue(evt.currentTarget.value);\r\n    }\r\n\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        return <textarea ref={(input) => this.input=input} \r\n            rows={this.ui && this.ui.rows}\r\n            maxLength={this.itemSchema.maxLength}\r\n            defaultValue={this.defaultValue} onChange={this.onChange} />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\n\r\nexport class PasswordWidget extends TextWidget {\r\n    protected inputType = 'password';\r\n}\r\n\r\nexport class UrlWidget extends TextWidget {\r\n    protected inputType = 'url';\r\n}\r\n\r\nexport class EmailWidget extends TextWidget {\r\n    protected inputType = 'email';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { TextWidget } from './textWidget';\r\nimport { Widget } from './widget';\r\nimport { UiRadio } from '../uiSchema';\r\nimport { RowContext } from '../context';\r\n\r\n\r\n//const radioStyle:React.CSSProperties = {width:'2em', height:'1.2em'};\r\nexport class RadioWidget extends Widget {\r\n    protected inputs: {[index:number]: HTMLInputElement} = {};\r\n    protected ui: UiRadio;\r\n\r\n    protected setElementValue(value:any) {\r\n        for (let i in this.inputs) {\r\n            let input = this.inputs[i];\r\n            input.checked = value === input.value;\r\n        }\r\n    }\r\n    setReadOnly(value:boolean) {\r\n        this.readOnly = value;\r\n        for (let i in this.inputs) this.inputs[i].readOnly = value;\r\n    }\r\n    setDisabled(value:boolean) {\r\n        this.disabled = value;\r\n        for (let i in this.inputs) this.inputs[i].disabled = value\r\n    }\r\n\r\n    render() {\r\n        let {defaultValue, list} = this.ui;\r\n        let {isRow, inNode} = this.context;\r\n        let rowKey:number;\r\n        if (isRow === true) {\r\n            rowKey = (this.context as RowContext).row.key;\r\n        }\r\n        let cn = classNames(this.className, 'form-radio-inline');\r\n        return <span className={cn}>\r\n                {list.map((v,index) => {\r\n                    let {value, title} = v;\r\n                    let name = this.name;\r\n                    if (rowKey !== undefined) name += '-' + rowKey;\r\n                    return <label key={index} className=\"form-radio-inline\">\r\n                        <input ref={input=>this.inputs[index]=input} type=\"radio\" name={name}\r\n                            value={value} defaultChecked={(this.defaultValue || defaultValue)===value} />\r\n                        {title || value}\r\n                    </label>;\r\n                    //</span>\r\n                })}\r\n            </span>;\r\n    }\r\n}\r\n/*\r\n<div className=\"form-control d-flex border-0\"><input\r\nref={(input)=>this.input = input}\r\nclassName={classNames(this.className, 'align-self-center')}\r\ntype=\"checkbox\"\r\nstyle={{maxHeight:\"1.2em\"}}\r\ndefaultValue={this.defaultValue} \r\nonChange={this.onChange} />\r\n</div>\r\n*/","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { UiRange } from '../uiSchema';\r\nimport { Widget } from './widget';\r\n\r\nexport class RangeWidget extends Widget {\r\n    protected inputType = 'range';\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiRange;\r\n\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        let {min, max, step} = this.ui;\r\n        return <><input ref={input=>this.input = input}\r\n            className={classNames(this.className, 'form-control', 'w-min-6c')}\r\n            type={this.inputType}\r\n            defaultValue={this.defaultValue} \r\n            onChange={this.onChange}\r\n            max={max}\r\n            min={min}\r\n            step={step}\r\n            />\r\n        </>;\r\n    }\r\n}\r\n","export {factory} from './factory';","// 因为测试的都是局域网服务器，甚至本机服务器，所以一秒足够了\r\n// 网上找了上面的fetch timeout代码。\r\n// 尽管timeout了，fetch仍然继续，没有cancel\r\n\r\n// 实际上，一秒钟不够。web服务器会自动停。重启的时候，可能会比较长时间。也许两秒甚至更多。\r\nconst timeout = 2000;\r\n\r\nexport function fetchLocalCheck(url, options?:any):Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(url, options).then(resolve).catch(reject);\r\n      const e = new Error(\"Connection timed out\");\r\n      setTimeout(reject, timeout, e);\r\n    });\r\n}\r\n","import {observable} from 'mobx';\r\n\r\nexport const store = {\r\n    homeCount: observable.box<number>(-1),\r\n    cartCount: observable.box<number>(101),\r\n};\r\n","import * as jwtDecode from 'jwt-decode';\r\n\r\nexport interface User {\r\n    id: number;\r\n    name: string;\r\n    token: string;\r\n    device: string;\r\n    nick?: string;\r\n    icon?: string;\r\n}\r\n\r\nexport function decodeToken(token: string): User {\r\n    let ret:any = jwtDecode(token);\r\n    let accesses;\r\n    if (ret.accesses) accesses = ret.accesses.split(',');\r\n\r\n    let user: User = {\r\n        id: ret.id,\r\n        name: ret.name,\r\n        token: token,\r\n        device: ret.device,\r\n    };\r\n    return user;\r\n}\r\n","import * as React from 'react';\r\n\r\nconst iconStyle=(color?:string) => { \r\n    return {\r\n        color:color || '#7f7fff',\r\n        margin:'6px 0'\r\n    }\r\n};\r\nexport const rowIcon=(name:string, color?:string) => \r\n    <i style={iconStyle(color)} className={'fa fa-lg fa-' + name} />;\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport interface LabelRowProps {\r\n    label: string;\r\n    className?: string;\r\n    action?: () => void;\r\n}\r\n\r\nexport interface LabelRowState {\r\n    isPressed: boolean;\r\n} \r\n\r\nexport class LabelRow extends React.Component<LabelRowProps, LabelRowState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isPressed: false\r\n        }\r\n    }\r\n    mouseDown() {\r\n        this.setState({isPressed: true});\r\n    }\r\n    mouseUp() {\r\n        this.setState({isPressed: false});\r\n        if (this.props.action) this.props.action();\r\n    }\r\n    render() {\r\n        let c = classNames('row', 'label-row', this.props.className, {\r\n            pressed: this.state.isPressed\r\n        });\r\n        return (\r\n        <div\r\n            className={c}\r\n            onMouseDown={()=>this.mouseDown()} \r\n            onMouseUp={()=>this.mouseUp()}>\r\n            <div className=\"col-xs-3\">{this.props.label}</div>\r\n            <div className=\"col-xs-9\">{this.props.children}</div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport interface ActionRowProps {\r\n    className?: string;\r\n    action?: () => void;\r\n}\r\n\r\nexport interface ActionRowState {\r\n    isPressed: boolean;\r\n} \r\n\r\nexport class ActionRow extends React.Component<ActionRowProps, ActionRowState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isPressed: false\r\n        }\r\n    }\r\n    mouseDown() {\r\n        this.setState({isPressed: true});\r\n    }\r\n    mouseUp() {\r\n        this.setState({isPressed: false});\r\n        if (this.props.action) this.props.action();\r\n    }\r\n    render() {\r\n        let c = classNames('action-row', this.props.className, {\r\n            pressed: this.state.isPressed\r\n        });\r\n        return (\r\n        <div\r\n            className={c}\r\n            onMouseDown={()=>this.mouseDown()} \r\n            onMouseUp={()=>this.mouseUp()}>\r\n            {this.props.children}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport {isDevelopment} from '../local';\r\nimport {User} from '../user';\r\nimport {nav} from './nav';\r\nimport {Page} from './page';\r\n\r\nexport abstract class Controller {\r\n    readonly res: any;\r\n    readonly x: any;\r\n    icon: string|JSX.Element;\r\n    label:string;\r\n    readonly isDev:boolean = isDevelopment;\r\n    get user():User {return nav.user}\r\n    get isLogined():boolean {\r\n        let {user} = nav;\r\n        if (user === undefined) return false;\r\n        return user.id > 0;\r\n    }\r\n    constructor(res:any) {\r\n        this.res = res || {};\r\n        this.x = this.res.x || {};\r\n    }\r\n\r\n    private receiveHandlerId:number;\r\n    private disposer:()=>void;\r\n\r\n    private dispose() {\r\n        // message listener的清理\r\n        nav.unregisterReceiveHandler(this.receiveHandlerId);\r\n        this.onDispose();\r\n    }\r\n\r\n    protected onDispose() {\r\n    }\r\n\r\n    protected async showVPage(vp: new (coordinator: Controller)=>VPage<Controller>, param?:any):Promise<void> {\r\n        await (new vp(this)).showEntry(param);\r\n    }\r\n\r\n    protected renderView(view: new (coordinator: Controller)=>View<Controller>, param?:any) {\r\n        return (new view(this)).render(param);\r\n    }\r\n\r\n    async event(type:string, value:any) {\r\n        await this.onEvent(type, value);\r\n    }\r\n\r\n    protected async onEvent(type:string, value:any) {\r\n    }\r\n\r\n    protected msg(text:string) {\r\n        alert(text);\r\n    }\r\n    protected errorPage(header:string, err:any) {\r\n        this.openPage(<Page header=\"App error!\">\r\n            <pre>\r\n                {typeof err === 'string'? err : err.message}\r\n            </pre>\r\n        </Page>);\r\n    }\r\n\r\n    protected onMessage(message:any):Promise<void> {\r\n        return;\r\n    }\r\n\r\n    private onMessageReceive = async (message:any):Promise<void> => {\r\n        await this.onMessage(message);\r\n    }\r\n    protected async beforeStart():Promise<boolean> {\r\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\r\n        return true;\r\n    }\r\n    protected abstract internalStart(param?:any):Promise<void>;\r\n    async start(param?:any):Promise<void> {\r\n        this.disposer = this.dispose.bind(this);\r\n        let ret = await this.beforeStart();\r\n        if (ret === false) return;\r\n        await this.internalStart(param);\r\n    }\r\n\r\n    get isCalling():boolean {return this._resolve_$ !== undefined}\r\n\r\n    private _resolve_$:((value:any) => void)[];\r\n    async call(param?:any):Promise<any> {\r\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\r\n        return new Promise<any> (async (resolve, reject) => {\r\n            this._resolve_$.push(resolve);\r\n            await this.start(param);\r\n        });\r\n    }\r\n\r\n    async vCall(vp: new (coordinator: Controller)=>VPage<Controller>, param?:any):Promise<any> {\r\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\r\n        return new Promise<any> (async (resolve, reject) => {\r\n            this._resolve_$.push(resolve);\r\n            await (new vp(this)).showEntry(param);\r\n        });\r\n    }\r\n\r\n    returnCall(value:any) {\r\n        if (this._resolve_$ === undefined) return;\r\n        let resolve = this._resolve_$.pop();\r\n        if (resolve === undefined) {\r\n            alert('the Coordinator call already returned, or not called');\r\n            return;\r\n        }\r\n        resolve(value);\r\n    }\r\n\r\n    openPage(page:JSX.Element) {\r\n        nav.push(page, this.disposer);\r\n        this.disposer = undefined;\r\n    }\r\n\r\n    replacePage(page:JSX.Element) {\r\n        nav.replace(page, this.disposer);\r\n        this.disposer = undefined;\r\n    }\r\n\r\n    backPage() {\r\n        nav.back();\r\n    }\r\n\r\n    closePage(level?:number) {\r\n        nav.pop(level);\r\n    }\r\n\r\n    ceasePage(level?:number) {\r\n        nav.ceaseTop(level);\r\n    }\r\n\r\n    removeCeased() {\r\n        nav.removeCeased();\r\n    }\r\n\r\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        nav.regConfirmClose(confirmClose);\r\n    }\r\n}\r\n\r\n\r\nexport abstract class View<C extends Controller> {\r\n    protected controller: C;\r\n    protected readonly res: any;\r\n    protected readonly x: any;\r\n\r\n    constructor(controller: C) {\r\n        this.controller = controller;\r\n        this.res = controller.res;\r\n        this.x = controller.x;\r\n    }\r\n\r\n    protected get isDev() {return isDevelopment}\r\n\r\n    abstract render(param?:any): JSX.Element;\r\n\r\n    protected renderVm(vm: new (coordinator: Controller)=>View<C>, param?:any) {\r\n        return (new vm(this.controller)).render(param);\r\n    }\r\n\r\n    protected async showVPage(vp: new (coordinator: Controller)=>VPage<Controller>, param?:any):Promise<void> {\r\n        await (new vp(this.controller)).showEntry(param);\r\n    }\r\n\r\n    protected async event(type:string, value?:any) {\r\n        /*\r\n        if (this._resolve_$_ !== undefined) {\r\n            await this._resolve_$_({type:type, value:value});\r\n            return;\r\n        }*/\r\n        await this.controller.event(type, value);\r\n    }\r\n\r\n    protected returnCall(value:any) {\r\n        this.controller.returnCall(value);\r\n    }\r\n\r\n    protected openPage(view: React.StatelessComponent<any>, param?:any) {\r\n        this.controller.openPage(React.createElement(view, param));\r\n    }\r\n\r\n    protected replacePage(view: React.StatelessComponent<any>, param?:any) {\r\n        this.controller.replacePage(React.createElement(view, param));\r\n    }\r\n\r\n    protected openPageElement(page: JSX.Element) {\r\n        this.controller.openPage(page);\r\n    }\r\n\r\n    protected replacePageElement(page: JSX.Element) {\r\n        this.controller.replacePage(page);\r\n    }\r\n\r\n    protected backPage() {\r\n        this.controller.backPage();\r\n    }\r\n\r\n    protected closePage(level?:number) {\r\n        this.controller.closePage(level);\r\n    }\r\n\r\n    protected ceasePage(level?:number) {\r\n        this.controller.ceasePage(level);\r\n    }\r\n\r\n    protected removeCeased() {\r\n        this.controller.removeCeased();\r\n    }\r\n\r\n    protected regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        this.controller.regConfirmClose(confirmClose);\r\n    }\r\n}\r\n\r\nexport abstract class VPage<C extends Controller> extends View<C> {\r\n    constructor(coordinator: C) {\r\n        super(coordinator);\r\n    }\r\n\r\n    abstract showEntry(param?:any):Promise<void>;\r\n\r\n    render(param?:any):JSX.Element {return null;}\r\n}\r\n\r\nexport type TypeVPage<C extends Controller> = new (coordinator: C)=>VPage<C>;\r\n\r\n","export {Form} from './form';\r\nexport {Field} from './field';\r\nexport * from './schema';\r\nexport * from './uiSchema';\r\nexport {Context} from './context';\r\n","import * as React from 'react';\r\n//import { FormContext, ContextValue, Form } from './form';\r\nimport { factory } from './widgets';\r\nimport { ContextContainer, Context } from './context';\r\n\r\nexport interface FieldProps {\r\n    name: string;\r\n}\r\n\r\nexport class Field extends React.Component<FieldProps> {\r\n    static contextType = ContextContainer;\r\n    render() {\r\n        let {name, children } = this.props;\r\n        let context:Context = this.context;\r\n        if (context === undefined) return <span className=\"text-danger\">!only in Form!</span>;\r\n        let itemSchema = context.getItemSchema(name);\r\n        let content = factory(context, itemSchema, children, this.props);\r\n        if (content === undefined) {\r\n            return <span className=\"text-danger\">!!{name} is not defined!!</span>;\r\n        }\r\n        return content;\r\n    }\r\n}\r\n","import {observable, IObservableArray, computed} from 'mobx';\r\nimport {uid} from './uid';\r\n\r\nexport abstract class PageItems<T> {\r\n    constructor(itemObservable:boolean = false) {\r\n        this._items = observable.array<T>([], {deep:itemObservable});\r\n    }\r\n    private isFirst: boolean = true;\r\n    @observable loading: boolean = false;\r\n    @observable private beforeLoad: boolean = true;\r\n    @observable protected loaded: boolean = false;\r\n    protected _items:IObservableArray<T>;\r\n    @observable allLoaded: boolean = false;\r\n    @computed get items():IObservableArray<T> {\r\n        if (this.beforeLoad === true) return null;\r\n        if (this.loaded === false) return undefined;\r\n        return this._items;\r\n    }\r\n\r\n    @observable topDiv:string;\r\n    @observable bottomDiv:string;\r\n    scrollToTop() {\r\n        this.topDiv = '$$'+uid();\r\n    }\r\n    scrollToBottom() {\r\n        this.bottomDiv = '$$'+uid();\r\n    }\r\n\r\n    protected param: any;\r\n    protected firstSize = 100;\r\n    protected pageStart = undefined;\r\n    protected pageSize = 30;\r\n    protected appendPosition:'head'|'tail' = 'tail';\r\n\r\n    protected abstract async load(param:any, pageStart:any, pageSize:number):Promise<T[]>;\r\n    protected abstract setPageStart(item:T);\r\n\r\n    reset() {\r\n        this.isFirst = true;\r\n        this.beforeLoad = true;\r\n        this.loaded = false;\r\n        this.param = undefined;\r\n        this.allLoaded = false;\r\n        this._items.clear();\r\n        this.setPageStart(undefined);\r\n    }\r\n\r\n    append(item:T) {\r\n        if (this.appendPosition === 'tail')\r\n            this._items.unshift(item);\r\n        else\r\n            this._items.push(item);\r\n    }\r\n\r\n    async first(param:any):Promise<void> {\r\n        this.reset();\r\n        this.beforeLoad = false;\r\n        this.param = param;\r\n        await this.more();        \r\n    }\r\n\r\n    async more():Promise<void> {\r\n        if (this.allLoaded === true) return;\r\n        if (this.loading === true) return;\r\n        this.loading = true;\r\n        let pageSize = this.pageSize + 1;\r\n        if (this.isFirst === true) {\r\n            if (this.firstSize > this.pageSize) pageSize = this.firstSize+1;\r\n        }\r\n        let ret = await this.load(\r\n                this.param, \r\n                this.pageStart,\r\n                pageSize);\r\n        this.loading = false;\r\n        this.loaded = true;\r\n        let len = ret.length;\r\n        if (this.isFirst===true && len>this.firstSize ||\r\n            this.isFirst===false && len>this.pageSize)\r\n        {\r\n            this.allLoaded = false;\r\n            --len;\r\n            ret.splice(len, 1);\r\n        }\r\n        else {\r\n            this.allLoaded = true;\r\n        }\r\n        if (len === 0) {\r\n            this._items.clear();\r\n            return;\r\n        }\r\n        this.setPageStart(ret[len-1]);\r\n        if (this.appendPosition === 'tail')\r\n            this._items.push(...ret);\r\n        else\r\n            this._items.unshift(...ret.reverse());\r\n        this.isFirst = false;\r\n    }\r\n}\r\n","import {observable, computed} from 'mobx';\r\n\r\nexport interface Id {\r\n    id: number;\r\n}\r\n\r\nexport abstract class CacheIds<T extends Id> {\r\n    constructor(maxCount:number = 100) {\r\n        this.maxCount = maxCount;\r\n    }\r\n    private maxCount:number;\r\n    private arr:T[] = [];\r\n    @observable dict = new Map<number, T>();\r\n\r\n    loadIds(ids:number[]) {\r\n        let arr:number[] = [];\r\n        for (let id of ids) {\r\n            if (id === null) continue;\r\n            let item = this.dict.get(id);\r\n            if (item === undefined) {\r\n                arr.push(id);\r\n                item = {id:id} as T;\r\n                this.dict.set(id, item);\r\n            }\r\n        }                \r\n        this.loadId(arr);\r\n    }\r\n\r\n    get(id:number):T {\r\n        if (id === undefined || id === null) return null;\r\n        let item = this.dict.get(id);\r\n        if (item === undefined) {\r\n            this.dict.set(id, {id:id} as T);\r\n            this.loadId([id]);\r\n            item = this.dict.get(id);\r\n        }\r\n        return item;\r\n    }\r\n    private setItem(id:number, item:T) {\r\n        if (item === undefined) {\r\n            this.dict.set(id, null);\r\n            this.arr.push({id: id} as T);\r\n        }\r\n        else {\r\n            this.dict.set(id, item);\r\n            this.arr.push(item);\r\n        }\r\n        if (this.arr.length > this.maxCount) {\r\n            item = this.arr.shift();\r\n            this.dict.delete(item.id);\r\n        }\r\n    }\r\n    private async loadId(ids:number[]) {\r\n        let items = await this._loadIds(ids);\r\n        if (items === undefined) {\r\n            for (let id of ids) {\r\n                if (id === null) continue;\r\n                let item = await this._loadId(id);\r\n                this.setItem(id, item);\r\n            }\r\n        }\r\n        else {\r\n            for (let id of ids) {\r\n                let item = items.find(v => v.id === id);\r\n                this.setItem(id, item);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected abstract async _loadIds(ids:number[]):Promise<T[]>;\r\n    protected abstract async _loadId(id:number):Promise<T>;\r\n}\r\n","import _ from 'lodash';\r\nimport { KeyValueRes, Res } from '../res';\r\n\r\nexport interface FormRes extends KeyValueRes {\r\n    required: string;\r\n    number: string;\r\n    integer: string;\r\n    min: string;\r\n    max: string;\r\n}\r\n\r\nexport const formRes:Res<FormRes> = {\r\n    _: {\r\n        required: 'required',\r\n        number: 'not valid number',\r\n        integer: 'not valid integer',\r\n        min: 'min value is ${min}',\r\n        max: 'max value is ${max}',\r\n    },\r\n    zh: {\r\n        _: {\r\n            required: '必须填',\r\n            number: '需要数字',\r\n            integer: '需要整数',\r\n            min: '不能小于${min}',\r\n            max: '不能大于${max}',\r\n        }\r\n    },\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport classNames from 'classnames';\r\nimport { Schema, ItemSchema, ArrSchema } from './schema';\r\nimport { UiSchema, TempletType } from './uiSchema';\r\nimport { factory } from './widgets';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport { ContextContainer, FormContext, Context, RowContext } from './context';\r\nimport { FormRes, formRes } from './formRes';\r\nimport { resLang } from '../res';\r\n\r\nexport type FormButtonClick = (name:string, context: Context) => Promise<any>;\r\n\r\nexport interface FormProps {\r\n    className?: string;\r\n    schema: Schema;\r\n    uiSchema?: UiSchema;\r\n    formData?: any;\r\n    onButtonClick?: FormButtonClick;\r\n    //onSubmit?: FormButtonClick;\r\n    Container?: (content:JSX.Element) => JSX.Element;\r\n    FieldContainer?: (label:string|JSX.Element, content:JSX.Element) => JSX.Element;\r\n    FieldClass?: string;\r\n    ArrContainer?: (label:any, content:JSX.Element) => JSX.Element;\r\n    RowContainer?: (content:JSX.Element) => JSX.Element;\r\n    //ArrFieldContainer?: (itemName:string, content:JSX.Element, context:RowContext) => JSX.Element;\r\n    ButtonClass?: string;\r\n    RowSeperator?: JSX.Element;\r\n    fieldLabelSize?: number;            // col-sm-2 for label\r\n    requiredFlag?: boolean;             // default=true\r\n    beforeShow?: (formContext:FormContext) => void;\r\n    res?: FormRes;\r\n}\r\n\r\nexport class Form extends React.Component<FormProps> {\r\n    readonly schema: Schema;\r\n    readonly itemSchemas: {[name:string]: ItemSchema};\r\n    readonly uiSchema: UiSchema;\r\n    readonly Container: (content:JSX.Element) => JSX.Element;\r\n    readonly FieldContainer: (label:any, content:JSX.Element) => JSX.Element;\r\n    readonly FieldClass: string;\r\n    readonly ArrContainer: (label:any, content:JSX.Element) => JSX.Element;\r\n    readonly RowContainer: (content:JSX.Element) => JSX.Element;\r\n    //readonly ArrFieldContainer: (label:any, content:JSX.Element, context:RowContext) => JSX.Element;\r\n    readonly ButtonClass: string;\r\n    readonly RowSeperator: JSX.Element;\r\n    readonly res?: FormRes;\r\n    protected formContext: FormContext;\r\n    private content: any;\r\n    @observable readonly data:any;\r\n\r\n    constructor(props:FormProps) {\r\n        super(props);\r\n        let {schema, uiSchema, formData, \r\n            Container, FieldContainer, FieldClass, \r\n            ArrContainer, RowContainer, //ArrFieldContainer, \r\n            ButtonClass, RowSeperator,\r\n            res,\r\n        } = props;\r\n        this.Container = Container || this.DefaultContainer;\r\n        this.FieldContainer = FieldContainer || this.DefaultFieldContainer;\r\n        this.FieldClass = FieldClass!==undefined && FieldClass!==''&&FieldClass!==null? FieldClass : this.DefaultFieldClass;\r\n        this.ArrContainer = ArrContainer || this.DefaultArrContainer;\r\n        this.RowContainer = RowContainer || this.DefaultRowContainer;\r\n        //this.ArrFieldContainer = ArrFieldContainer || this.DefaultArrFieldContainer;\r\n        this.res = res || this.DefaultRes;\r\n        this.ButtonClass = ButtonClass || this.DefaultButtonClass;\r\n        this.RowSeperator = RowSeperator || this.DefaultRowSeperator;\r\n        this.schema = schema;\r\n        this.itemSchemas = {};\r\n        this.uiSchema = uiSchema;\r\n        this.data = {};\r\n        if (formData === undefined) formData = {};\r\n        for (let itemSchema of schema) {\r\n            let {name, type} = itemSchema;\r\n            this.itemSchemas[name] = itemSchema;\r\n            if (type === 'button') {\r\n            }\r\n            else if (type === 'arr') {\r\n                let arrItem:ArrSchema = itemSchema as ArrSchema;\r\n                let {arr:arrItems} = arrItem;\r\n                if (arrItems === undefined) continue;\r\n                let arrDict = arrItem.itemSchemas = {};\r\n                for (let item of arrItems) {\r\n                    arrDict[item.name] = item;\r\n                }\r\n                let val:any[] = formData[name];\r\n                if (val === undefined) val = [{}];\r\n                else if (Array.isArray(val) === false) val = [val];\r\n                let arr:any[] = [];\r\n                for (let row of val) {\r\n                    let r = {};\r\n                    for (let item of arrItems) {\r\n                        let {name:nm} = item;\r\n                        let v = row[nm];\r\n                        if (v === undefined) v = null;\r\n                        r[nm] = v;\r\n                    }\r\n                    arr.push(r);\r\n                }\r\n                this.data[name] = observable(arr);\r\n            }\r\n            else {\r\n                this.data[name] = formData[name];\r\n            }\r\n        }\r\n        let inNode:boolean = this.props.children !== undefined || this.uiSchema && this.uiSchema.Templet !== undefined;\r\n        //this.formContext = new FormContext(this, inNode);\r\n        let {children} = this.props;\r\n        //let content:JSX.Element; //, inNode:boolean;\r\n        //let formContext: FormContext;\r\n        if (children !== undefined) {\r\n            //inNode = true;\r\n            this.content = <>{children}</>;\r\n            this.formContext = new FormContext(this, true);\r\n        }\r\n        else {\r\n            let Templet: TempletType;\r\n            if (this.uiSchema !== undefined) {\r\n                Templet = this.uiSchema.Templet;\r\n            }\r\n            if (Templet !== undefined) {\r\n                // inNode = true;\r\n                this.content = typeof(Templet) === 'function'? Templet(this.context) : Templet;\r\n                this.formContext = new FormContext(this, true);\r\n            }\r\n            else {\r\n                // inNode = false;\r\n                this.formContext = new FormContext(this, false);\r\n                this.content = <>{this.schema.map((v, index) => {\r\n                    return <React.Fragment key={index}>{factory(this.formContext, v, children)}</React.Fragment>\r\n                })}</>;\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let {beforeShow} = this.props;\r\n        if (beforeShow !== undefined) beforeShow(this.formContext);\r\n    }\r\n\r\n    render() {\r\n        return <ContextContainer.Provider value={this.formContext}>\r\n            <this.formContext.renderErrors />\r\n            {this.Container(this.content)}\r\n        </ContextContainer.Provider>;\r\n    }\r\n\r\n    protected DefaultContainer = (content:JSX.Element): JSX.Element => {\r\n        return <form className={classNames(this.props.className)}>\r\n            {content}\r\n        </form>;\r\n    }\r\n    /*\r\n    protected DefaultArrFieldContainer = (itemName:string, content:JSX.Element, context:RowContext): JSX.Element => {\r\n        return this.InnerFieldContainer(itemName, content, context);\r\n    }*/\r\n    protected DefaultFieldContainer = (label:string|JSX.Element, content:JSX.Element): JSX.Element => {\r\n        //return this.InnerFieldContainer(itemName, content, context);\r\n        let {fieldLabelSize} = this.props;\r\n\r\n        if (fieldLabelSize > 0) {\r\n            let labelView:any;\r\n            if (label === null) {\r\n                fieldLabelSize = 0;\r\n            }\r\n            else {\r\n                labelView = <label className={classNames('col-sm-' + fieldLabelSize, 'col-form-label')}>{label}</label>\r\n            }\r\n            let fieldCol = 'col-sm-' + (12 - fieldLabelSize);\r\n            return <div className=\"form-group row\">\r\n                {labelView}\r\n                <div className={fieldCol}>{content}</div>\r\n            </div>;\r\n        }\r\n        return <div className=\"form-group\">\r\n            {label===null? null:<label className=\"col-form-label\">{label}</label>}\r\n            {content}\r\n        </div>;\r\n    }\r\n    protected DefaultFieldClass:string = undefined;\r\n    protected DefaultArrContainer = (label:any, content:JSX.Element): JSX.Element => {\r\n        return <div>\r\n            <div className={classNames('small text-muted text-center bg-light py-1 px-3 mt-4 mb-1')}>{label}</div>\r\n            {content}\r\n        </div>;\r\n    }\r\n    protected DefaultRowContainer = (content:JSX.Element): JSX.Element => {\r\n        //return <div className=\"row\">{content}</div>;\r\n        let cn = classNames({\r\n            'py-3': true\r\n        });\r\n        return <div className={cn}>{content}</div>\r\n    }\r\n    protected DefaultButtonClass = 'text-center py-2';\r\n    protected DefaultRowSeperator = <div className=\"border border-gray border-top\" />;\r\n    protected DefaultRes:FormRes = resLang<FormRes>(formRes);\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport { IObservableValue } from 'mobx/lib/internal';\r\n\r\nexport type TabCaption = (selected:boolean) => JSX.Element;\r\n\r\nexport interface TabProp {\r\n    name: string;\r\n    caption: TabCaption;\r\n    content: () => JSX.Element;\r\n    notify?: IObservableValue<number>;\r\n}\r\n\r\nexport interface TabsProps {\r\n    tabs: TabProp[];\r\n    size?: 'sm' | 'lg' | 'md';\r\n    tabBack?: string;\r\n    contentBack?: string;\r\n    sep?: string;\r\n    selected?: string;\r\n}\r\n\r\nclass Tab {\r\n    name: string;\r\n    @observable selected: boolean;\r\n    caption: TabCaption;\r\n    contentBuilder: ()=>JSX.Element;\r\n    notify: IObservableValue<number>;\r\n\r\n    private _content: JSX.Element;\r\n    get content(): JSX.Element {\r\n        if (this.selected !== true) return this._content;\r\n        if (this._content !== undefined) return this._content;\r\n        return this._content = this.contentBuilder();\r\n    }\r\n}\r\n\r\nexport const TabCaptionComponent = (label:string, icon:string, color:string) => <div \r\n    className={'d-flex justify-content-center align-items-center flex-column cursor-pointer ' + color}>\r\n    <div><i className={'fa fa-lg fa-' + icon} /></div>\r\n    <small>{label}</small>\r\n</div>;\r\n\r\n@observer export class Tabs extends React.Component<TabsProps> {\r\n    private size: string;\r\n    private tabBack: string;\r\n    private contentBack: string;\r\n    private sep: string;\r\n    @observable private selectedTab: Tab;\r\n    @observable private tabs: Tab[] = [];\r\n\r\n    constructor(props: TabsProps) {\r\n        super(props);\r\n        let {size, tabs, tabBack, contentBack, sep, selected} = this.props;\r\n        switch (size) {\r\n            default:\r\n            case 'md': this.size = '3.2rem'; break;\r\n            case 'sm': this.size = '4rem'; break;\r\n            case 'lg': this.size = '2.5rem'; break;\r\n        }\r\n        this.tabs.push(...tabs.map(v => {\r\n                let tab = new Tab();\r\n                tab.name = v.name;\r\n                tab.selected = false;\r\n                tab.caption = v.caption;\r\n                tab.contentBuilder = v.content;\r\n                tab.notify = v.notify;\r\n                return tab;\r\n            }\r\n        ));\r\n        this.tabBack = tabBack || 'bg-light';\r\n        this.contentBack = contentBack;\r\n        this.sep = sep || 'border-top border-gray';\r\n        if (selected !== undefined) {\r\n            this.selectedTab = this.tabs.find(v => v.name === selected);\r\n        }\r\n        if (this.selectedTab === undefined) this.selectedTab = this.tabs[0];\r\n        this.selectedTab.selected = true;\r\n    }\r\n\r\n    private tabClick = (tab:Tab) => {\r\n        this.selectedTab.selected = false;\r\n        tab.selected = true;\r\n        this.selectedTab = tab;\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"tab\">\r\n            <div className={this.contentBack} style={{height: 'calc(100% - ' + this.size + ')'}}>\r\n                {this.tabs.map((v,index) => {\r\n                    let style:React.CSSProperties={\r\n                        display: v.selected===true? undefined : 'none'};\r\n                    return <div key={index} style={style}>{v.content}</div>;\r\n                })}\r\n            </div>\r\n            <div className={classNames(this.tabBack, this.sep)} style={{height: this.size}}>\r\n                {this.tabs.map((v,index) => {\r\n                    let {selected, caption, notify} = v;\r\n                    let notifyCircle:any;\r\n                    if (notify !== undefined) {\r\n                        let num = notify.get();\r\n                        if (num !== undefined) {\r\n                            if (num > 0) notifyCircle = <u>{num>99?'99+':num}</u>;\r\n                            else if (num < 0) notifyCircle = <u className=\"dot\" />;\r\n                        }\r\n                    }\r\n                    return <div key={index} className=\"\" onClick={()=>this.tabClick(v)}>\r\n                        <div className=\"align-self-center\">\r\n                            {notifyCircle}\r\n                            {caption(selected)}\r\n                        </div>\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </div>\r\n    }\r\n};\r\n","export * from './tabs';\r\n","\r\nimport {setCenterToken} from './usqApi';\r\nimport {WSChannel} from './wsChannel';\r\n\r\nexport const netToken = {\r\n    set(token:string) {\r\n        setCenterToken(token);\r\n        WSChannel.setCenterToken(token);\r\n    },\r\n    clear() {\r\n        setCenterToken(undefined);\r\n        WSChannel.setCenterToken(undefined);\r\n    }\r\n};\r\n","import * as React from 'react';\r\nimport {FetchError} from '../fetchError';\r\nimport { refetchApi } from '../net';\r\n\r\nexport interface FetchErrorProps extends FetchError {\r\n    clearError: ()=>void\r\n}\r\n\r\nexport default class FetchErrorView extends React.Component<FetchErrorProps, null> {\r\n    private reApi = async () => {\r\n        this.props.clearError();\r\n        const {channel, url, options, resolve, reject} = this.props;\r\n        await refetchApi(channel, url, options, resolve, reject);\r\n    }\r\n    private close = async () => {\r\n        this.props.clearError();\r\n    }\r\n    render() {\r\n        let {error, url} = this.props;\r\n            //let errMsg = fetchError.errorMsg;\r\n        let errContent;\r\n        if (typeof error === 'object') {\r\n            let err = [];\r\n            for (let i in error) {\r\n                err.push(<li key={i}><label>{i}</label><div>{error[i]}</div></li>);\r\n            }\r\n            errContent = <ul>{err}</ul>;\r\n        }\r\n        else {\r\n            errContent = <div>{error}</div>;\r\n        }\r\n        return <li>\r\n            <article className=\"page-container\">\r\n                <section>\r\n                    <div  className=\"va-error\">\r\n                        <div>网络出现问题</div>\r\n                        <div>点击重新访问</div>\r\n                        <div>url: {url}</div>\r\n                        {errContent}\r\n                        <div className=\"p-3\">\r\n                            <button type='button' onClick={this.reApi}>重新API</button>\r\n                            <button type='button' onClick={this.close}>关闭</button>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </article>\r\n        </li>;\r\n    }\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import * as React from 'react';\r\nimport Loadable from 'react-loadable';\r\nimport { Loading } from 'tonva-tools';\r\n\r\nexport const homeTab = () => {\r\n    let LoadableComponent = Loadable({\r\n        loader: () => import('./tab'),\r\n        loading: Loading\r\n    });\r\n    return <LoadableComponent />;\r\n}\r\n","import * as React from 'react';\r\nimport { TabCaptionComponent } from 'tonva-tools';\r\nimport {store} from './store';\r\nimport {homeTab} from './home';\r\nimport {memberTab} from './member';\r\nimport {cartTab} from './cart';\r\nimport {meTab} from './me';\r\n\r\nconst color = (selected:boolean) => selected===true? 'text-primary' : 'text-muted';\r\nexport const faceTabs = [\r\n    {name: 'home', label: '首页', icon: 'home', content: homeTab, notify: store.homeCount},\r\n    {name: 'member', label: '会员', icon: 'vcard', content: memberTab},\r\n    {name: 'cart', label: '购物车', icon: 'shopping-cart', content: cartTab, notify: store.cartCount},\r\n    {name: 'me', label: '我的', icon: 'user', content: meTab}\r\n].map(v => {\r\n    let {name, label, icon, content, notify} = v;\r\n    return {\r\n        name: name,\r\n        caption: (selected:boolean) => TabCaptionComponent(label, icon, color(selected)),\r\n        content: content,\r\n        notify: notify,\r\n    }\r\n});\r\n","import * as React from 'react';\r\nimport Loadable from 'react-loadable';\r\nimport { Loading } from 'tonva-tools';\r\n\r\nexport const memberTab = () => {\r\n    let LoadableComponent = Loadable({\r\n        loader: () => import('./tab'),\r\n        loading: Loading,\r\n        render(loaded, props) {\r\n            let tc = new loaded.TabController();\r\n            tc.start();\r\n            return <tc.render />;\r\n        }\r\n    });\r\n    return <LoadableComponent />;\r\n}\r\n","import * as React from 'react';\r\nimport Loadable from 'react-loadable';\r\nimport { Loading } from 'tonva-tools';\r\n\r\nexport const cartTab = () => {\r\n    let LoadableComponent = Loadable({\r\n        loader: () => import('./tab'),\r\n        loading: Loading\r\n    });\r\n    return <LoadableComponent />;\r\n}\r\n","import * as React from 'react';\r\nimport Loadable from 'react-loadable';\r\nimport { Loading } from 'tonva-tools';\r\n\r\nexport const meTab = () => {\r\n    let LoadableComponent = Loadable({\r\n        loader: () => import('./tab'),\r\n        loading: Loading\r\n    });\r\n    return <LoadableComponent />;\r\n}\r\n","import * as React from 'react';\nimport './App.css';\nimport { Page, Tabs, NavView, nav } from 'tonva-tools';\nimport { faceTabs } from 'face';\n\nclass App extends React.Component {\n  render() {\n      let page = <Page header={false}><Tabs tabs={faceTabs} /></Page>;\n      return <NavView onLogined={async () => nav.push(page)} />;\n  }\n}\n\nexport default App;","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport './index.css';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}